{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { setFillingColor, setStrokingColor } from \"./colors\";\nimport { beginText, closePath, drawObject, endText, fill, fillAndStroke, lineTo, moveTo, nextLine, popGraphicsState, pushGraphicsState, rotateAndSkewTextRadiansAndTranslate, rotateRadians, scale, setFontAndSize, setLineHeight, setLineWidth, showText, skewRadians, stroke, translate, setLineCap, rotateDegrees, setGraphicsState, setDashPattern, beginMarkedContent, endMarkedContent, clip, endPath, appendBezierCurve } from \"./operators\";\nimport { degrees, toRadians } from \"./rotations\";\nimport { svgPathToOperators } from \"./svgPath\";\nimport { asNumber } from \"./objects\";\nexport var drawText = function (line, options) {\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), beginText(), setFillingColor(options.color), setFontAndSize(options.font, options.size), rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y), showText(line), endText(), popGraphicsState()].filter(Boolean);\n};\nexport var drawLinesOfText = function (lines, options) {\n  var operators = [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), beginText(), setFillingColor(options.color), setFontAndSize(options.font, options.size), setLineHeight(options.lineHeight), rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y)].filter(Boolean);\n  for (var idx = 0, len = lines.length; idx < len; idx++) {\n    operators.push(showText(lines[idx]), nextLine());\n  }\n  operators.push(endText(), popGraphicsState());\n  return operators;\n};\nexport var drawImage = function (name, options) {\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), translate(options.x, options.y), rotateRadians(toRadians(options.rotate)), scale(options.width, options.height), skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)), drawObject(name), popGraphicsState()].filter(Boolean);\n};\nexport var drawPage = function (name, options) {\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), translate(options.x, options.y), rotateRadians(toRadians(options.rotate)), scale(options.xScale, options.yScale), skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)), drawObject(name), popGraphicsState()].filter(Boolean);\n};\nexport var drawLine = function (options) {\n  var _a, _b;\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), options.color && setStrokingColor(options.color), setLineWidth(options.thickness), setDashPattern((_a = options.dashArray) !== null && _a !== void 0 ? _a : [], (_b = options.dashPhase) !== null && _b !== void 0 ? _b : 0), moveTo(options.start.x, options.start.y), options.lineCap && setLineCap(options.lineCap), moveTo(options.start.x, options.start.y), lineTo(options.end.x, options.end.y), stroke(), popGraphicsState()].filter(Boolean);\n};\nexport var drawRectangle = function (options) {\n  var _a, _b;\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), options.color && setFillingColor(options.color), options.borderColor && setStrokingColor(options.borderColor), setLineWidth(options.borderWidth), options.borderLineCap && setLineCap(options.borderLineCap), setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0), translate(options.x, options.y), rotateRadians(toRadians(options.rotate)), skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)), moveTo(0, 0), lineTo(0, options.height), lineTo(options.width, options.height), lineTo(options.width, 0), closePath(),\n  // prettier-ignore\n  options.color && options.borderWidth ? fillAndStroke() : options.color ? fill() : options.borderColor ? stroke() : closePath(), popGraphicsState()].filter(Boolean);\n};\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n/** @deprecated */\nexport var drawEllipsePath = function (config) {\n  var x = asNumber(config.x);\n  var y = asNumber(config.y);\n  var xScale = asNumber(config.xScale);\n  var yScale = asNumber(config.yScale);\n  x -= xScale;\n  y -= yScale;\n  var ox = xScale * KAPPA;\n  var oy = yScale * KAPPA;\n  var xe = x + xScale * 2;\n  var ye = y + yScale * 2;\n  var xm = x + xScale;\n  var ym = y + yScale;\n  return [pushGraphicsState(), moveTo(x, ym), appendBezierCurve(x, ym - oy, xm - ox, y, xm, y), appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym), appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye), appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym), popGraphicsState()];\n};\nvar drawEllipseCurves = function (config) {\n  var centerX = asNumber(config.x);\n  var centerY = asNumber(config.y);\n  var xScale = asNumber(config.xScale);\n  var yScale = asNumber(config.yScale);\n  var x = -xScale;\n  var y = -yScale;\n  var ox = xScale * KAPPA;\n  var oy = yScale * KAPPA;\n  var xe = x + xScale * 2;\n  var ye = y + yScale * 2;\n  var xm = x + xScale;\n  var ym = y + yScale;\n  return [translate(centerX, centerY), rotateRadians(toRadians(config.rotate)), moveTo(x, ym), appendBezierCurve(x, ym - oy, xm - ox, y, xm, y), appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym), appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye), appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym)];\n};\nexport var drawEllipse = function (options) {\n  var _a, _b, _c;\n  return __spreadArrays([pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), options.color && setFillingColor(options.color), options.borderColor && setStrokingColor(options.borderColor), setLineWidth(options.borderWidth), options.borderLineCap && setLineCap(options.borderLineCap), setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0)], options.rotate === undefined ? drawEllipsePath({\n    x: options.x,\n    y: options.y,\n    xScale: options.xScale,\n    yScale: options.yScale\n  }) : drawEllipseCurves({\n    x: options.x,\n    y: options.y,\n    xScale: options.xScale,\n    yScale: options.yScale,\n    rotate: (_c = options.rotate) !== null && _c !== void 0 ? _c : degrees(0)\n  }), [\n  // prettier-ignore\n  options.color && options.borderWidth ? fillAndStroke() : options.color ? fill() : options.borderColor ? stroke() : closePath(), popGraphicsState()]).filter(Boolean);\n};\nexport var drawSvgPath = function (path, options) {\n  var _a, _b, _c;\n  return __spreadArrays([pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), translate(options.x, options.y), rotateRadians(toRadians((_a = options.rotate) !== null && _a !== void 0 ? _a : degrees(0))),\n  // SVG path Y axis is opposite pdf-lib's\n  options.scale ? scale(options.scale, -options.scale) : scale(1, -1), options.color && setFillingColor(options.color), options.borderColor && setStrokingColor(options.borderColor), options.borderWidth && setLineWidth(options.borderWidth), options.borderLineCap && setLineCap(options.borderLineCap), setDashPattern((_b = options.borderDashArray) !== null && _b !== void 0 ? _b : [], (_c = options.borderDashPhase) !== null && _c !== void 0 ? _c : 0)], svgPathToOperators(path), [\n  // prettier-ignore\n  options.color && options.borderWidth ? fillAndStroke() : options.color ? fill() : options.borderColor ? stroke() : closePath(), popGraphicsState()]).filter(Boolean);\n};\nexport var drawCheckMark = function (options) {\n  var size = asNumber(options.size);\n  /*********************** Define Check Mark Points ***************************/\n  // A check mark is defined by three points in some coordinate space. Here, we\n  // define these points in a unit coordinate system, where the range of the x\n  // and y axis are both [-1, 1].\n  //\n  // Note that we do not hard code `p1y` in case we wish to change the\n  // size/shape of the check mark in the future. We want the check mark to\n  // always form a right angle. This means that the dot product between (p1-p2)\n  // and (p3-p2) should be zero:\n  //\n  //   (p1x-p2x) * (p3x-p2x) + (p1y-p2y) * (p3y-p2y) = 0\n  //\n  // We can now rejigger this equation to solve for `p1y`:\n  //\n  //   (p1y-p2y) * (p3y-p2y) = -((p1x-p2x) * (p3x-p2x))\n  //   (p1y-p2y) = -((p1x-p2x) * (p3x-p2x)) / (p3y-p2y)\n  //   p1y = -((p1x-p2x) * (p3x-p2x)) / (p3y-p2y) + p2y\n  //\n  // Thanks to my friend Joel Walker (https://github.com/JWalker1995) for\n  // devising the above equation and unit coordinate system approach!\n  // (x, y) coords of the check mark's bottommost point\n  var p2x = -1 + 0.75;\n  var p2y = -1 + 0.51;\n  // (x, y) coords of the check mark's topmost point\n  var p3y = 1 - 0.525;\n  var p3x = 1 - 0.31;\n  // (x, y) coords of the check mark's center (vertically) point\n  var p1x = -1 + 0.325;\n  var p1y = -((p1x - p2x) * (p3x - p2x)) / (p3y - p2y) + p2y;\n  /****************************************************************************/\n  return [pushGraphicsState(), options.color && setStrokingColor(options.color), setLineWidth(options.thickness), translate(options.x, options.y), moveTo(p1x * size, p1y * size), lineTo(p2x * size, p2y * size), lineTo(p3x * size, p3y * size), stroke(), popGraphicsState()].filter(Boolean);\n};\n// prettier-ignore\nexport var rotateInPlace = function (options) {\n  return options.rotation === 0 ? [translate(0, 0), rotateDegrees(0)] : options.rotation === 90 ? [translate(options.width, 0), rotateDegrees(90)] : options.rotation === 180 ? [translate(options.width, options.height), rotateDegrees(180)] : options.rotation === 270 ? [translate(0, options.height), rotateDegrees(270)] : [];\n}; // Invalid rotation - noop\nexport var drawCheckBox = function (options) {\n  var outline = drawRectangle({\n    x: options.x,\n    y: options.y,\n    width: options.width,\n    height: options.height,\n    borderWidth: options.borderWidth,\n    color: options.color,\n    borderColor: options.borderColor,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  if (!options.filled) return outline;\n  var width = asNumber(options.width);\n  var height = asNumber(options.height);\n  var checkMarkSize = Math.min(width, height) / 2;\n  var checkMark = drawCheckMark({\n    x: width / 2,\n    y: height / 2,\n    size: checkMarkSize,\n    thickness: options.thickness,\n    color: options.markColor\n  });\n  return __spreadArrays([pushGraphicsState()], outline, checkMark, [popGraphicsState()]);\n};\nexport var drawRadioButton = function (options) {\n  var width = asNumber(options.width);\n  var height = asNumber(options.height);\n  var outlineScale = Math.min(width, height) / 2;\n  var outline = drawEllipse({\n    x: options.x,\n    y: options.y,\n    xScale: outlineScale,\n    yScale: outlineScale,\n    color: options.color,\n    borderColor: options.borderColor,\n    borderWidth: options.borderWidth\n  });\n  if (!options.filled) return outline;\n  var dot = drawEllipse({\n    x: options.x,\n    y: options.y,\n    xScale: outlineScale * 0.45,\n    yScale: outlineScale * 0.45,\n    color: options.dotColor,\n    borderColor: undefined,\n    borderWidth: 0\n  });\n  return __spreadArrays([pushGraphicsState()], outline, dot, [popGraphicsState()]);\n};\nexport var drawButton = function (options) {\n  var x = asNumber(options.x);\n  var y = asNumber(options.y);\n  var width = asNumber(options.width);\n  var height = asNumber(options.height);\n  var background = drawRectangle({\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    borderWidth: options.borderWidth,\n    color: options.color,\n    borderColor: options.borderColor,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  var lines = drawTextLines(options.textLines, {\n    color: options.textColor,\n    font: options.font,\n    size: options.fontSize,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  return __spreadArrays([pushGraphicsState()], background, lines, [popGraphicsState()]);\n};\nexport var drawTextLines = function (lines, options) {\n  var operators = [beginText(), setFillingColor(options.color), setFontAndSize(options.font, options.size)];\n  for (var idx = 0, len = lines.length; idx < len; idx++) {\n    var _a = lines[idx],\n      encoded = _a.encoded,\n      x = _a.x,\n      y = _a.y;\n    operators.push(rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), x, y), showText(encoded));\n  }\n  operators.push(endText());\n  return operators;\n};\nexport var drawTextField = function (options) {\n  var x = asNumber(options.x);\n  var y = asNumber(options.y);\n  var width = asNumber(options.width);\n  var height = asNumber(options.height);\n  var borderWidth = asNumber(options.borderWidth);\n  var padding = asNumber(options.padding);\n  var clipX = x + borderWidth / 2 + padding;\n  var clipY = y + borderWidth / 2 + padding;\n  var clipWidth = width - (borderWidth / 2 + padding) * 2;\n  var clipHeight = height - (borderWidth / 2 + padding) * 2;\n  var clippingArea = [moveTo(clipX, clipY), lineTo(clipX, clipY + clipHeight), lineTo(clipX + clipWidth, clipY + clipHeight), lineTo(clipX + clipWidth, clipY), closePath(), clip(), endPath()];\n  var background = drawRectangle({\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    borderWidth: options.borderWidth,\n    color: options.color,\n    borderColor: options.borderColor,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  var lines = drawTextLines(options.textLines, {\n    color: options.textColor,\n    font: options.font,\n    size: options.fontSize,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  var markedContent = __spreadArrays([beginMarkedContent('Tx'), pushGraphicsState()], lines, [popGraphicsState(), endMarkedContent()]);\n  return __spreadArrays([pushGraphicsState()], background, clippingArea, markedContent, [popGraphicsState()]);\n};\nexport var drawOptionList = function (options) {\n  var x = asNumber(options.x);\n  var y = asNumber(options.y);\n  var width = asNumber(options.width);\n  var height = asNumber(options.height);\n  var lineHeight = asNumber(options.lineHeight);\n  var borderWidth = asNumber(options.borderWidth);\n  var padding = asNumber(options.padding);\n  var clipX = x + borderWidth / 2 + padding;\n  var clipY = y + borderWidth / 2 + padding;\n  var clipWidth = width - (borderWidth / 2 + padding) * 2;\n  var clipHeight = height - (borderWidth / 2 + padding) * 2;\n  var clippingArea = [moveTo(clipX, clipY), lineTo(clipX, clipY + clipHeight), lineTo(clipX + clipWidth, clipY + clipHeight), lineTo(clipX + clipWidth, clipY), closePath(), clip(), endPath()];\n  var background = drawRectangle({\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    borderWidth: options.borderWidth,\n    color: options.color,\n    borderColor: options.borderColor,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  var highlights = [];\n  for (var idx = 0, len = options.selectedLines.length; idx < len; idx++) {\n    var line = options.textLines[options.selectedLines[idx]];\n    highlights.push.apply(highlights, drawRectangle({\n      x: line.x - padding,\n      y: line.y - (lineHeight - line.height) / 2,\n      width: width - borderWidth,\n      height: line.height + (lineHeight - line.height) / 2,\n      borderWidth: 0,\n      color: options.selectedColor,\n      borderColor: undefined,\n      rotate: degrees(0),\n      xSkew: degrees(0),\n      ySkew: degrees(0)\n    }));\n  }\n  var lines = drawTextLines(options.textLines, {\n    color: options.textColor,\n    font: options.font,\n    size: options.fontSize,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  var markedContent = __spreadArrays([beginMarkedContent('Tx'), pushGraphicsState()], lines, [popGraphicsState(), endMarkedContent()]);\n  return __spreadArrays([pushGraphicsState()], background, highlights, clippingArea, markedContent, [popGraphicsState()]);\n};","map":{"version":3,"names":["__spreadArrays","setFillingColor","setStrokingColor","beginText","closePath","drawObject","endText","fill","fillAndStroke","lineTo","moveTo","nextLine","popGraphicsState","pushGraphicsState","rotateAndSkewTextRadiansAndTranslate","rotateRadians","scale","setFontAndSize","setLineHeight","setLineWidth","showText","skewRadians","stroke","translate","setLineCap","rotateDegrees","setGraphicsState","setDashPattern","beginMarkedContent","endMarkedContent","clip","endPath","appendBezierCurve","degrees","toRadians","svgPathToOperators","asNumber","drawText","line","options","graphicsState","color","font","size","rotate","xSkew","ySkew","x","y","filter","Boolean","drawLinesOfText","lines","operators","lineHeight","idx","len","length","push","drawImage","name","width","height","drawPage","xScale","yScale","drawLine","_a","_b","thickness","dashArray","dashPhase","start","lineCap","end","drawRectangle","borderColor","borderWidth","borderLineCap","borderDashArray","borderDashPhase","KAPPA","Math","sqrt","drawEllipsePath","config","ox","oy","xe","ye","xm","ym","drawEllipseCurves","centerX","centerY","drawEllipse","_c","undefined","drawSvgPath","path","drawCheckMark","p2x","p2y","p3y","p3x","p1x","p1y","rotateInPlace","rotation","drawCheckBox","outline","filled","checkMarkSize","min","checkMark","markColor","drawRadioButton","outlineScale","dot","dotColor","drawButton","background","drawTextLines","textLines","textColor","fontSize","encoded","drawTextField","padding","clipX","clipY","clipWidth","clipHeight","clippingArea","markedContent","drawOptionList","highlights","selectedLines","apply","selectedColor"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/api/operations.js"],"sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport { setFillingColor, setStrokingColor } from \"./colors\";\nimport { beginText, closePath, drawObject, endText, fill, fillAndStroke, lineTo, moveTo, nextLine, popGraphicsState, pushGraphicsState, rotateAndSkewTextRadiansAndTranslate, rotateRadians, scale, setFontAndSize, setLineHeight, setLineWidth, showText, skewRadians, stroke, translate, setLineCap, rotateDegrees, setGraphicsState, setDashPattern, beginMarkedContent, endMarkedContent, clip, endPath, appendBezierCurve, } from \"./operators\";\nimport { degrees, toRadians } from \"./rotations\";\nimport { svgPathToOperators } from \"./svgPath\";\nimport { asNumber } from \"./objects\";\nexport var drawText = function (line, options) {\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        beginText(),\n        setFillingColor(options.color),\n        setFontAndSize(options.font, options.size),\n        rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y),\n        showText(line),\n        endText(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawLinesOfText = function (lines, options) {\n    var operators = [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        beginText(),\n        setFillingColor(options.color),\n        setFontAndSize(options.font, options.size),\n        setLineHeight(options.lineHeight),\n        rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y),\n    ].filter(Boolean);\n    for (var idx = 0, len = lines.length; idx < len; idx++) {\n        operators.push(showText(lines[idx]), nextLine());\n    }\n    operators.push(endText(), popGraphicsState());\n    return operators;\n};\nexport var drawImage = function (name, options) {\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        translate(options.x, options.y),\n        rotateRadians(toRadians(options.rotate)),\n        scale(options.width, options.height),\n        skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)),\n        drawObject(name),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawPage = function (name, options) {\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        translate(options.x, options.y),\n        rotateRadians(toRadians(options.rotate)),\n        scale(options.xScale, options.yScale),\n        skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)),\n        drawObject(name),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawLine = function (options) {\n    var _a, _b;\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        options.color && setStrokingColor(options.color),\n        setLineWidth(options.thickness),\n        setDashPattern((_a = options.dashArray) !== null && _a !== void 0 ? _a : [], (_b = options.dashPhase) !== null && _b !== void 0 ? _b : 0),\n        moveTo(options.start.x, options.start.y),\n        options.lineCap && setLineCap(options.lineCap),\n        moveTo(options.start.x, options.start.y),\n        lineTo(options.end.x, options.end.y),\n        stroke(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawRectangle = function (options) {\n    var _a, _b;\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        options.color && setFillingColor(options.color),\n        options.borderColor && setStrokingColor(options.borderColor),\n        setLineWidth(options.borderWidth),\n        options.borderLineCap && setLineCap(options.borderLineCap),\n        setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0),\n        translate(options.x, options.y),\n        rotateRadians(toRadians(options.rotate)),\n        skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)),\n        moveTo(0, 0),\n        lineTo(0, options.height),\n        lineTo(options.width, options.height),\n        lineTo(options.width, 0),\n        closePath(),\n        // prettier-ignore\n        options.color && options.borderWidth ? fillAndStroke()\n            : options.color ? fill()\n                : options.borderColor ? stroke()\n                    : closePath(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n/** @deprecated */\nexport var drawEllipsePath = function (config) {\n    var x = asNumber(config.x);\n    var y = asNumber(config.y);\n    var xScale = asNumber(config.xScale);\n    var yScale = asNumber(config.yScale);\n    x -= xScale;\n    y -= yScale;\n    var ox = xScale * KAPPA;\n    var oy = yScale * KAPPA;\n    var xe = x + xScale * 2;\n    var ye = y + yScale * 2;\n    var xm = x + xScale;\n    var ym = y + yScale;\n    return [\n        pushGraphicsState(),\n        moveTo(x, ym),\n        appendBezierCurve(x, ym - oy, xm - ox, y, xm, y),\n        appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym),\n        appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye),\n        appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym),\n        popGraphicsState(),\n    ];\n};\nvar drawEllipseCurves = function (config) {\n    var centerX = asNumber(config.x);\n    var centerY = asNumber(config.y);\n    var xScale = asNumber(config.xScale);\n    var yScale = asNumber(config.yScale);\n    var x = -xScale;\n    var y = -yScale;\n    var ox = xScale * KAPPA;\n    var oy = yScale * KAPPA;\n    var xe = x + xScale * 2;\n    var ye = y + yScale * 2;\n    var xm = x + xScale;\n    var ym = y + yScale;\n    return [\n        translate(centerX, centerY),\n        rotateRadians(toRadians(config.rotate)),\n        moveTo(x, ym),\n        appendBezierCurve(x, ym - oy, xm - ox, y, xm, y),\n        appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym),\n        appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye),\n        appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym),\n    ];\n};\nexport var drawEllipse = function (options) {\n    var _a, _b, _c;\n    return __spreadArrays([\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        options.color && setFillingColor(options.color),\n        options.borderColor && setStrokingColor(options.borderColor),\n        setLineWidth(options.borderWidth),\n        options.borderLineCap && setLineCap(options.borderLineCap),\n        setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0)\n    ], (options.rotate === undefined\n        ? drawEllipsePath({\n            x: options.x,\n            y: options.y,\n            xScale: options.xScale,\n            yScale: options.yScale,\n        })\n        : drawEllipseCurves({\n            x: options.x,\n            y: options.y,\n            xScale: options.xScale,\n            yScale: options.yScale,\n            rotate: (_c = options.rotate) !== null && _c !== void 0 ? _c : degrees(0),\n        })), [\n        // prettier-ignore\n        options.color && options.borderWidth ? fillAndStroke()\n            : options.color ? fill()\n                : options.borderColor ? stroke()\n                    : closePath(),\n        popGraphicsState(),\n    ]).filter(Boolean);\n};\nexport var drawSvgPath = function (path, options) {\n    var _a, _b, _c;\n    return __spreadArrays([\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        translate(options.x, options.y),\n        rotateRadians(toRadians((_a = options.rotate) !== null && _a !== void 0 ? _a : degrees(0))),\n        // SVG path Y axis is opposite pdf-lib's\n        options.scale ? scale(options.scale, -options.scale) : scale(1, -1),\n        options.color && setFillingColor(options.color),\n        options.borderColor && setStrokingColor(options.borderColor),\n        options.borderWidth && setLineWidth(options.borderWidth),\n        options.borderLineCap && setLineCap(options.borderLineCap),\n        setDashPattern((_b = options.borderDashArray) !== null && _b !== void 0 ? _b : [], (_c = options.borderDashPhase) !== null && _c !== void 0 ? _c : 0)\n    ], svgPathToOperators(path), [\n        // prettier-ignore\n        options.color && options.borderWidth ? fillAndStroke()\n            : options.color ? fill()\n                : options.borderColor ? stroke()\n                    : closePath(),\n        popGraphicsState(),\n    ]).filter(Boolean);\n};\nexport var drawCheckMark = function (options) {\n    var size = asNumber(options.size);\n    /*********************** Define Check Mark Points ***************************/\n    // A check mark is defined by three points in some coordinate space. Here, we\n    // define these points in a unit coordinate system, where the range of the x\n    // and y axis are both [-1, 1].\n    //\n    // Note that we do not hard code `p1y` in case we wish to change the\n    // size/shape of the check mark in the future. We want the check mark to\n    // always form a right angle. This means that the dot product between (p1-p2)\n    // and (p3-p2) should be zero:\n    //\n    //   (p1x-p2x) * (p3x-p2x) + (p1y-p2y) * (p3y-p2y) = 0\n    //\n    // We can now rejigger this equation to solve for `p1y`:\n    //\n    //   (p1y-p2y) * (p3y-p2y) = -((p1x-p2x) * (p3x-p2x))\n    //   (p1y-p2y) = -((p1x-p2x) * (p3x-p2x)) / (p3y-p2y)\n    //   p1y = -((p1x-p2x) * (p3x-p2x)) / (p3y-p2y) + p2y\n    //\n    // Thanks to my friend Joel Walker (https://github.com/JWalker1995) for\n    // devising the above equation and unit coordinate system approach!\n    // (x, y) coords of the check mark's bottommost point\n    var p2x = -1 + 0.75;\n    var p2y = -1 + 0.51;\n    // (x, y) coords of the check mark's topmost point\n    var p3y = 1 - 0.525;\n    var p3x = 1 - 0.31;\n    // (x, y) coords of the check mark's center (vertically) point\n    var p1x = -1 + 0.325;\n    var p1y = -((p1x - p2x) * (p3x - p2x)) / (p3y - p2y) + p2y;\n    /****************************************************************************/\n    return [\n        pushGraphicsState(),\n        options.color && setStrokingColor(options.color),\n        setLineWidth(options.thickness),\n        translate(options.x, options.y),\n        moveTo(p1x * size, p1y * size),\n        lineTo(p2x * size, p2y * size),\n        lineTo(p3x * size, p3y * size),\n        stroke(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\n// prettier-ignore\nexport var rotateInPlace = function (options) {\n    return options.rotation === 0 ? [\n        translate(0, 0),\n        rotateDegrees(0)\n    ]\n        : options.rotation === 90 ? [\n            translate(options.width, 0),\n            rotateDegrees(90)\n        ]\n            : options.rotation === 180 ? [\n                translate(options.width, options.height),\n                rotateDegrees(180)\n            ]\n                : options.rotation === 270 ? [\n                    translate(0, options.height),\n                    rotateDegrees(270)\n                ]\n                    : [];\n}; // Invalid rotation - noop\nexport var drawCheckBox = function (options) {\n    var outline = drawRectangle({\n        x: options.x,\n        y: options.y,\n        width: options.width,\n        height: options.height,\n        borderWidth: options.borderWidth,\n        color: options.color,\n        borderColor: options.borderColor,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    if (!options.filled)\n        return outline;\n    var width = asNumber(options.width);\n    var height = asNumber(options.height);\n    var checkMarkSize = Math.min(width, height) / 2;\n    var checkMark = drawCheckMark({\n        x: width / 2,\n        y: height / 2,\n        size: checkMarkSize,\n        thickness: options.thickness,\n        color: options.markColor,\n    });\n    return __spreadArrays([pushGraphicsState()], outline, checkMark, [popGraphicsState()]);\n};\nexport var drawRadioButton = function (options) {\n    var width = asNumber(options.width);\n    var height = asNumber(options.height);\n    var outlineScale = Math.min(width, height) / 2;\n    var outline = drawEllipse({\n        x: options.x,\n        y: options.y,\n        xScale: outlineScale,\n        yScale: outlineScale,\n        color: options.color,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n    });\n    if (!options.filled)\n        return outline;\n    var dot = drawEllipse({\n        x: options.x,\n        y: options.y,\n        xScale: outlineScale * 0.45,\n        yScale: outlineScale * 0.45,\n        color: options.dotColor,\n        borderColor: undefined,\n        borderWidth: 0,\n    });\n    return __spreadArrays([pushGraphicsState()], outline, dot, [popGraphicsState()]);\n};\nexport var drawButton = function (options) {\n    var x = asNumber(options.x);\n    var y = asNumber(options.y);\n    var width = asNumber(options.width);\n    var height = asNumber(options.height);\n    var background = drawRectangle({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        borderWidth: options.borderWidth,\n        color: options.color,\n        borderColor: options.borderColor,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    var lines = drawTextLines(options.textLines, {\n        color: options.textColor,\n        font: options.font,\n        size: options.fontSize,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    return __spreadArrays([pushGraphicsState()], background, lines, [popGraphicsState()]);\n};\nexport var drawTextLines = function (lines, options) {\n    var operators = [\n        beginText(),\n        setFillingColor(options.color),\n        setFontAndSize(options.font, options.size),\n    ];\n    for (var idx = 0, len = lines.length; idx < len; idx++) {\n        var _a = lines[idx], encoded = _a.encoded, x = _a.x, y = _a.y;\n        operators.push(rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), x, y), showText(encoded));\n    }\n    operators.push(endText());\n    return operators;\n};\nexport var drawTextField = function (options) {\n    var x = asNumber(options.x);\n    var y = asNumber(options.y);\n    var width = asNumber(options.width);\n    var height = asNumber(options.height);\n    var borderWidth = asNumber(options.borderWidth);\n    var padding = asNumber(options.padding);\n    var clipX = x + borderWidth / 2 + padding;\n    var clipY = y + borderWidth / 2 + padding;\n    var clipWidth = width - (borderWidth / 2 + padding) * 2;\n    var clipHeight = height - (borderWidth / 2 + padding) * 2;\n    var clippingArea = [\n        moveTo(clipX, clipY),\n        lineTo(clipX, clipY + clipHeight),\n        lineTo(clipX + clipWidth, clipY + clipHeight),\n        lineTo(clipX + clipWidth, clipY),\n        closePath(),\n        clip(),\n        endPath(),\n    ];\n    var background = drawRectangle({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        borderWidth: options.borderWidth,\n        color: options.color,\n        borderColor: options.borderColor,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    var lines = drawTextLines(options.textLines, {\n        color: options.textColor,\n        font: options.font,\n        size: options.fontSize,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    var markedContent = __spreadArrays([\n        beginMarkedContent('Tx'),\n        pushGraphicsState()\n    ], lines, [\n        popGraphicsState(),\n        endMarkedContent(),\n    ]);\n    return __spreadArrays([\n        pushGraphicsState()\n    ], background, clippingArea, markedContent, [\n        popGraphicsState(),\n    ]);\n};\nexport var drawOptionList = function (options) {\n    var x = asNumber(options.x);\n    var y = asNumber(options.y);\n    var width = asNumber(options.width);\n    var height = asNumber(options.height);\n    var lineHeight = asNumber(options.lineHeight);\n    var borderWidth = asNumber(options.borderWidth);\n    var padding = asNumber(options.padding);\n    var clipX = x + borderWidth / 2 + padding;\n    var clipY = y + borderWidth / 2 + padding;\n    var clipWidth = width - (borderWidth / 2 + padding) * 2;\n    var clipHeight = height - (borderWidth / 2 + padding) * 2;\n    var clippingArea = [\n        moveTo(clipX, clipY),\n        lineTo(clipX, clipY + clipHeight),\n        lineTo(clipX + clipWidth, clipY + clipHeight),\n        lineTo(clipX + clipWidth, clipY),\n        closePath(),\n        clip(),\n        endPath(),\n    ];\n    var background = drawRectangle({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        borderWidth: options.borderWidth,\n        color: options.color,\n        borderColor: options.borderColor,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    var highlights = [];\n    for (var idx = 0, len = options.selectedLines.length; idx < len; idx++) {\n        var line = options.textLines[options.selectedLines[idx]];\n        highlights.push.apply(highlights, drawRectangle({\n            x: line.x - padding,\n            y: line.y - (lineHeight - line.height) / 2,\n            width: width - borderWidth,\n            height: line.height + (lineHeight - line.height) / 2,\n            borderWidth: 0,\n            color: options.selectedColor,\n            borderColor: undefined,\n            rotate: degrees(0),\n            xSkew: degrees(0),\n            ySkew: degrees(0),\n        }));\n    }\n    var lines = drawTextLines(options.textLines, {\n        color: options.textColor,\n        font: options.font,\n        size: options.fontSize,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    var markedContent = __spreadArrays([\n        beginMarkedContent('Tx'),\n        pushGraphicsState()\n    ], lines, [\n        popGraphicsState(),\n        endMarkedContent(),\n    ]);\n    return __spreadArrays([\n        pushGraphicsState()\n    ], background, highlights, clippingArea, markedContent, [\n        popGraphicsState(),\n    ]);\n};\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,OAAO;AACtC,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,UAAU;AAC5D,SAASC,SAAS,EAAEC,SAAS,EAAEC,UAAU,EAAEC,OAAO,EAAEC,IAAI,EAAEC,aAAa,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,oCAAoC,EAAEC,aAAa,EAAEC,KAAK,EAAEC,cAAc,EAAEC,aAAa,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,aAAa,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,IAAI,EAAEC,OAAO,EAAEC,iBAAiB,QAAS,aAAa;AACpb,SAASC,OAAO,EAAEC,SAAS,QAAQ,aAAa;AAChD,SAASC,kBAAkB,QAAQ,WAAW;AAC9C,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,IAAIC,QAAQ,GAAG,SAAAA,CAAUC,IAAI,EAAEC,OAAO,EAAE;EAC3C,OAAO,CACH1B,iBAAiB,CAAC,CAAC,EACnB0B,OAAO,CAACC,aAAa,IAAId,gBAAgB,CAACa,OAAO,CAACC,aAAa,CAAC,EAChErC,SAAS,CAAC,CAAC,EACXF,eAAe,CAACsC,OAAO,CAACE,KAAK,CAAC,EAC9BxB,cAAc,CAACsB,OAAO,CAACG,IAAI,EAAEH,OAAO,CAACI,IAAI,CAAC,EAC1C7B,oCAAoC,CAACoB,SAAS,CAACK,OAAO,CAACK,MAAM,CAAC,EAAEV,SAAS,CAACK,OAAO,CAACM,KAAK,CAAC,EAAEX,SAAS,CAACK,OAAO,CAACO,KAAK,CAAC,EAAEP,OAAO,CAACQ,CAAC,EAAER,OAAO,CAACS,CAAC,CAAC,EACzI5B,QAAQ,CAACkB,IAAI,CAAC,EACdhC,OAAO,CAAC,CAAC,EACTM,gBAAgB,CAAC,CAAC,CACrB,CAACqC,MAAM,CAACC,OAAO,CAAC;AACrB,CAAC;AACD,OAAO,IAAIC,eAAe,GAAG,SAAAA,CAAUC,KAAK,EAAEb,OAAO,EAAE;EACnD,IAAIc,SAAS,GAAG,CACZxC,iBAAiB,CAAC,CAAC,EACnB0B,OAAO,CAACC,aAAa,IAAId,gBAAgB,CAACa,OAAO,CAACC,aAAa,CAAC,EAChErC,SAAS,CAAC,CAAC,EACXF,eAAe,CAACsC,OAAO,CAACE,KAAK,CAAC,EAC9BxB,cAAc,CAACsB,OAAO,CAACG,IAAI,EAAEH,OAAO,CAACI,IAAI,CAAC,EAC1CzB,aAAa,CAACqB,OAAO,CAACe,UAAU,CAAC,EACjCxC,oCAAoC,CAACoB,SAAS,CAACK,OAAO,CAACK,MAAM,CAAC,EAAEV,SAAS,CAACK,OAAO,CAACM,KAAK,CAAC,EAAEX,SAAS,CAACK,OAAO,CAACO,KAAK,CAAC,EAAEP,OAAO,CAACQ,CAAC,EAAER,OAAO,CAACS,CAAC,CAAC,CAC5I,CAACC,MAAM,CAACC,OAAO,CAAC;EACjB,KAAK,IAAIK,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAGJ,KAAK,CAACK,MAAM,EAAEF,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;IACpDF,SAAS,CAACK,IAAI,CAACtC,QAAQ,CAACgC,KAAK,CAACG,GAAG,CAAC,CAAC,EAAE5C,QAAQ,CAAC,CAAC,CAAC;EACpD;EACA0C,SAAS,CAACK,IAAI,CAACpD,OAAO,CAAC,CAAC,EAAEM,gBAAgB,CAAC,CAAC,CAAC;EAC7C,OAAOyC,SAAS;AACpB,CAAC;AACD,OAAO,IAAIM,SAAS,GAAG,SAAAA,CAAUC,IAAI,EAAErB,OAAO,EAAE;EAC5C,OAAO,CACH1B,iBAAiB,CAAC,CAAC,EACnB0B,OAAO,CAACC,aAAa,IAAId,gBAAgB,CAACa,OAAO,CAACC,aAAa,CAAC,EAChEjB,SAAS,CAACgB,OAAO,CAACQ,CAAC,EAAER,OAAO,CAACS,CAAC,CAAC,EAC/BjC,aAAa,CAACmB,SAAS,CAACK,OAAO,CAACK,MAAM,CAAC,CAAC,EACxC5B,KAAK,CAACuB,OAAO,CAACsB,KAAK,EAAEtB,OAAO,CAACuB,MAAM,CAAC,EACpCzC,WAAW,CAACa,SAAS,CAACK,OAAO,CAACM,KAAK,CAAC,EAAEX,SAAS,CAACK,OAAO,CAACO,KAAK,CAAC,CAAC,EAC/DzC,UAAU,CAACuD,IAAI,CAAC,EAChBhD,gBAAgB,CAAC,CAAC,CACrB,CAACqC,MAAM,CAACC,OAAO,CAAC;AACrB,CAAC;AACD,OAAO,IAAIa,QAAQ,GAAG,SAAAA,CAAUH,IAAI,EAAErB,OAAO,EAAE;EAC3C,OAAO,CACH1B,iBAAiB,CAAC,CAAC,EACnB0B,OAAO,CAACC,aAAa,IAAId,gBAAgB,CAACa,OAAO,CAACC,aAAa,CAAC,EAChEjB,SAAS,CAACgB,OAAO,CAACQ,CAAC,EAAER,OAAO,CAACS,CAAC,CAAC,EAC/BjC,aAAa,CAACmB,SAAS,CAACK,OAAO,CAACK,MAAM,CAAC,CAAC,EACxC5B,KAAK,CAACuB,OAAO,CAACyB,MAAM,EAAEzB,OAAO,CAAC0B,MAAM,CAAC,EACrC5C,WAAW,CAACa,SAAS,CAACK,OAAO,CAACM,KAAK,CAAC,EAAEX,SAAS,CAACK,OAAO,CAACO,KAAK,CAAC,CAAC,EAC/DzC,UAAU,CAACuD,IAAI,CAAC,EAChBhD,gBAAgB,CAAC,CAAC,CACrB,CAACqC,MAAM,CAACC,OAAO,CAAC;AACrB,CAAC;AACD,OAAO,IAAIgB,QAAQ,GAAG,SAAAA,CAAU3B,OAAO,EAAE;EACrC,IAAI4B,EAAE,EAAEC,EAAE;EACV,OAAO,CACHvD,iBAAiB,CAAC,CAAC,EACnB0B,OAAO,CAACC,aAAa,IAAId,gBAAgB,CAACa,OAAO,CAACC,aAAa,CAAC,EAChED,OAAO,CAACE,KAAK,IAAIvC,gBAAgB,CAACqC,OAAO,CAACE,KAAK,CAAC,EAChDtB,YAAY,CAACoB,OAAO,CAAC8B,SAAS,CAAC,EAC/B1C,cAAc,CAAC,CAACwC,EAAE,GAAG5B,OAAO,CAAC+B,SAAS,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE,EAAE,CAACC,EAAE,GAAG7B,OAAO,CAACgC,SAAS,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,EACzI1D,MAAM,CAAC6B,OAAO,CAACiC,KAAK,CAACzB,CAAC,EAAER,OAAO,CAACiC,KAAK,CAACxB,CAAC,CAAC,EACxCT,OAAO,CAACkC,OAAO,IAAIjD,UAAU,CAACe,OAAO,CAACkC,OAAO,CAAC,EAC9C/D,MAAM,CAAC6B,OAAO,CAACiC,KAAK,CAACzB,CAAC,EAAER,OAAO,CAACiC,KAAK,CAACxB,CAAC,CAAC,EACxCvC,MAAM,CAAC8B,OAAO,CAACmC,GAAG,CAAC3B,CAAC,EAAER,OAAO,CAACmC,GAAG,CAAC1B,CAAC,CAAC,EACpC1B,MAAM,CAAC,CAAC,EACRV,gBAAgB,CAAC,CAAC,CACrB,CAACqC,MAAM,CAACC,OAAO,CAAC;AACrB,CAAC;AACD,OAAO,IAAIyB,aAAa,GAAG,SAAAA,CAAUpC,OAAO,EAAE;EAC1C,IAAI4B,EAAE,EAAEC,EAAE;EACV,OAAO,CACHvD,iBAAiB,CAAC,CAAC,EACnB0B,OAAO,CAACC,aAAa,IAAId,gBAAgB,CAACa,OAAO,CAACC,aAAa,CAAC,EAChED,OAAO,CAACE,KAAK,IAAIxC,eAAe,CAACsC,OAAO,CAACE,KAAK,CAAC,EAC/CF,OAAO,CAACqC,WAAW,IAAI1E,gBAAgB,CAACqC,OAAO,CAACqC,WAAW,CAAC,EAC5DzD,YAAY,CAACoB,OAAO,CAACsC,WAAW,CAAC,EACjCtC,OAAO,CAACuC,aAAa,IAAItD,UAAU,CAACe,OAAO,CAACuC,aAAa,CAAC,EAC1DnD,cAAc,CAAC,CAACwC,EAAE,GAAG5B,OAAO,CAACwC,eAAe,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE,EAAE,CAACC,EAAE,GAAG7B,OAAO,CAACyC,eAAe,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,EACrJ7C,SAAS,CAACgB,OAAO,CAACQ,CAAC,EAAER,OAAO,CAACS,CAAC,CAAC,EAC/BjC,aAAa,CAACmB,SAAS,CAACK,OAAO,CAACK,MAAM,CAAC,CAAC,EACxCvB,WAAW,CAACa,SAAS,CAACK,OAAO,CAACM,KAAK,CAAC,EAAEX,SAAS,CAACK,OAAO,CAACO,KAAK,CAAC,CAAC,EAC/DpC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EACZD,MAAM,CAAC,CAAC,EAAE8B,OAAO,CAACuB,MAAM,CAAC,EACzBrD,MAAM,CAAC8B,OAAO,CAACsB,KAAK,EAAEtB,OAAO,CAACuB,MAAM,CAAC,EACrCrD,MAAM,CAAC8B,OAAO,CAACsB,KAAK,EAAE,CAAC,CAAC,EACxBzD,SAAS,CAAC,CAAC;EACX;EACAmC,OAAO,CAACE,KAAK,IAAIF,OAAO,CAACsC,WAAW,GAAGrE,aAAa,CAAC,CAAC,GAChD+B,OAAO,CAACE,KAAK,GAAGlC,IAAI,CAAC,CAAC,GAClBgC,OAAO,CAACqC,WAAW,GAAGtD,MAAM,CAAC,CAAC,GAC1BlB,SAAS,CAAC,CAAC,EACzBQ,gBAAgB,CAAC,CAAC,CACrB,CAACqC,MAAM,CAACC,OAAO,CAAC;AACrB,CAAC;AACD,IAAI+B,KAAK,GAAG,GAAG,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC;AAC9C;AACA,OAAO,IAAIC,eAAe,GAAG,SAAAA,CAAUC,MAAM,EAAE;EAC3C,IAAItC,CAAC,GAAGX,QAAQ,CAACiD,MAAM,CAACtC,CAAC,CAAC;EAC1B,IAAIC,CAAC,GAAGZ,QAAQ,CAACiD,MAAM,CAACrC,CAAC,CAAC;EAC1B,IAAIgB,MAAM,GAAG5B,QAAQ,CAACiD,MAAM,CAACrB,MAAM,CAAC;EACpC,IAAIC,MAAM,GAAG7B,QAAQ,CAACiD,MAAM,CAACpB,MAAM,CAAC;EACpClB,CAAC,IAAIiB,MAAM;EACXhB,CAAC,IAAIiB,MAAM;EACX,IAAIqB,EAAE,GAAGtB,MAAM,GAAGiB,KAAK;EACvB,IAAIM,EAAE,GAAGtB,MAAM,GAAGgB,KAAK;EACvB,IAAIO,EAAE,GAAGzC,CAAC,GAAGiB,MAAM,GAAG,CAAC;EACvB,IAAIyB,EAAE,GAAGzC,CAAC,GAAGiB,MAAM,GAAG,CAAC;EACvB,IAAIyB,EAAE,GAAG3C,CAAC,GAAGiB,MAAM;EACnB,IAAI2B,EAAE,GAAG3C,CAAC,GAAGiB,MAAM;EACnB,OAAO,CACHpD,iBAAiB,CAAC,CAAC,EACnBH,MAAM,CAACqC,CAAC,EAAE4C,EAAE,CAAC,EACb3D,iBAAiB,CAACe,CAAC,EAAE4C,EAAE,GAAGJ,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEtC,CAAC,EAAE0C,EAAE,EAAE1C,CAAC,CAAC,EAChDhB,iBAAiB,CAAC0D,EAAE,GAAGJ,EAAE,EAAEtC,CAAC,EAAEwC,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEC,EAAE,EAAEG,EAAE,CAAC,EAClD3D,iBAAiB,CAACwD,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAED,EAAE,CAAC,EACnDzD,iBAAiB,CAAC0D,EAAE,GAAGJ,EAAE,EAAEG,EAAE,EAAE1C,CAAC,EAAE4C,EAAE,GAAGJ,EAAE,EAAExC,CAAC,EAAE4C,EAAE,CAAC,EACjD/E,gBAAgB,CAAC,CAAC,CACrB;AACL,CAAC;AACD,IAAIgF,iBAAiB,GAAG,SAAAA,CAAUP,MAAM,EAAE;EACtC,IAAIQ,OAAO,GAAGzD,QAAQ,CAACiD,MAAM,CAACtC,CAAC,CAAC;EAChC,IAAI+C,OAAO,GAAG1D,QAAQ,CAACiD,MAAM,CAACrC,CAAC,CAAC;EAChC,IAAIgB,MAAM,GAAG5B,QAAQ,CAACiD,MAAM,CAACrB,MAAM,CAAC;EACpC,IAAIC,MAAM,GAAG7B,QAAQ,CAACiD,MAAM,CAACpB,MAAM,CAAC;EACpC,IAAIlB,CAAC,GAAG,CAACiB,MAAM;EACf,IAAIhB,CAAC,GAAG,CAACiB,MAAM;EACf,IAAIqB,EAAE,GAAGtB,MAAM,GAAGiB,KAAK;EACvB,IAAIM,EAAE,GAAGtB,MAAM,GAAGgB,KAAK;EACvB,IAAIO,EAAE,GAAGzC,CAAC,GAAGiB,MAAM,GAAG,CAAC;EACvB,IAAIyB,EAAE,GAAGzC,CAAC,GAAGiB,MAAM,GAAG,CAAC;EACvB,IAAIyB,EAAE,GAAG3C,CAAC,GAAGiB,MAAM;EACnB,IAAI2B,EAAE,GAAG3C,CAAC,GAAGiB,MAAM;EACnB,OAAO,CACH1C,SAAS,CAACsE,OAAO,EAAEC,OAAO,CAAC,EAC3B/E,aAAa,CAACmB,SAAS,CAACmD,MAAM,CAACzC,MAAM,CAAC,CAAC,EACvClC,MAAM,CAACqC,CAAC,EAAE4C,EAAE,CAAC,EACb3D,iBAAiB,CAACe,CAAC,EAAE4C,EAAE,GAAGJ,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEtC,CAAC,EAAE0C,EAAE,EAAE1C,CAAC,CAAC,EAChDhB,iBAAiB,CAAC0D,EAAE,GAAGJ,EAAE,EAAEtC,CAAC,EAAEwC,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEC,EAAE,EAAEG,EAAE,CAAC,EAClD3D,iBAAiB,CAACwD,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAED,EAAE,CAAC,EACnDzD,iBAAiB,CAAC0D,EAAE,GAAGJ,EAAE,EAAEG,EAAE,EAAE1C,CAAC,EAAE4C,EAAE,GAAGJ,EAAE,EAAExC,CAAC,EAAE4C,EAAE,CAAC,CACpD;AACL,CAAC;AACD,OAAO,IAAII,WAAW,GAAG,SAAAA,CAAUxD,OAAO,EAAE;EACxC,IAAI4B,EAAE,EAAEC,EAAE,EAAE4B,EAAE;EACd,OAAOhG,cAAc,CAAC,CAClBa,iBAAiB,CAAC,CAAC,EACnB0B,OAAO,CAACC,aAAa,IAAId,gBAAgB,CAACa,OAAO,CAACC,aAAa,CAAC,EAChED,OAAO,CAACE,KAAK,IAAIxC,eAAe,CAACsC,OAAO,CAACE,KAAK,CAAC,EAC/CF,OAAO,CAACqC,WAAW,IAAI1E,gBAAgB,CAACqC,OAAO,CAACqC,WAAW,CAAC,EAC5DzD,YAAY,CAACoB,OAAO,CAACsC,WAAW,CAAC,EACjCtC,OAAO,CAACuC,aAAa,IAAItD,UAAU,CAACe,OAAO,CAACuC,aAAa,CAAC,EAC1DnD,cAAc,CAAC,CAACwC,EAAE,GAAG5B,OAAO,CAACwC,eAAe,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE,EAAE,CAACC,EAAE,GAAG7B,OAAO,CAACyC,eAAe,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,CACxJ,EAAG7B,OAAO,CAACK,MAAM,KAAKqD,SAAS,GAC1Bb,eAAe,CAAC;IACdrC,CAAC,EAAER,OAAO,CAACQ,CAAC;IACZC,CAAC,EAAET,OAAO,CAACS,CAAC;IACZgB,MAAM,EAAEzB,OAAO,CAACyB,MAAM;IACtBC,MAAM,EAAE1B,OAAO,CAAC0B;EACpB,CAAC,CAAC,GACA2B,iBAAiB,CAAC;IAChB7C,CAAC,EAAER,OAAO,CAACQ,CAAC;IACZC,CAAC,EAAET,OAAO,CAACS,CAAC;IACZgB,MAAM,EAAEzB,OAAO,CAACyB,MAAM;IACtBC,MAAM,EAAE1B,OAAO,CAAC0B,MAAM;IACtBrB,MAAM,EAAE,CAACoD,EAAE,GAAGzD,OAAO,CAACK,MAAM,MAAM,IAAI,IAAIoD,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG/D,OAAO,CAAC,CAAC;EAC5E,CAAC,CAAC,EAAG;EACL;EACAM,OAAO,CAACE,KAAK,IAAIF,OAAO,CAACsC,WAAW,GAAGrE,aAAa,CAAC,CAAC,GAChD+B,OAAO,CAACE,KAAK,GAAGlC,IAAI,CAAC,CAAC,GAClBgC,OAAO,CAACqC,WAAW,GAAGtD,MAAM,CAAC,CAAC,GAC1BlB,SAAS,CAAC,CAAC,EACzBQ,gBAAgB,CAAC,CAAC,CACrB,CAAC,CAACqC,MAAM,CAACC,OAAO,CAAC;AACtB,CAAC;AACD,OAAO,IAAIgD,WAAW,GAAG,SAAAA,CAAUC,IAAI,EAAE5D,OAAO,EAAE;EAC9C,IAAI4B,EAAE,EAAEC,EAAE,EAAE4B,EAAE;EACd,OAAOhG,cAAc,CAAC,CAClBa,iBAAiB,CAAC,CAAC,EACnB0B,OAAO,CAACC,aAAa,IAAId,gBAAgB,CAACa,OAAO,CAACC,aAAa,CAAC,EAChEjB,SAAS,CAACgB,OAAO,CAACQ,CAAC,EAAER,OAAO,CAACS,CAAC,CAAC,EAC/BjC,aAAa,CAACmB,SAAS,CAAC,CAACiC,EAAE,GAAG5B,OAAO,CAACK,MAAM,MAAM,IAAI,IAAIuB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGlC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3F;EACAM,OAAO,CAACvB,KAAK,GAAGA,KAAK,CAACuB,OAAO,CAACvB,KAAK,EAAE,CAACuB,OAAO,CAACvB,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACnEuB,OAAO,CAACE,KAAK,IAAIxC,eAAe,CAACsC,OAAO,CAACE,KAAK,CAAC,EAC/CF,OAAO,CAACqC,WAAW,IAAI1E,gBAAgB,CAACqC,OAAO,CAACqC,WAAW,CAAC,EAC5DrC,OAAO,CAACsC,WAAW,IAAI1D,YAAY,CAACoB,OAAO,CAACsC,WAAW,CAAC,EACxDtC,OAAO,CAACuC,aAAa,IAAItD,UAAU,CAACe,OAAO,CAACuC,aAAa,CAAC,EAC1DnD,cAAc,CAAC,CAACyC,EAAE,GAAG7B,OAAO,CAACwC,eAAe,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE,EAAE,CAAC4B,EAAE,GAAGzD,OAAO,CAACyC,eAAe,MAAM,IAAI,IAAIgB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,CACxJ,EAAE7D,kBAAkB,CAACgE,IAAI,CAAC,EAAE;EACzB;EACA5D,OAAO,CAACE,KAAK,IAAIF,OAAO,CAACsC,WAAW,GAAGrE,aAAa,CAAC,CAAC,GAChD+B,OAAO,CAACE,KAAK,GAAGlC,IAAI,CAAC,CAAC,GAClBgC,OAAO,CAACqC,WAAW,GAAGtD,MAAM,CAAC,CAAC,GAC1BlB,SAAS,CAAC,CAAC,EACzBQ,gBAAgB,CAAC,CAAC,CACrB,CAAC,CAACqC,MAAM,CAACC,OAAO,CAAC;AACtB,CAAC;AACD,OAAO,IAAIkD,aAAa,GAAG,SAAAA,CAAU7D,OAAO,EAAE;EAC1C,IAAII,IAAI,GAAGP,QAAQ,CAACG,OAAO,CAACI,IAAI,CAAC;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI0D,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI;EACnB,IAAIC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI;EACnB;EACA,IAAIC,GAAG,GAAG,CAAC,GAAG,KAAK;EACnB,IAAIC,GAAG,GAAG,CAAC,GAAG,IAAI;EAClB;EACA,IAAIC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK;EACpB,IAAIC,GAAG,GAAG,EAAE,CAACD,GAAG,GAAGJ,GAAG,KAAKG,GAAG,GAAGH,GAAG,CAAC,CAAC,IAAIE,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;EAC1D;EACA,OAAO,CACHzF,iBAAiB,CAAC,CAAC,EACnB0B,OAAO,CAACE,KAAK,IAAIvC,gBAAgB,CAACqC,OAAO,CAACE,KAAK,CAAC,EAChDtB,YAAY,CAACoB,OAAO,CAAC8B,SAAS,CAAC,EAC/B9C,SAAS,CAACgB,OAAO,CAACQ,CAAC,EAAER,OAAO,CAACS,CAAC,CAAC,EAC/BtC,MAAM,CAAC+F,GAAG,GAAG9D,IAAI,EAAE+D,GAAG,GAAG/D,IAAI,CAAC,EAC9BlC,MAAM,CAAC4F,GAAG,GAAG1D,IAAI,EAAE2D,GAAG,GAAG3D,IAAI,CAAC,EAC9BlC,MAAM,CAAC+F,GAAG,GAAG7D,IAAI,EAAE4D,GAAG,GAAG5D,IAAI,CAAC,EAC9BrB,MAAM,CAAC,CAAC,EACRV,gBAAgB,CAAC,CAAC,CACrB,CAACqC,MAAM,CAACC,OAAO,CAAC;AACrB,CAAC;AACD;AACA,OAAO,IAAIyD,aAAa,GAAG,SAAAA,CAAUpE,OAAO,EAAE;EAC1C,OAAOA,OAAO,CAACqE,QAAQ,KAAK,CAAC,GAAG,CAC5BrF,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EACfE,aAAa,CAAC,CAAC,CAAC,CACnB,GACKc,OAAO,CAACqE,QAAQ,KAAK,EAAE,GAAG,CACxBrF,SAAS,CAACgB,OAAO,CAACsB,KAAK,EAAE,CAAC,CAAC,EAC3BpC,aAAa,CAAC,EAAE,CAAC,CACpB,GACKc,OAAO,CAACqE,QAAQ,KAAK,GAAG,GAAG,CACzBrF,SAAS,CAACgB,OAAO,CAACsB,KAAK,EAAEtB,OAAO,CAACuB,MAAM,CAAC,EACxCrC,aAAa,CAAC,GAAG,CAAC,CACrB,GACKc,OAAO,CAACqE,QAAQ,KAAK,GAAG,GAAG,CACzBrF,SAAS,CAAC,CAAC,EAAEgB,OAAO,CAACuB,MAAM,CAAC,EAC5BrC,aAAa,CAAC,GAAG,CAAC,CACrB,GACK,EAAE;AACxB,CAAC,CAAC,CAAC;AACH,OAAO,IAAIoF,YAAY,GAAG,SAAAA,CAAUtE,OAAO,EAAE;EACzC,IAAIuE,OAAO,GAAGnC,aAAa,CAAC;IACxB5B,CAAC,EAAER,OAAO,CAACQ,CAAC;IACZC,CAAC,EAAET,OAAO,CAACS,CAAC;IACZa,KAAK,EAAEtB,OAAO,CAACsB,KAAK;IACpBC,MAAM,EAAEvB,OAAO,CAACuB,MAAM;IACtBe,WAAW,EAAEtC,OAAO,CAACsC,WAAW;IAChCpC,KAAK,EAAEF,OAAO,CAACE,KAAK;IACpBmC,WAAW,EAAErC,OAAO,CAACqC,WAAW;IAChChC,MAAM,EAAEX,OAAO,CAAC,CAAC,CAAC;IAClBY,KAAK,EAAEZ,OAAO,CAAC,CAAC,CAAC;IACjBa,KAAK,EAAEb,OAAO,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,IAAI,CAACM,OAAO,CAACwE,MAAM,EACf,OAAOD,OAAO;EAClB,IAAIjD,KAAK,GAAGzB,QAAQ,CAACG,OAAO,CAACsB,KAAK,CAAC;EACnC,IAAIC,MAAM,GAAG1B,QAAQ,CAACG,OAAO,CAACuB,MAAM,CAAC;EACrC,IAAIkD,aAAa,GAAG9B,IAAI,CAAC+B,GAAG,CAACpD,KAAK,EAAEC,MAAM,CAAC,GAAG,CAAC;EAC/C,IAAIoD,SAAS,GAAGd,aAAa,CAAC;IAC1BrD,CAAC,EAAEc,KAAK,GAAG,CAAC;IACZb,CAAC,EAAEc,MAAM,GAAG,CAAC;IACbnB,IAAI,EAAEqE,aAAa;IACnB3C,SAAS,EAAE9B,OAAO,CAAC8B,SAAS;IAC5B5B,KAAK,EAAEF,OAAO,CAAC4E;EACnB,CAAC,CAAC;EACF,OAAOnH,cAAc,CAAC,CAACa,iBAAiB,CAAC,CAAC,CAAC,EAAEiG,OAAO,EAAEI,SAAS,EAAE,CAACtG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAC1F,CAAC;AACD,OAAO,IAAIwG,eAAe,GAAG,SAAAA,CAAU7E,OAAO,EAAE;EAC5C,IAAIsB,KAAK,GAAGzB,QAAQ,CAACG,OAAO,CAACsB,KAAK,CAAC;EACnC,IAAIC,MAAM,GAAG1B,QAAQ,CAACG,OAAO,CAACuB,MAAM,CAAC;EACrC,IAAIuD,YAAY,GAAGnC,IAAI,CAAC+B,GAAG,CAACpD,KAAK,EAAEC,MAAM,CAAC,GAAG,CAAC;EAC9C,IAAIgD,OAAO,GAAGf,WAAW,CAAC;IACtBhD,CAAC,EAAER,OAAO,CAACQ,CAAC;IACZC,CAAC,EAAET,OAAO,CAACS,CAAC;IACZgB,MAAM,EAAEqD,YAAY;IACpBpD,MAAM,EAAEoD,YAAY;IACpB5E,KAAK,EAAEF,OAAO,CAACE,KAAK;IACpBmC,WAAW,EAAErC,OAAO,CAACqC,WAAW;IAChCC,WAAW,EAAEtC,OAAO,CAACsC;EACzB,CAAC,CAAC;EACF,IAAI,CAACtC,OAAO,CAACwE,MAAM,EACf,OAAOD,OAAO;EAClB,IAAIQ,GAAG,GAAGvB,WAAW,CAAC;IAClBhD,CAAC,EAAER,OAAO,CAACQ,CAAC;IACZC,CAAC,EAAET,OAAO,CAACS,CAAC;IACZgB,MAAM,EAAEqD,YAAY,GAAG,IAAI;IAC3BpD,MAAM,EAAEoD,YAAY,GAAG,IAAI;IAC3B5E,KAAK,EAAEF,OAAO,CAACgF,QAAQ;IACvB3C,WAAW,EAAEqB,SAAS;IACtBpB,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,OAAO7E,cAAc,CAAC,CAACa,iBAAiB,CAAC,CAAC,CAAC,EAAEiG,OAAO,EAAEQ,GAAG,EAAE,CAAC1G,gBAAgB,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC;AACD,OAAO,IAAI4G,UAAU,GAAG,SAAAA,CAAUjF,OAAO,EAAE;EACvC,IAAIQ,CAAC,GAAGX,QAAQ,CAACG,OAAO,CAACQ,CAAC,CAAC;EAC3B,IAAIC,CAAC,GAAGZ,QAAQ,CAACG,OAAO,CAACS,CAAC,CAAC;EAC3B,IAAIa,KAAK,GAAGzB,QAAQ,CAACG,OAAO,CAACsB,KAAK,CAAC;EACnC,IAAIC,MAAM,GAAG1B,QAAQ,CAACG,OAAO,CAACuB,MAAM,CAAC;EACrC,IAAI2D,UAAU,GAAG9C,aAAa,CAAC;IAC3B5B,CAAC,EAAEA,CAAC;IACJC,CAAC,EAAEA,CAAC;IACJa,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA,MAAM;IACde,WAAW,EAAEtC,OAAO,CAACsC,WAAW;IAChCpC,KAAK,EAAEF,OAAO,CAACE,KAAK;IACpBmC,WAAW,EAAErC,OAAO,CAACqC,WAAW;IAChChC,MAAM,EAAEX,OAAO,CAAC,CAAC,CAAC;IAClBY,KAAK,EAAEZ,OAAO,CAAC,CAAC,CAAC;IACjBa,KAAK,EAAEb,OAAO,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,IAAImB,KAAK,GAAGsE,aAAa,CAACnF,OAAO,CAACoF,SAAS,EAAE;IACzClF,KAAK,EAAEF,OAAO,CAACqF,SAAS;IACxBlF,IAAI,EAAEH,OAAO,CAACG,IAAI;IAClBC,IAAI,EAAEJ,OAAO,CAACsF,QAAQ;IACtBjF,MAAM,EAAEX,OAAO,CAAC,CAAC,CAAC;IAClBY,KAAK,EAAEZ,OAAO,CAAC,CAAC,CAAC;IACjBa,KAAK,EAAEb,OAAO,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,OAAOjC,cAAc,CAAC,CAACa,iBAAiB,CAAC,CAAC,CAAC,EAAE4G,UAAU,EAAErE,KAAK,EAAE,CAACxC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC;AACD,OAAO,IAAI8G,aAAa,GAAG,SAAAA,CAAUtE,KAAK,EAAEb,OAAO,EAAE;EACjD,IAAIc,SAAS,GAAG,CACZlD,SAAS,CAAC,CAAC,EACXF,eAAe,CAACsC,OAAO,CAACE,KAAK,CAAC,EAC9BxB,cAAc,CAACsB,OAAO,CAACG,IAAI,EAAEH,OAAO,CAACI,IAAI,CAAC,CAC7C;EACD,KAAK,IAAIY,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAGJ,KAAK,CAACK,MAAM,EAAEF,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;IACpD,IAAIY,EAAE,GAAGf,KAAK,CAACG,GAAG,CAAC;MAAEuE,OAAO,GAAG3D,EAAE,CAAC2D,OAAO;MAAE/E,CAAC,GAAGoB,EAAE,CAACpB,CAAC;MAAEC,CAAC,GAAGmB,EAAE,CAACnB,CAAC;IAC7DK,SAAS,CAACK,IAAI,CAAC5C,oCAAoC,CAACoB,SAAS,CAACK,OAAO,CAACK,MAAM,CAAC,EAAEV,SAAS,CAACK,OAAO,CAACM,KAAK,CAAC,EAAEX,SAAS,CAACK,OAAO,CAACO,KAAK,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,EAAE5B,QAAQ,CAAC0G,OAAO,CAAC,CAAC;EAChK;EACAzE,SAAS,CAACK,IAAI,CAACpD,OAAO,CAAC,CAAC,CAAC;EACzB,OAAO+C,SAAS;AACpB,CAAC;AACD,OAAO,IAAI0E,aAAa,GAAG,SAAAA,CAAUxF,OAAO,EAAE;EAC1C,IAAIQ,CAAC,GAAGX,QAAQ,CAACG,OAAO,CAACQ,CAAC,CAAC;EAC3B,IAAIC,CAAC,GAAGZ,QAAQ,CAACG,OAAO,CAACS,CAAC,CAAC;EAC3B,IAAIa,KAAK,GAAGzB,QAAQ,CAACG,OAAO,CAACsB,KAAK,CAAC;EACnC,IAAIC,MAAM,GAAG1B,QAAQ,CAACG,OAAO,CAACuB,MAAM,CAAC;EACrC,IAAIe,WAAW,GAAGzC,QAAQ,CAACG,OAAO,CAACsC,WAAW,CAAC;EAC/C,IAAImD,OAAO,GAAG5F,QAAQ,CAACG,OAAO,CAACyF,OAAO,CAAC;EACvC,IAAIC,KAAK,GAAGlF,CAAC,GAAG8B,WAAW,GAAG,CAAC,GAAGmD,OAAO;EACzC,IAAIE,KAAK,GAAGlF,CAAC,GAAG6B,WAAW,GAAG,CAAC,GAAGmD,OAAO;EACzC,IAAIG,SAAS,GAAGtE,KAAK,GAAG,CAACgB,WAAW,GAAG,CAAC,GAAGmD,OAAO,IAAI,CAAC;EACvD,IAAII,UAAU,GAAGtE,MAAM,GAAG,CAACe,WAAW,GAAG,CAAC,GAAGmD,OAAO,IAAI,CAAC;EACzD,IAAIK,YAAY,GAAG,CACf3H,MAAM,CAACuH,KAAK,EAAEC,KAAK,CAAC,EACpBzH,MAAM,CAACwH,KAAK,EAAEC,KAAK,GAAGE,UAAU,CAAC,EACjC3H,MAAM,CAACwH,KAAK,GAAGE,SAAS,EAAED,KAAK,GAAGE,UAAU,CAAC,EAC7C3H,MAAM,CAACwH,KAAK,GAAGE,SAAS,EAAED,KAAK,CAAC,EAChC9H,SAAS,CAAC,CAAC,EACX0B,IAAI,CAAC,CAAC,EACNC,OAAO,CAAC,CAAC,CACZ;EACD,IAAI0F,UAAU,GAAG9C,aAAa,CAAC;IAC3B5B,CAAC,EAAEA,CAAC;IACJC,CAAC,EAAEA,CAAC;IACJa,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA,MAAM;IACde,WAAW,EAAEtC,OAAO,CAACsC,WAAW;IAChCpC,KAAK,EAAEF,OAAO,CAACE,KAAK;IACpBmC,WAAW,EAAErC,OAAO,CAACqC,WAAW;IAChChC,MAAM,EAAEX,OAAO,CAAC,CAAC,CAAC;IAClBY,KAAK,EAAEZ,OAAO,CAAC,CAAC,CAAC;IACjBa,KAAK,EAAEb,OAAO,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,IAAImB,KAAK,GAAGsE,aAAa,CAACnF,OAAO,CAACoF,SAAS,EAAE;IACzClF,KAAK,EAAEF,OAAO,CAACqF,SAAS;IACxBlF,IAAI,EAAEH,OAAO,CAACG,IAAI;IAClBC,IAAI,EAAEJ,OAAO,CAACsF,QAAQ;IACtBjF,MAAM,EAAEX,OAAO,CAAC,CAAC,CAAC;IAClBY,KAAK,EAAEZ,OAAO,CAAC,CAAC,CAAC;IACjBa,KAAK,EAAEb,OAAO,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,IAAIqG,aAAa,GAAGtI,cAAc,CAAC,CAC/B4B,kBAAkB,CAAC,IAAI,CAAC,EACxBf,iBAAiB,CAAC,CAAC,CACtB,EAAEuC,KAAK,EAAE,CACNxC,gBAAgB,CAAC,CAAC,EAClBiB,gBAAgB,CAAC,CAAC,CACrB,CAAC;EACF,OAAO7B,cAAc,CAAC,CAClBa,iBAAiB,CAAC,CAAC,CACtB,EAAE4G,UAAU,EAAEY,YAAY,EAAEC,aAAa,EAAE,CACxC1H,gBAAgB,CAAC,CAAC,CACrB,CAAC;AACN,CAAC;AACD,OAAO,IAAI2H,cAAc,GAAG,SAAAA,CAAUhG,OAAO,EAAE;EAC3C,IAAIQ,CAAC,GAAGX,QAAQ,CAACG,OAAO,CAACQ,CAAC,CAAC;EAC3B,IAAIC,CAAC,GAAGZ,QAAQ,CAACG,OAAO,CAACS,CAAC,CAAC;EAC3B,IAAIa,KAAK,GAAGzB,QAAQ,CAACG,OAAO,CAACsB,KAAK,CAAC;EACnC,IAAIC,MAAM,GAAG1B,QAAQ,CAACG,OAAO,CAACuB,MAAM,CAAC;EACrC,IAAIR,UAAU,GAAGlB,QAAQ,CAACG,OAAO,CAACe,UAAU,CAAC;EAC7C,IAAIuB,WAAW,GAAGzC,QAAQ,CAACG,OAAO,CAACsC,WAAW,CAAC;EAC/C,IAAImD,OAAO,GAAG5F,QAAQ,CAACG,OAAO,CAACyF,OAAO,CAAC;EACvC,IAAIC,KAAK,GAAGlF,CAAC,GAAG8B,WAAW,GAAG,CAAC,GAAGmD,OAAO;EACzC,IAAIE,KAAK,GAAGlF,CAAC,GAAG6B,WAAW,GAAG,CAAC,GAAGmD,OAAO;EACzC,IAAIG,SAAS,GAAGtE,KAAK,GAAG,CAACgB,WAAW,GAAG,CAAC,GAAGmD,OAAO,IAAI,CAAC;EACvD,IAAII,UAAU,GAAGtE,MAAM,GAAG,CAACe,WAAW,GAAG,CAAC,GAAGmD,OAAO,IAAI,CAAC;EACzD,IAAIK,YAAY,GAAG,CACf3H,MAAM,CAACuH,KAAK,EAAEC,KAAK,CAAC,EACpBzH,MAAM,CAACwH,KAAK,EAAEC,KAAK,GAAGE,UAAU,CAAC,EACjC3H,MAAM,CAACwH,KAAK,GAAGE,SAAS,EAAED,KAAK,GAAGE,UAAU,CAAC,EAC7C3H,MAAM,CAACwH,KAAK,GAAGE,SAAS,EAAED,KAAK,CAAC,EAChC9H,SAAS,CAAC,CAAC,EACX0B,IAAI,CAAC,CAAC,EACNC,OAAO,CAAC,CAAC,CACZ;EACD,IAAI0F,UAAU,GAAG9C,aAAa,CAAC;IAC3B5B,CAAC,EAAEA,CAAC;IACJC,CAAC,EAAEA,CAAC;IACJa,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA,MAAM;IACde,WAAW,EAAEtC,OAAO,CAACsC,WAAW;IAChCpC,KAAK,EAAEF,OAAO,CAACE,KAAK;IACpBmC,WAAW,EAAErC,OAAO,CAACqC,WAAW;IAChChC,MAAM,EAAEX,OAAO,CAAC,CAAC,CAAC;IAClBY,KAAK,EAAEZ,OAAO,CAAC,CAAC,CAAC;IACjBa,KAAK,EAAEb,OAAO,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,IAAIuG,UAAU,GAAG,EAAE;EACnB,KAAK,IAAIjF,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAGjB,OAAO,CAACkG,aAAa,CAAChF,MAAM,EAAEF,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;IACpE,IAAIjB,IAAI,GAAGC,OAAO,CAACoF,SAAS,CAACpF,OAAO,CAACkG,aAAa,CAAClF,GAAG,CAAC,CAAC;IACxDiF,UAAU,CAAC9E,IAAI,CAACgF,KAAK,CAACF,UAAU,EAAE7D,aAAa,CAAC;MAC5C5B,CAAC,EAAET,IAAI,CAACS,CAAC,GAAGiF,OAAO;MACnBhF,CAAC,EAAEV,IAAI,CAACU,CAAC,GAAG,CAACM,UAAU,GAAGhB,IAAI,CAACwB,MAAM,IAAI,CAAC;MAC1CD,KAAK,EAAEA,KAAK,GAAGgB,WAAW;MAC1Bf,MAAM,EAAExB,IAAI,CAACwB,MAAM,GAAG,CAACR,UAAU,GAAGhB,IAAI,CAACwB,MAAM,IAAI,CAAC;MACpDe,WAAW,EAAE,CAAC;MACdpC,KAAK,EAAEF,OAAO,CAACoG,aAAa;MAC5B/D,WAAW,EAAEqB,SAAS;MACtBrD,MAAM,EAAEX,OAAO,CAAC,CAAC,CAAC;MAClBY,KAAK,EAAEZ,OAAO,CAAC,CAAC,CAAC;MACjBa,KAAK,EAAEb,OAAO,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;EACP;EACA,IAAImB,KAAK,GAAGsE,aAAa,CAACnF,OAAO,CAACoF,SAAS,EAAE;IACzClF,KAAK,EAAEF,OAAO,CAACqF,SAAS;IACxBlF,IAAI,EAAEH,OAAO,CAACG,IAAI;IAClBC,IAAI,EAAEJ,OAAO,CAACsF,QAAQ;IACtBjF,MAAM,EAAEX,OAAO,CAAC,CAAC,CAAC;IAClBY,KAAK,EAAEZ,OAAO,CAAC,CAAC,CAAC;IACjBa,KAAK,EAAEb,OAAO,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,IAAIqG,aAAa,GAAGtI,cAAc,CAAC,CAC/B4B,kBAAkB,CAAC,IAAI,CAAC,EACxBf,iBAAiB,CAAC,CAAC,CACtB,EAAEuC,KAAK,EAAE,CACNxC,gBAAgB,CAAC,CAAC,EAClBiB,gBAAgB,CAAC,CAAC,CACrB,CAAC;EACF,OAAO7B,cAAc,CAAC,CAClBa,iBAAiB,CAAC,CAAC,CACtB,EAAE4G,UAAU,EAAEe,UAAU,EAAEH,YAAY,EAAEC,aAAa,EAAE,CACpD1H,gBAAgB,CAAC,CAAC,CACrB,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}