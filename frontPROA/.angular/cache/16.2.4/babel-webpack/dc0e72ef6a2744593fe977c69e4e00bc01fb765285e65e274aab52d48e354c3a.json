{"ast":null,"code":"import _asyncToGenerator from \"E:/PROA/frontPROA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FrontEmailService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://192.168.15.49:8080/api/email'; // Ajuste o endereço conforme necessário\n  }\n\n  enviarPDFsPorEmail(destinatario, assunto, mensagem, ...pdfs) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const formData = new FormData();\n      formData.append('destinatario', destinatario);\n      formData.append('assunto', assunto);\n      formData.append('mensagem', mensagem);\n      // Adiciona PDFs se houver\n      pdfs.forEach((pdfBytes, index) => {\n        const blob = new Blob([pdfBytes], {\n          type: 'application/pdf'\n        });\n        formData.append('anexos', new File([blob], `anexo-${index + 1}.pdf`));\n      });\n      try {\n        // Determina a URL do endpoint com base na presença de anexos\n        const endpoint = pdfs.length ? `${_this.apiUrl}/anexos` : `${_this.apiUrl}/enviar`;\n        // Envia o e-mail, com ou sem anexos\n        yield _this.http.post(endpoint, formData, {\n          responseType: 'text'\n        }).toPromise();\n        console.log('Email enviado com sucesso!');\n      } catch (error) {\n        console.error('Erro ao enviar email:', error);\n        throw new Error('Não foi possível enviar o email.');\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function FrontEmailService_Factory(t) {\n    return new (t || FrontEmailService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FrontEmailService,\n    factory: FrontEmailService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FrontEmailService","constructor","http","apiUrl","enviarPDFsPorEmail","destinatario","assunto","mensagem","pdfs","_this","_asyncToGenerator","formData","FormData","append","forEach","pdfBytes","index","blob","Blob","type","File","endpoint","length","post","responseType","toPromise","console","log","error","Error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\front-email.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FrontEmailService {\r\n  private apiUrl = 'http://192.168.15.49:8080/api/email'; // Ajuste o endereço conforme necessário\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async enviarPDFsPorEmail(\r\n    destinatario: string,\r\n    assunto: string,\r\n    mensagem: string,\r\n    ...pdfs: Uint8Array[]\r\n  ): Promise<void> {\r\n    const formData = new FormData();\r\n    formData.append('destinatario', destinatario);\r\n    formData.append('assunto', assunto);\r\n    formData.append('mensagem', mensagem);\r\n\r\n    // Adiciona PDFs se houver\r\n    pdfs.forEach((pdfBytes, index) => {\r\n      const blob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n      formData.append('anexos', new File([blob], `anexo-${index + 1}.pdf`));\r\n    });\r\n\r\n    try {\r\n      // Determina a URL do endpoint com base na presença de anexos\r\n      const endpoint = pdfs.length ? `${this.apiUrl}/anexos` : `${this.apiUrl}/enviar`;\r\n\r\n      // Envia o e-mail, com ou sem anexos\r\n      await this.http.post<string>(endpoint, formData, {\r\n        responseType: 'text' as 'json'\r\n      }).toPromise();\r\n\r\n      console.log('Email enviado com sucesso!');\r\n    } catch (error) {\r\n      console.error('Erro ao enviar email:', error);\r\n      throw new Error('Não foi possível enviar o email.');\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAOA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,qCAAqC,CAAC,CAAC;EAEjB;;EAEjCC,kBAAkBA,CACtBC,YAAoB,EACpBC,OAAe,EACfC,QAAgB,EAChB,GAAGC,IAAkB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAErB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAER,YAAY,CAAC;MAC7CM,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEP,OAAO,CAAC;MACnCK,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAAC;MAErC;MACAC,IAAI,CAACM,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAI;QAC/B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,QAAQ,CAAC,EAAE;UAAEI,IAAI,EAAE;QAAiB,CAAE,CAAC;QAC9DR,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAIO,IAAI,CAAC,CAACH,IAAI,CAAC,EAAE,SAASD,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC;MACvE,CAAC,CAAC;MAEF,IAAI;QACF;QACA,MAAMK,QAAQ,GAAGb,IAAI,CAACc,MAAM,GAAG,GAAGb,KAAI,CAACN,MAAM,SAAS,GAAG,GAAGM,KAAI,CAACN,MAAM,SAAS;QAEhF;QACA,MAAMM,KAAI,CAACP,IAAI,CAACqB,IAAI,CAASF,QAAQ,EAAEV,QAAQ,EAAE;UAC/Ca,YAAY,EAAE;SACf,CAAC,CAACC,SAAS,EAAE;QAEdC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;OAC1C,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;;IACpD;EACH;EAAC,QAAAC,CAAA,G;qBApCU9B,iBAAiB,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBnC,iBAAiB;IAAAoC,OAAA,EAAjBpC,iBAAiB,CAAAqC,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}