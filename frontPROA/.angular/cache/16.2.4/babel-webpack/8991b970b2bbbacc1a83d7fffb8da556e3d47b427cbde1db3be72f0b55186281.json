{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PrivateConstructorError } from \"../errors\";\nimport PDFObject from \"./PDFObject\";\nimport CharCodes from \"../syntax/CharCodes\";\nvar ENFORCER = {};\nvar PDFBool = /** @class */function (_super) {\n  __extends(PDFBool, _super);\n  function PDFBool(enforcer, value) {\n    var _this = this;\n    if (enforcer !== ENFORCER) throw new PrivateConstructorError('PDFBool');\n    _this = _super.call(this) || this;\n    _this.value = value;\n    return _this;\n  }\n  PDFBool.prototype.asBoolean = function () {\n    return this.value;\n  };\n  PDFBool.prototype.clone = function () {\n    return this;\n  };\n  PDFBool.prototype.toString = function () {\n    return String(this.value);\n  };\n  PDFBool.prototype.sizeInBytes = function () {\n    return this.value ? 4 : 5;\n  };\n  PDFBool.prototype.copyBytesInto = function (buffer, offset) {\n    if (this.value) {\n      buffer[offset++] = CharCodes.t;\n      buffer[offset++] = CharCodes.r;\n      buffer[offset++] = CharCodes.u;\n      buffer[offset++] = CharCodes.e;\n      return 4;\n    } else {\n      buffer[offset++] = CharCodes.f;\n      buffer[offset++] = CharCodes.a;\n      buffer[offset++] = CharCodes.l;\n      buffer[offset++] = CharCodes.s;\n      buffer[offset++] = CharCodes.e;\n      return 5;\n    }\n  };\n  PDFBool.True = new PDFBool(ENFORCER, true);\n  PDFBool.False = new PDFBool(ENFORCER, false);\n  return PDFBool;\n}(PDFObject);\nexport default PDFBool;\n//# sourceMappingURL=PDFBool.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}