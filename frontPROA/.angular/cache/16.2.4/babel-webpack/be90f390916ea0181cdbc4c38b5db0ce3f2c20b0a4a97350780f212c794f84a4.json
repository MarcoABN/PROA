{"ast":null,"code":"import { __assign, __spreadArrays } from \"tslib\";\nimport { drawCheckBox, rotateInPlace, drawRadioButton, drawButton, drawTextField, drawOptionList } from \"../operations\";\nimport { rgb, componentsToColor, setFillingColor, grayscale, cmyk } from \"../colors\";\nimport { reduceRotation, adjustDimsForRotation } from \"../rotations\";\nimport { layoutMultilineText, layoutCombedText, layoutSinglelineText } from \"../text/layout\";\nimport { TextAlignment } from \"../text/alignment\";\nimport { setFontAndSize } from \"../operators\";\nimport { findLastMatch } from \"../../utils\";\n/********************* Appearance Provider Functions **************************/\nexport var normalizeAppearance = function (appearance) {\n  if ('normal' in appearance) return appearance;\n  return {\n    normal: appearance\n  };\n};\n// Examples:\n//   `/Helv 12 Tf` -> ['/Helv 12 Tf', 'Helv', '12']\n//   `/HeBo 8.00 Tf` -> ['/HeBo 8 Tf', 'HeBo', '8.00']\nvar tfRegex = /\\/([^\\0\\t\\n\\f\\r\\ ]+)[\\0\\t\\n\\f\\r\\ ]+(\\d*\\.\\d+|\\d+)[\\0\\t\\n\\f\\r\\ ]+Tf/;\nvar getDefaultFontSize = function (field) {\n  var _a, _b;\n  var da = (_a = field.getDefaultAppearance()) !== null && _a !== void 0 ? _a : '';\n  var daMatch = (_b = findLastMatch(da, tfRegex).match) !== null && _b !== void 0 ? _b : [];\n  var defaultFontSize = Number(daMatch[2]);\n  return isFinite(defaultFontSize) ? defaultFontSize : undefined;\n};\n// Examples:\n//   `0.3 g` -> ['0.3', 'g']\n//   `0.3 1 .3 rg` -> ['0.3', '1', '.3', 'rg']\n//   `0.3 1 .3 0 k` -> ['0.3', '1', '.3', '0', 'k']\nvar colorRegex = /(\\d*\\.\\d+|\\d+)[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]+(g|rg|k)/;\nvar getDefaultColor = function (field) {\n  var _a;\n  var da = (_a = field.getDefaultAppearance()) !== null && _a !== void 0 ? _a : '';\n  var daMatch = findLastMatch(da, colorRegex).match;\n  var _b = daMatch !== null && daMatch !== void 0 ? daMatch : [],\n    c1 = _b[1],\n    c2 = _b[2],\n    c3 = _b[3],\n    c4 = _b[4],\n    colorSpace = _b[5];\n  if (colorSpace === 'g' && c1) {\n    return grayscale(Number(c1));\n  }\n  if (colorSpace === 'rg' && c1 && c2 && c3) {\n    return rgb(Number(c1), Number(c2), Number(c3));\n  }\n  if (colorSpace === 'k' && c1 && c2 && c3 && c4) {\n    return cmyk(Number(c1), Number(c2), Number(c3), Number(c4));\n  }\n  return undefined;\n};\nvar updateDefaultAppearance = function (field, color, font, fontSize) {\n  var _a;\n  if (fontSize === void 0) {\n    fontSize = 0;\n  }\n  var da = [setFillingColor(color).toString(), setFontAndSize((_a = font === null || font === void 0 ? void 0 : font.name) !== null && _a !== void 0 ? _a : 'dummy__noop', fontSize).toString()].join('\\n');\n  field.setDefaultAppearance(da);\n};\nexport var defaultCheckBoxAppearanceProvider = function (checkBox, widget) {\n  var _a, _b, _c;\n  // The `/DA` entry can be at the widget or field level - so we handle both\n  var widgetColor = getDefaultColor(widget);\n  var fieldColor = getDefaultColor(checkBox.acroField);\n  var rectangle = widget.getRectangle();\n  var ap = widget.getAppearanceCharacteristics();\n  var bs = widget.getBorderStyle();\n  var borderWidth = (_a = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _a !== void 0 ? _a : 0;\n  var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n  var _d = adjustDimsForRotation(rectangle, rotation),\n    width = _d.width,\n    height = _d.height;\n  var rotate = rotateInPlace(__assign(__assign({}, rectangle), {\n    rotation: rotation\n  }));\n  var black = rgb(0, 0, 0);\n  var borderColor = (_b = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor())) !== null && _b !== void 0 ? _b : black;\n  var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n  var downBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor(), 0.8);\n  // Update color\n  var textColor = (_c = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _c !== void 0 ? _c : black;\n  if (widgetColor) {\n    updateDefaultAppearance(widget, textColor);\n  } else {\n    updateDefaultAppearance(checkBox.acroField, textColor);\n  }\n  var options = {\n    x: 0 + borderWidth / 2,\n    y: 0 + borderWidth / 2,\n    width: width - borderWidth,\n    height: height - borderWidth,\n    thickness: 1.5,\n    borderWidth: borderWidth,\n    borderColor: borderColor,\n    markColor: textColor\n  };\n  return {\n    normal: {\n      on: __spreadArrays(rotate, drawCheckBox(__assign(__assign({}, options), {\n        color: normalBackgroundColor,\n        filled: true\n      }))),\n      off: __spreadArrays(rotate, drawCheckBox(__assign(__assign({}, options), {\n        color: normalBackgroundColor,\n        filled: false\n      })))\n    },\n    down: {\n      on: __spreadArrays(rotate, drawCheckBox(__assign(__assign({}, options), {\n        color: downBackgroundColor,\n        filled: true\n      }))),\n      off: __spreadArrays(rotate, drawCheckBox(__assign(__assign({}, options), {\n        color: downBackgroundColor,\n        filled: false\n      })))\n    }\n  };\n};\nexport var defaultRadioGroupAppearanceProvider = function (radioGroup, widget) {\n  var _a, _b, _c;\n  // The `/DA` entry can be at the widget or field level - so we handle both\n  var widgetColor = getDefaultColor(widget);\n  var fieldColor = getDefaultColor(radioGroup.acroField);\n  var rectangle = widget.getRectangle();\n  var ap = widget.getAppearanceCharacteristics();\n  var bs = widget.getBorderStyle();\n  var borderWidth = (_a = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _a !== void 0 ? _a : 0;\n  var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n  var _d = adjustDimsForRotation(rectangle, rotation),\n    width = _d.width,\n    height = _d.height;\n  var rotate = rotateInPlace(__assign(__assign({}, rectangle), {\n    rotation: rotation\n  }));\n  var black = rgb(0, 0, 0);\n  var borderColor = (_b = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor())) !== null && _b !== void 0 ? _b : black;\n  var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n  var downBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor(), 0.8);\n  // Update color\n  var textColor = (_c = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _c !== void 0 ? _c : black;\n  if (widgetColor) {\n    updateDefaultAppearance(widget, textColor);\n  } else {\n    updateDefaultAppearance(radioGroup.acroField, textColor);\n  }\n  var options = {\n    x: width / 2,\n    y: height / 2,\n    width: width - borderWidth,\n    height: height - borderWidth,\n    borderWidth: borderWidth,\n    borderColor: borderColor,\n    dotColor: textColor\n  };\n  return {\n    normal: {\n      on: __spreadArrays(rotate, drawRadioButton(__assign(__assign({}, options), {\n        color: normalBackgroundColor,\n        filled: true\n      }))),\n      off: __spreadArrays(rotate, drawRadioButton(__assign(__assign({}, options), {\n        color: normalBackgroundColor,\n        filled: false\n      })))\n    },\n    down: {\n      on: __spreadArrays(rotate, drawRadioButton(__assign(__assign({}, options), {\n        color: downBackgroundColor,\n        filled: true\n      }))),\n      off: __spreadArrays(rotate, drawRadioButton(__assign(__assign({}, options), {\n        color: downBackgroundColor,\n        filled: false\n      })))\n    }\n  };\n};\nexport var defaultButtonAppearanceProvider = function (button, widget, font) {\n  var _a, _b, _c, _d, _e;\n  // The `/DA` entry can be at the widget or field level - so we handle both\n  var widgetColor = getDefaultColor(widget);\n  var fieldColor = getDefaultColor(button.acroField);\n  var widgetFontSize = getDefaultFontSize(widget);\n  var fieldFontSize = getDefaultFontSize(button.acroField);\n  var rectangle = widget.getRectangle();\n  var ap = widget.getAppearanceCharacteristics();\n  var bs = widget.getBorderStyle();\n  var captions = ap === null || ap === void 0 ? void 0 : ap.getCaptions();\n  var normalText = (_a = captions === null || captions === void 0 ? void 0 : captions.normal) !== null && _a !== void 0 ? _a : '';\n  var downText = (_c = (_b = captions === null || captions === void 0 ? void 0 : captions.down) !== null && _b !== void 0 ? _b : normalText) !== null && _c !== void 0 ? _c : '';\n  var borderWidth = (_d = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _d !== void 0 ? _d : 0;\n  var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n  var _f = adjustDimsForRotation(rectangle, rotation),\n    width = _f.width,\n    height = _f.height;\n  var rotate = rotateInPlace(__assign(__assign({}, rectangle), {\n    rotation: rotation\n  }));\n  var black = rgb(0, 0, 0);\n  var borderColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());\n  var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n  var downBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor(), 0.8);\n  var bounds = {\n    x: borderWidth,\n    y: borderWidth,\n    width: width - borderWidth * 2,\n    height: height - borderWidth * 2\n  };\n  var normalLayout = layoutSinglelineText(normalText, {\n    alignment: TextAlignment.Center,\n    fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n    font: font,\n    bounds: bounds\n  });\n  var downLayout = layoutSinglelineText(downText, {\n    alignment: TextAlignment.Center,\n    fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n    font: font,\n    bounds: bounds\n  });\n  // Update font size and color\n  var fontSize = Math.min(normalLayout.fontSize, downLayout.fontSize);\n  var textColor = (_e = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _e !== void 0 ? _e : black;\n  if (widgetColor || widgetFontSize !== undefined) {\n    updateDefaultAppearance(widget, textColor, font, fontSize);\n  } else {\n    updateDefaultAppearance(button.acroField, textColor, font, fontSize);\n  }\n  var options = {\n    x: 0 + borderWidth / 2,\n    y: 0 + borderWidth / 2,\n    width: width - borderWidth,\n    height: height - borderWidth,\n    borderWidth: borderWidth,\n    borderColor: borderColor,\n    textColor: textColor,\n    font: font.name,\n    fontSize: fontSize\n  };\n  return {\n    normal: __spreadArrays(rotate, drawButton(__assign(__assign({}, options), {\n      color: normalBackgroundColor,\n      textLines: [normalLayout.line]\n    }))),\n    down: __spreadArrays(rotate, drawButton(__assign(__assign({}, options), {\n      color: downBackgroundColor,\n      textLines: [downLayout.line]\n    })))\n  };\n};\nexport var defaultTextFieldAppearanceProvider = function (textField, widget, font) {\n  var _a, _b, _c, _d;\n  // The `/DA` entry can be at the widget or field level - so we handle both\n  var widgetColor = getDefaultColor(widget);\n  var fieldColor = getDefaultColor(textField.acroField);\n  var widgetFontSize = getDefaultFontSize(widget);\n  var fieldFontSize = getDefaultFontSize(textField.acroField);\n  var rectangle = widget.getRectangle();\n  var ap = widget.getAppearanceCharacteristics();\n  var bs = widget.getBorderStyle();\n  var text = (_a = textField.getText()) !== null && _a !== void 0 ? _a : '';\n  var borderWidth = (_b = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _b !== void 0 ? _b : 0;\n  var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n  var _e = adjustDimsForRotation(rectangle, rotation),\n    width = _e.width,\n    height = _e.height;\n  var rotate = rotateInPlace(__assign(__assign({}, rectangle), {\n    rotation: rotation\n  }));\n  var black = rgb(0, 0, 0);\n  var borderColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());\n  var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n  var textLines;\n  var fontSize;\n  var padding = textField.isCombed() ? 0 : 1;\n  var bounds = {\n    x: borderWidth + padding,\n    y: borderWidth + padding,\n    width: width - (borderWidth + padding) * 2,\n    height: height - (borderWidth + padding) * 2\n  };\n  if (textField.isMultiline()) {\n    var layout = layoutMultilineText(text, {\n      alignment: textField.getAlignment(),\n      fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n      font: font,\n      bounds: bounds\n    });\n    textLines = layout.lines;\n    fontSize = layout.fontSize;\n  } else if (textField.isCombed()) {\n    var layout = layoutCombedText(text, {\n      fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n      font: font,\n      bounds: bounds,\n      cellCount: (_c = textField.getMaxLength()) !== null && _c !== void 0 ? _c : 0\n    });\n    textLines = layout.cells;\n    fontSize = layout.fontSize;\n  } else {\n    var layout = layoutSinglelineText(text, {\n      alignment: textField.getAlignment(),\n      fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n      font: font,\n      bounds: bounds\n    });\n    textLines = [layout.line];\n    fontSize = layout.fontSize;\n  }\n  // Update font size and color\n  var textColor = (_d = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _d !== void 0 ? _d : black;\n  if (widgetColor || widgetFontSize !== undefined) {\n    updateDefaultAppearance(widget, textColor, font, fontSize);\n  } else {\n    updateDefaultAppearance(textField.acroField, textColor, font, fontSize);\n  }\n  var options = {\n    x: 0 + borderWidth / 2,\n    y: 0 + borderWidth / 2,\n    width: width - borderWidth,\n    height: height - borderWidth,\n    borderWidth: borderWidth !== null && borderWidth !== void 0 ? borderWidth : 0,\n    borderColor: borderColor,\n    textColor: textColor,\n    font: font.name,\n    fontSize: fontSize,\n    color: normalBackgroundColor,\n    textLines: textLines,\n    padding: padding\n  };\n  return __spreadArrays(rotate, drawTextField(options));\n};\nexport var defaultDropdownAppearanceProvider = function (dropdown, widget, font) {\n  var _a, _b, _c;\n  // The `/DA` entry can be at the widget or field level - so we handle both\n  var widgetColor = getDefaultColor(widget);\n  var fieldColor = getDefaultColor(dropdown.acroField);\n  var widgetFontSize = getDefaultFontSize(widget);\n  var fieldFontSize = getDefaultFontSize(dropdown.acroField);\n  var rectangle = widget.getRectangle();\n  var ap = widget.getAppearanceCharacteristics();\n  var bs = widget.getBorderStyle();\n  var text = (_a = dropdown.getSelected()[0]) !== null && _a !== void 0 ? _a : '';\n  var borderWidth = (_b = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _b !== void 0 ? _b : 0;\n  var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n  var _d = adjustDimsForRotation(rectangle, rotation),\n    width = _d.width,\n    height = _d.height;\n  var rotate = rotateInPlace(__assign(__assign({}, rectangle), {\n    rotation: rotation\n  }));\n  var black = rgb(0, 0, 0);\n  var borderColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());\n  var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n  var padding = 1;\n  var bounds = {\n    x: borderWidth + padding,\n    y: borderWidth + padding,\n    width: width - (borderWidth + padding) * 2,\n    height: height - (borderWidth + padding) * 2\n  };\n  var _e = layoutSinglelineText(text, {\n      alignment: TextAlignment.Left,\n      fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n      font: font,\n      bounds: bounds\n    }),\n    line = _e.line,\n    fontSize = _e.fontSize;\n  // Update font size and color\n  var textColor = (_c = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _c !== void 0 ? _c : black;\n  if (widgetColor || widgetFontSize !== undefined) {\n    updateDefaultAppearance(widget, textColor, font, fontSize);\n  } else {\n    updateDefaultAppearance(dropdown.acroField, textColor, font, fontSize);\n  }\n  var options = {\n    x: 0 + borderWidth / 2,\n    y: 0 + borderWidth / 2,\n    width: width - borderWidth,\n    height: height - borderWidth,\n    borderWidth: borderWidth !== null && borderWidth !== void 0 ? borderWidth : 0,\n    borderColor: borderColor,\n    textColor: textColor,\n    font: font.name,\n    fontSize: fontSize,\n    color: normalBackgroundColor,\n    textLines: [line],\n    padding: padding\n  };\n  return __spreadArrays(rotate, drawTextField(options));\n};\nexport var defaultOptionListAppearanceProvider = function (optionList, widget, font) {\n  var _a, _b;\n  // The `/DA` entry can be at the widget or field level - so we handle both\n  var widgetColor = getDefaultColor(widget);\n  var fieldColor = getDefaultColor(optionList.acroField);\n  var widgetFontSize = getDefaultFontSize(widget);\n  var fieldFontSize = getDefaultFontSize(optionList.acroField);\n  var rectangle = widget.getRectangle();\n  var ap = widget.getAppearanceCharacteristics();\n  var bs = widget.getBorderStyle();\n  var borderWidth = (_a = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _a !== void 0 ? _a : 0;\n  var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n  var _c = adjustDimsForRotation(rectangle, rotation),\n    width = _c.width,\n    height = _c.height;\n  var rotate = rotateInPlace(__assign(__assign({}, rectangle), {\n    rotation: rotation\n  }));\n  var black = rgb(0, 0, 0);\n  var borderColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());\n  var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n  var options = optionList.getOptions();\n  var selected = optionList.getSelected();\n  if (optionList.isSorted()) options.sort();\n  var text = '';\n  for (var idx = 0, len = options.length; idx < len; idx++) {\n    text += options[idx];\n    if (idx < len - 1) text += '\\n';\n  }\n  var padding = 1;\n  var bounds = {\n    x: borderWidth + padding,\n    y: borderWidth + padding,\n    width: width - (borderWidth + padding) * 2,\n    height: height - (borderWidth + padding) * 2\n  };\n  var _d = layoutMultilineText(text, {\n      alignment: TextAlignment.Left,\n      fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n      font: font,\n      bounds: bounds\n    }),\n    lines = _d.lines,\n    fontSize = _d.fontSize,\n    lineHeight = _d.lineHeight;\n  var selectedLines = [];\n  for (var idx = 0, len = lines.length; idx < len; idx++) {\n    var line = lines[idx];\n    if (selected.includes(line.text)) selectedLines.push(idx);\n  }\n  var blue = rgb(153 / 255, 193 / 255, 218 / 255);\n  // Update font size and color\n  var textColor = (_b = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _b !== void 0 ? _b : black;\n  if (widgetColor || widgetFontSize !== undefined) {\n    updateDefaultAppearance(widget, textColor, font, fontSize);\n  } else {\n    updateDefaultAppearance(optionList.acroField, textColor, font, fontSize);\n  }\n  return __spreadArrays(rotate, drawOptionList({\n    x: 0 + borderWidth / 2,\n    y: 0 + borderWidth / 2,\n    width: width - borderWidth,\n    height: height - borderWidth,\n    borderWidth: borderWidth !== null && borderWidth !== void 0 ? borderWidth : 0,\n    borderColor: borderColor,\n    textColor: textColor,\n    font: font.name,\n    fontSize: fontSize,\n    color: normalBackgroundColor,\n    textLines: lines,\n    lineHeight: lineHeight,\n    selectedColor: blue,\n    selectedLines: selectedLines,\n    padding: padding\n  }));\n};","map":{"version":3,"names":["__assign","__spreadArrays","drawCheckBox","rotateInPlace","drawRadioButton","drawButton","drawTextField","drawOptionList","rgb","componentsToColor","setFillingColor","grayscale","cmyk","reduceRotation","adjustDimsForRotation","layoutMultilineText","layoutCombedText","layoutSinglelineText","TextAlignment","setFontAndSize","findLastMatch","normalizeAppearance","appearance","normal","tfRegex","getDefaultFontSize","field","_a","_b","da","getDefaultAppearance","daMatch","match","defaultFontSize","Number","isFinite","undefined","colorRegex","getDefaultColor","c1","c2","c3","c4","colorSpace","updateDefaultAppearance","color","font","fontSize","toString","name","join","setDefaultAppearance","defaultCheckBoxAppearanceProvider","checkBox","widget","_c","widgetColor","fieldColor","acroField","rectangle","getRectangle","ap","getAppearanceCharacteristics","bs","getBorderStyle","borderWidth","getWidth","rotation","getRotation","_d","width","height","rotate","black","borderColor","getBorderColor","normalBackgroundColor","getBackgroundColor","downBackgroundColor","textColor","options","x","y","thickness","markColor","on","filled","off","down","defaultRadioGroupAppearanceProvider","radioGroup","dotColor","defaultButtonAppearanceProvider","button","_e","widgetFontSize","fieldFontSize","captions","getCaptions","normalText","downText","_f","bounds","normalLayout","alignment","Center","downLayout","Math","min","textLines","line","defaultTextFieldAppearanceProvider","textField","text","getText","padding","isCombed","isMultiline","layout","getAlignment","lines","cellCount","getMaxLength","cells","defaultDropdownAppearanceProvider","dropdown","getSelected","Left","defaultOptionListAppearanceProvider","optionList","getOptions","selected","isSorted","sort","idx","len","length","lineHeight","selectedLines","includes","push","blue","selectedColor"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/api/form/appearances.js"],"sourcesContent":["import { __assign, __spreadArrays } from \"tslib\";\nimport { drawCheckBox, rotateInPlace, drawRadioButton, drawButton, drawTextField, drawOptionList, } from \"../operations\";\nimport { rgb, componentsToColor, setFillingColor, grayscale, cmyk, } from \"../colors\";\nimport { reduceRotation, adjustDimsForRotation } from \"../rotations\";\nimport { layoutMultilineText, layoutCombedText, layoutSinglelineText, } from \"../text/layout\";\nimport { TextAlignment } from \"../text/alignment\";\nimport { setFontAndSize } from \"../operators\";\nimport { findLastMatch } from \"../../utils\";\n/********************* Appearance Provider Functions **************************/\nexport var normalizeAppearance = function (appearance) {\n    if ('normal' in appearance)\n        return appearance;\n    return { normal: appearance };\n};\n// Examples:\n//   `/Helv 12 Tf` -> ['/Helv 12 Tf', 'Helv', '12']\n//   `/HeBo 8.00 Tf` -> ['/HeBo 8 Tf', 'HeBo', '8.00']\nvar tfRegex = /\\/([^\\0\\t\\n\\f\\r\\ ]+)[\\0\\t\\n\\f\\r\\ ]+(\\d*\\.\\d+|\\d+)[\\0\\t\\n\\f\\r\\ ]+Tf/;\nvar getDefaultFontSize = function (field) {\n    var _a, _b;\n    var da = (_a = field.getDefaultAppearance()) !== null && _a !== void 0 ? _a : '';\n    var daMatch = (_b = findLastMatch(da, tfRegex).match) !== null && _b !== void 0 ? _b : [];\n    var defaultFontSize = Number(daMatch[2]);\n    return isFinite(defaultFontSize) ? defaultFontSize : undefined;\n};\n// Examples:\n//   `0.3 g` -> ['0.3', 'g']\n//   `0.3 1 .3 rg` -> ['0.3', '1', '.3', 'rg']\n//   `0.3 1 .3 0 k` -> ['0.3', '1', '.3', '0', 'k']\nvar colorRegex = /(\\d*\\.\\d+|\\d+)[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]+(g|rg|k)/;\nvar getDefaultColor = function (field) {\n    var _a;\n    var da = (_a = field.getDefaultAppearance()) !== null && _a !== void 0 ? _a : '';\n    var daMatch = findLastMatch(da, colorRegex).match;\n    var _b = daMatch !== null && daMatch !== void 0 ? daMatch : [], c1 = _b[1], c2 = _b[2], c3 = _b[3], c4 = _b[4], colorSpace = _b[5];\n    if (colorSpace === 'g' && c1) {\n        return grayscale(Number(c1));\n    }\n    if (colorSpace === 'rg' && c1 && c2 && c3) {\n        return rgb(Number(c1), Number(c2), Number(c3));\n    }\n    if (colorSpace === 'k' && c1 && c2 && c3 && c4) {\n        return cmyk(Number(c1), Number(c2), Number(c3), Number(c4));\n    }\n    return undefined;\n};\nvar updateDefaultAppearance = function (field, color, font, fontSize) {\n    var _a;\n    if (fontSize === void 0) { fontSize = 0; }\n    var da = [\n        setFillingColor(color).toString(),\n        setFontAndSize((_a = font === null || font === void 0 ? void 0 : font.name) !== null && _a !== void 0 ? _a : 'dummy__noop', fontSize).toString(),\n    ].join('\\n');\n    field.setDefaultAppearance(da);\n};\nexport var defaultCheckBoxAppearanceProvider = function (checkBox, widget) {\n    var _a, _b, _c;\n    // The `/DA` entry can be at the widget or field level - so we handle both\n    var widgetColor = getDefaultColor(widget);\n    var fieldColor = getDefaultColor(checkBox.acroField);\n    var rectangle = widget.getRectangle();\n    var ap = widget.getAppearanceCharacteristics();\n    var bs = widget.getBorderStyle();\n    var borderWidth = (_a = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _a !== void 0 ? _a : 0;\n    var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n    var _d = adjustDimsForRotation(rectangle, rotation), width = _d.width, height = _d.height;\n    var rotate = rotateInPlace(__assign(__assign({}, rectangle), { rotation: rotation }));\n    var black = rgb(0, 0, 0);\n    var borderColor = (_b = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor())) !== null && _b !== void 0 ? _b : black;\n    var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n    var downBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor(), 0.8);\n    // Update color\n    var textColor = (_c = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _c !== void 0 ? _c : black;\n    if (widgetColor) {\n        updateDefaultAppearance(widget, textColor);\n    }\n    else {\n        updateDefaultAppearance(checkBox.acroField, textColor);\n    }\n    var options = {\n        x: 0 + borderWidth / 2,\n        y: 0 + borderWidth / 2,\n        width: width - borderWidth,\n        height: height - borderWidth,\n        thickness: 1.5,\n        borderWidth: borderWidth,\n        borderColor: borderColor,\n        markColor: textColor,\n    };\n    return {\n        normal: {\n            on: __spreadArrays(rotate, drawCheckBox(__assign(__assign({}, options), { color: normalBackgroundColor, filled: true }))),\n            off: __spreadArrays(rotate, drawCheckBox(__assign(__assign({}, options), { color: normalBackgroundColor, filled: false }))),\n        },\n        down: {\n            on: __spreadArrays(rotate, drawCheckBox(__assign(__assign({}, options), { color: downBackgroundColor, filled: true }))),\n            off: __spreadArrays(rotate, drawCheckBox(__assign(__assign({}, options), { color: downBackgroundColor, filled: false }))),\n        },\n    };\n};\nexport var defaultRadioGroupAppearanceProvider = function (radioGroup, widget) {\n    var _a, _b, _c;\n    // The `/DA` entry can be at the widget or field level - so we handle both\n    var widgetColor = getDefaultColor(widget);\n    var fieldColor = getDefaultColor(radioGroup.acroField);\n    var rectangle = widget.getRectangle();\n    var ap = widget.getAppearanceCharacteristics();\n    var bs = widget.getBorderStyle();\n    var borderWidth = (_a = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _a !== void 0 ? _a : 0;\n    var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n    var _d = adjustDimsForRotation(rectangle, rotation), width = _d.width, height = _d.height;\n    var rotate = rotateInPlace(__assign(__assign({}, rectangle), { rotation: rotation }));\n    var black = rgb(0, 0, 0);\n    var borderColor = (_b = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor())) !== null && _b !== void 0 ? _b : black;\n    var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n    var downBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor(), 0.8);\n    // Update color\n    var textColor = (_c = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _c !== void 0 ? _c : black;\n    if (widgetColor) {\n        updateDefaultAppearance(widget, textColor);\n    }\n    else {\n        updateDefaultAppearance(radioGroup.acroField, textColor);\n    }\n    var options = {\n        x: width / 2,\n        y: height / 2,\n        width: width - borderWidth,\n        height: height - borderWidth,\n        borderWidth: borderWidth,\n        borderColor: borderColor,\n        dotColor: textColor,\n    };\n    return {\n        normal: {\n            on: __spreadArrays(rotate, drawRadioButton(__assign(__assign({}, options), { color: normalBackgroundColor, filled: true }))),\n            off: __spreadArrays(rotate, drawRadioButton(__assign(__assign({}, options), { color: normalBackgroundColor, filled: false }))),\n        },\n        down: {\n            on: __spreadArrays(rotate, drawRadioButton(__assign(__assign({}, options), { color: downBackgroundColor, filled: true }))),\n            off: __spreadArrays(rotate, drawRadioButton(__assign(__assign({}, options), { color: downBackgroundColor, filled: false }))),\n        },\n    };\n};\nexport var defaultButtonAppearanceProvider = function (button, widget, font) {\n    var _a, _b, _c, _d, _e;\n    // The `/DA` entry can be at the widget or field level - so we handle both\n    var widgetColor = getDefaultColor(widget);\n    var fieldColor = getDefaultColor(button.acroField);\n    var widgetFontSize = getDefaultFontSize(widget);\n    var fieldFontSize = getDefaultFontSize(button.acroField);\n    var rectangle = widget.getRectangle();\n    var ap = widget.getAppearanceCharacteristics();\n    var bs = widget.getBorderStyle();\n    var captions = ap === null || ap === void 0 ? void 0 : ap.getCaptions();\n    var normalText = (_a = captions === null || captions === void 0 ? void 0 : captions.normal) !== null && _a !== void 0 ? _a : '';\n    var downText = (_c = (_b = captions === null || captions === void 0 ? void 0 : captions.down) !== null && _b !== void 0 ? _b : normalText) !== null && _c !== void 0 ? _c : '';\n    var borderWidth = (_d = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _d !== void 0 ? _d : 0;\n    var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n    var _f = adjustDimsForRotation(rectangle, rotation), width = _f.width, height = _f.height;\n    var rotate = rotateInPlace(__assign(__assign({}, rectangle), { rotation: rotation }));\n    var black = rgb(0, 0, 0);\n    var borderColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());\n    var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n    var downBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor(), 0.8);\n    var bounds = {\n        x: borderWidth,\n        y: borderWidth,\n        width: width - borderWidth * 2,\n        height: height - borderWidth * 2,\n    };\n    var normalLayout = layoutSinglelineText(normalText, {\n        alignment: TextAlignment.Center,\n        fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n        font: font,\n        bounds: bounds,\n    });\n    var downLayout = layoutSinglelineText(downText, {\n        alignment: TextAlignment.Center,\n        fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n        font: font,\n        bounds: bounds,\n    });\n    // Update font size and color\n    var fontSize = Math.min(normalLayout.fontSize, downLayout.fontSize);\n    var textColor = (_e = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _e !== void 0 ? _e : black;\n    if (widgetColor || widgetFontSize !== undefined) {\n        updateDefaultAppearance(widget, textColor, font, fontSize);\n    }\n    else {\n        updateDefaultAppearance(button.acroField, textColor, font, fontSize);\n    }\n    var options = {\n        x: 0 + borderWidth / 2,\n        y: 0 + borderWidth / 2,\n        width: width - borderWidth,\n        height: height - borderWidth,\n        borderWidth: borderWidth,\n        borderColor: borderColor,\n        textColor: textColor,\n        font: font.name,\n        fontSize: fontSize,\n    };\n    return {\n        normal: __spreadArrays(rotate, drawButton(__assign(__assign({}, options), { color: normalBackgroundColor, textLines: [normalLayout.line] }))),\n        down: __spreadArrays(rotate, drawButton(__assign(__assign({}, options), { color: downBackgroundColor, textLines: [downLayout.line] }))),\n    };\n};\nexport var defaultTextFieldAppearanceProvider = function (textField, widget, font) {\n    var _a, _b, _c, _d;\n    // The `/DA` entry can be at the widget or field level - so we handle both\n    var widgetColor = getDefaultColor(widget);\n    var fieldColor = getDefaultColor(textField.acroField);\n    var widgetFontSize = getDefaultFontSize(widget);\n    var fieldFontSize = getDefaultFontSize(textField.acroField);\n    var rectangle = widget.getRectangle();\n    var ap = widget.getAppearanceCharacteristics();\n    var bs = widget.getBorderStyle();\n    var text = (_a = textField.getText()) !== null && _a !== void 0 ? _a : '';\n    var borderWidth = (_b = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _b !== void 0 ? _b : 0;\n    var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n    var _e = adjustDimsForRotation(rectangle, rotation), width = _e.width, height = _e.height;\n    var rotate = rotateInPlace(__assign(__assign({}, rectangle), { rotation: rotation }));\n    var black = rgb(0, 0, 0);\n    var borderColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());\n    var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n    var textLines;\n    var fontSize;\n    var padding = textField.isCombed() ? 0 : 1;\n    var bounds = {\n        x: borderWidth + padding,\n        y: borderWidth + padding,\n        width: width - (borderWidth + padding) * 2,\n        height: height - (borderWidth + padding) * 2,\n    };\n    if (textField.isMultiline()) {\n        var layout = layoutMultilineText(text, {\n            alignment: textField.getAlignment(),\n            fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n            font: font,\n            bounds: bounds,\n        });\n        textLines = layout.lines;\n        fontSize = layout.fontSize;\n    }\n    else if (textField.isCombed()) {\n        var layout = layoutCombedText(text, {\n            fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n            font: font,\n            bounds: bounds,\n            cellCount: (_c = textField.getMaxLength()) !== null && _c !== void 0 ? _c : 0,\n        });\n        textLines = layout.cells;\n        fontSize = layout.fontSize;\n    }\n    else {\n        var layout = layoutSinglelineText(text, {\n            alignment: textField.getAlignment(),\n            fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n            font: font,\n            bounds: bounds,\n        });\n        textLines = [layout.line];\n        fontSize = layout.fontSize;\n    }\n    // Update font size and color\n    var textColor = (_d = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _d !== void 0 ? _d : black;\n    if (widgetColor || widgetFontSize !== undefined) {\n        updateDefaultAppearance(widget, textColor, font, fontSize);\n    }\n    else {\n        updateDefaultAppearance(textField.acroField, textColor, font, fontSize);\n    }\n    var options = {\n        x: 0 + borderWidth / 2,\n        y: 0 + borderWidth / 2,\n        width: width - borderWidth,\n        height: height - borderWidth,\n        borderWidth: borderWidth !== null && borderWidth !== void 0 ? borderWidth : 0,\n        borderColor: borderColor,\n        textColor: textColor,\n        font: font.name,\n        fontSize: fontSize,\n        color: normalBackgroundColor,\n        textLines: textLines,\n        padding: padding,\n    };\n    return __spreadArrays(rotate, drawTextField(options));\n};\nexport var defaultDropdownAppearanceProvider = function (dropdown, widget, font) {\n    var _a, _b, _c;\n    // The `/DA` entry can be at the widget or field level - so we handle both\n    var widgetColor = getDefaultColor(widget);\n    var fieldColor = getDefaultColor(dropdown.acroField);\n    var widgetFontSize = getDefaultFontSize(widget);\n    var fieldFontSize = getDefaultFontSize(dropdown.acroField);\n    var rectangle = widget.getRectangle();\n    var ap = widget.getAppearanceCharacteristics();\n    var bs = widget.getBorderStyle();\n    var text = (_a = dropdown.getSelected()[0]) !== null && _a !== void 0 ? _a : '';\n    var borderWidth = (_b = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _b !== void 0 ? _b : 0;\n    var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n    var _d = adjustDimsForRotation(rectangle, rotation), width = _d.width, height = _d.height;\n    var rotate = rotateInPlace(__assign(__assign({}, rectangle), { rotation: rotation }));\n    var black = rgb(0, 0, 0);\n    var borderColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());\n    var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n    var padding = 1;\n    var bounds = {\n        x: borderWidth + padding,\n        y: borderWidth + padding,\n        width: width - (borderWidth + padding) * 2,\n        height: height - (borderWidth + padding) * 2,\n    };\n    var _e = layoutSinglelineText(text, {\n        alignment: TextAlignment.Left,\n        fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n        font: font,\n        bounds: bounds,\n    }), line = _e.line, fontSize = _e.fontSize;\n    // Update font size and color\n    var textColor = (_c = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _c !== void 0 ? _c : black;\n    if (widgetColor || widgetFontSize !== undefined) {\n        updateDefaultAppearance(widget, textColor, font, fontSize);\n    }\n    else {\n        updateDefaultAppearance(dropdown.acroField, textColor, font, fontSize);\n    }\n    var options = {\n        x: 0 + borderWidth / 2,\n        y: 0 + borderWidth / 2,\n        width: width - borderWidth,\n        height: height - borderWidth,\n        borderWidth: borderWidth !== null && borderWidth !== void 0 ? borderWidth : 0,\n        borderColor: borderColor,\n        textColor: textColor,\n        font: font.name,\n        fontSize: fontSize,\n        color: normalBackgroundColor,\n        textLines: [line],\n        padding: padding,\n    };\n    return __spreadArrays(rotate, drawTextField(options));\n};\nexport var defaultOptionListAppearanceProvider = function (optionList, widget, font) {\n    var _a, _b;\n    // The `/DA` entry can be at the widget or field level - so we handle both\n    var widgetColor = getDefaultColor(widget);\n    var fieldColor = getDefaultColor(optionList.acroField);\n    var widgetFontSize = getDefaultFontSize(widget);\n    var fieldFontSize = getDefaultFontSize(optionList.acroField);\n    var rectangle = widget.getRectangle();\n    var ap = widget.getAppearanceCharacteristics();\n    var bs = widget.getBorderStyle();\n    var borderWidth = (_a = bs === null || bs === void 0 ? void 0 : bs.getWidth()) !== null && _a !== void 0 ? _a : 0;\n    var rotation = reduceRotation(ap === null || ap === void 0 ? void 0 : ap.getRotation());\n    var _c = adjustDimsForRotation(rectangle, rotation), width = _c.width, height = _c.height;\n    var rotate = rotateInPlace(__assign(__assign({}, rectangle), { rotation: rotation }));\n    var black = rgb(0, 0, 0);\n    var borderColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBorderColor());\n    var normalBackgroundColor = componentsToColor(ap === null || ap === void 0 ? void 0 : ap.getBackgroundColor());\n    var options = optionList.getOptions();\n    var selected = optionList.getSelected();\n    if (optionList.isSorted())\n        options.sort();\n    var text = '';\n    for (var idx = 0, len = options.length; idx < len; idx++) {\n        text += options[idx];\n        if (idx < len - 1)\n            text += '\\n';\n    }\n    var padding = 1;\n    var bounds = {\n        x: borderWidth + padding,\n        y: borderWidth + padding,\n        width: width - (borderWidth + padding) * 2,\n        height: height - (borderWidth + padding) * 2,\n    };\n    var _d = layoutMultilineText(text, {\n        alignment: TextAlignment.Left,\n        fontSize: widgetFontSize !== null && widgetFontSize !== void 0 ? widgetFontSize : fieldFontSize,\n        font: font,\n        bounds: bounds,\n    }), lines = _d.lines, fontSize = _d.fontSize, lineHeight = _d.lineHeight;\n    var selectedLines = [];\n    for (var idx = 0, len = lines.length; idx < len; idx++) {\n        var line = lines[idx];\n        if (selected.includes(line.text))\n            selectedLines.push(idx);\n    }\n    var blue = rgb(153 / 255, 193 / 255, 218 / 255);\n    // Update font size and color\n    var textColor = (_b = widgetColor !== null && widgetColor !== void 0 ? widgetColor : fieldColor) !== null && _b !== void 0 ? _b : black;\n    if (widgetColor || widgetFontSize !== undefined) {\n        updateDefaultAppearance(widget, textColor, font, fontSize);\n    }\n    else {\n        updateDefaultAppearance(optionList.acroField, textColor, font, fontSize);\n    }\n    return __spreadArrays(rotate, drawOptionList({\n        x: 0 + borderWidth / 2,\n        y: 0 + borderWidth / 2,\n        width: width - borderWidth,\n        height: height - borderWidth,\n        borderWidth: borderWidth !== null && borderWidth !== void 0 ? borderWidth : 0,\n        borderColor: borderColor,\n        textColor: textColor,\n        font: font.name,\n        fontSize: fontSize,\n        color: normalBackgroundColor,\n        textLines: lines,\n        lineHeight: lineHeight,\n        selectedColor: blue,\n        selectedLines: selectedLines,\n        padding: padding,\n    }));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}