{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FrontNotafiscalService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = \"http://192.168.15.49:8080/cnotafiscal/notafiscal\";\n    this.url2 = \"http://192.168.15.49:8080/cnotafiscal/embarcacao\";\n  }\n  listarNotaFiscal() {\n    return this.httpClient.get(`${this.url}`);\n  }\n  listarNotaFiscalPorEmbarcacao(idEmbarcacao) {\n    return this.httpClient.get(`${this.url2}/${idEmbarcacao}`);\n  }\n  consultarNotaFiscal(idNotaFiscal) {\n    return this.httpClient.get(`${this.url}/${idNotaFiscal}`);\n  }\n  incluirNotaFiscal(notaFiscal) {\n    return this.httpClient.post(`${this.url}`, notaFiscal);\n  }\n  alterarNotaFiscal(IDNotaFiscal, notaFiscal) {\n    return this.httpClient.put(`${this.url}/${IDNotaFiscal}`, notaFiscal);\n  }\n  excluirNotaFiscal(IDNotaFiscal) {\n    return this.httpClient.delete(`${this.url}/${IDNotaFiscal}`);\n  }\n  uploadNotaFiscalPDF(idNotaFiscal, file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return this.httpClient.post(`${this.url}/${idNotaFiscal}/upload`, formData);\n  }\n  excluirNotaFiscalPDF(idNotaFiscal) {\n    return this.httpClient.delete(`${this.url}/${idNotaFiscal}/pdf`);\n  }\n  getNotaFiscalPDF(idNotaFiscal) {\n    return this.httpClient.get(`${this.url}/${idNotaFiscal}/pdf`, {\n      responseType: 'blob'\n    });\n  }\n  static #_ = this.ɵfac = function FrontNotafiscalService_Factory(t) {\n    return new (t || FrontNotafiscalService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FrontNotafiscalService,\n    factory: FrontNotafiscalService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FrontNotafiscalService","constructor","httpClient","url","url2","listarNotaFiscal","get","listarNotaFiscalPorEmbarcacao","idEmbarcacao","consultarNotaFiscal","idNotaFiscal","incluirNotaFiscal","notaFiscal","post","alterarNotaFiscal","IDNotaFiscal","put","excluirNotaFiscal","delete","uploadNotaFiscalPDF","file","formData","FormData","append","excluirNotaFiscalPDF","getNotaFiscalPDF","responseType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\front-notafiscal.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Notafiscal } from '../model/notafiscal';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FrontNotafiscalService {\r\n  private url = \"http://192.168.15.49:8080/cnotafiscal/notafiscal\";\r\n  private url2 = \"http://192.168.15.49:8080/cnotafiscal/embarcacao\";\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  listarNotaFiscal(): Observable<Notafiscal[]> {\r\n    return this.httpClient.get<Notafiscal[]>(`${this.url}`);\r\n  }\r\n\r\n  listarNotaFiscalPorEmbarcacao(idEmbarcacao: number): Observable<Notafiscal[]> {\r\n    return this.httpClient.get<Notafiscal[]>(`${this.url2}/${idEmbarcacao}`);\r\n  }\r\n\r\n  consultarNotaFiscal(idNotaFiscal: number): Observable<Notafiscal> {\r\n    return this.httpClient.get<Notafiscal>(`${this.url}/${idNotaFiscal}`);\r\n  }\r\n\r\n  incluirNotaFiscal(notaFiscal: Notafiscal): Observable<object> {\r\n    return this.httpClient.post(`${this.url}`, notaFiscal);\r\n  }\r\n\r\n  alterarNotaFiscal(IDNotaFiscal: number, notaFiscal: Notafiscal): Observable<object> {\r\n    return this.httpClient.put(`${this.url}/${IDNotaFiscal}`, notaFiscal);\r\n  }\r\n\r\n  excluirNotaFiscal(IDNotaFiscal: number): Observable<Object> {\r\n    return this.httpClient.delete<Notafiscal>(`${this.url}/${IDNotaFiscal}`);\r\n  }\r\n\r\n  uploadNotaFiscalPDF(idNotaFiscal: number, file: File): Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    return this.httpClient.post(`${this.url}/${idNotaFiscal}/upload`, formData);\r\n  }\r\n\r\n  excluirNotaFiscalPDF(idNotaFiscal: number): Observable<any> {\r\n    return this.httpClient.delete(`${this.url}/${idNotaFiscal}/pdf`);\r\n  }\r\n\r\n  getNotaFiscalPDF(idNotaFiscal: number): Observable<Blob> {\r\n    return this.httpClient.get(`${this.url}/${idNotaFiscal}/pdf`, { responseType: 'blob' });\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,sBAAsB;EAIjCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHtB,KAAAC,GAAG,GAAG,kDAAkD;IACxD,KAAAC,IAAI,GAAG,kDAAkD;EAEnB;EAE9CC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAe,GAAG,IAAI,CAACH,GAAG,EAAE,CAAC;EACzD;EAEAI,6BAA6BA,CAACC,YAAoB;IAChD,OAAO,IAAI,CAACN,UAAU,CAACI,GAAG,CAAe,GAAG,IAAI,CAACF,IAAI,IAAII,YAAY,EAAE,CAAC;EAC1E;EAEAC,mBAAmBA,CAACC,YAAoB;IACtC,OAAO,IAAI,CAACR,UAAU,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,GAAG,IAAIO,YAAY,EAAE,CAAC;EACvE;EAEAC,iBAAiBA,CAACC,UAAsB;IACtC,OAAO,IAAI,CAACV,UAAU,CAACW,IAAI,CAAC,GAAG,IAAI,CAACV,GAAG,EAAE,EAAES,UAAU,CAAC;EACxD;EAEAE,iBAAiBA,CAACC,YAAoB,EAAEH,UAAsB;IAC5D,OAAO,IAAI,CAACV,UAAU,CAACc,GAAG,CAAC,GAAG,IAAI,CAACb,GAAG,IAAIY,YAAY,EAAE,EAAEH,UAAU,CAAC;EACvE;EAEAK,iBAAiBA,CAACF,YAAoB;IACpC,OAAO,IAAI,CAACb,UAAU,CAACgB,MAAM,CAAa,GAAG,IAAI,CAACf,GAAG,IAAIY,YAAY,EAAE,CAAC;EAC1E;EAEAI,mBAAmBA,CAACT,YAAoB,EAAEU,IAAU;IAClD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,OAAO,IAAI,CAAClB,UAAU,CAACW,IAAI,CAAC,GAAG,IAAI,CAACV,GAAG,IAAIO,YAAY,SAAS,EAAEW,QAAQ,CAAC;EAC7E;EAEAG,oBAAoBA,CAACd,YAAoB;IACvC,OAAO,IAAI,CAACR,UAAU,CAACgB,MAAM,CAAC,GAAG,IAAI,CAACf,GAAG,IAAIO,YAAY,MAAM,CAAC;EAClE;EAEAe,gBAAgBA,CAACf,YAAoB;IACnC,OAAO,IAAI,CAACR,UAAU,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,GAAG,IAAIO,YAAY,MAAM,EAAE;MAAEgB,YAAY,EAAE;IAAM,CAAE,CAAC;EACzF;EAAC,QAAAC,CAAA,G;qBA1CU3B,sBAAsB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAtBhC,sBAAsB;IAAAiC,OAAA,EAAtBjC,sBAAsB,CAAAkC,IAAA;IAAAC,UAAA,EAFrB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}