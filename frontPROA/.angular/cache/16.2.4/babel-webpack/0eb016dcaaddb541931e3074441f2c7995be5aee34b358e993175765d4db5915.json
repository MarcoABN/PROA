{"ast":null,"code":"import _asyncToGenerator from \"E:/PROA/frontPROA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PDFDocument } from 'pdf-lib';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../front-prestador.service\";\nimport * as i3 from \"../front-procuracao.service\";\nexport class Procuracao01Service {\n  constructor(datePipe, prestadorService, procuracaoService) {\n    this.datePipe = datePipe;\n    this.prestadorService = prestadorService;\n    this.procuracaoService = procuracaoService;\n    this.prestadores = [];\n  }\n  procuracao01(embarcacao, cliente, servico) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.prestadorService.listarPrestador().subscribe(prestadores => {\n        _this.prestadores = prestadores;\n      });\n      _this.procuracaoService.consultarProcuracao(\"procuracao01\").subscribe(procuracao => {\n        _this.stringProcuracao = procuracao.textoProcuracao;\n      });\n      try {\n        const pdfBytes = yield fetch('assets/pdfanexos/Procuracao_modelo01.pdf').then(res => res.arrayBuffer());\n        const pdfDoc = yield PDFDocument.load(pdfBytes);\n        const form = pdfDoc.getForm();\n        _this.substituirCampos({\n          nome_cliente: embarcacao.cliente.nome,\n          nacionalidade_cliente: embarcacao.cliente.nacionalidade,\n          endereco_cliente: embarcacao.cliente.logradouro + \", \" + embarcacao.cliente.numero + \", \" + embarcacao.cliente.complemento,\n          cidade_cliente: embarcacao.cliente.cidade,\n          estado_cliente: embarcacao.cliente.uf,\n          identidade_cliente: embarcacao.cliente.rg,\n          orgao_exp: embarcacao.cliente.orgEmissor,\n          cpf_cliente: embarcacao.cliente.cpfcnpj\n        });\n        form.getTextField('corpocompleto').setText(_this.stringProcuracao);\n        form.getTextField('nomeembarcacao').setText(embarcacao.nomeEmbarcacao);\n        form.getTextField('tipo').setText(embarcacao.tipoEmbarcacao);\n        form.getTextField('comprimento').setText(embarcacao.compTotal.toString());\n        form.getTextField('boca').setText(embarcacao.bocaMoldada.toString());\n        form.getTextField('numcasco').setText(embarcacao.numCasco);\n        form.getTextField('potencia').setText(embarcacao.potenciaMotor.toString());\n        form.getTextField('inscricao').setText(embarcacao.numInscricao);\n        form.getTextField('atividade').setText(embarcacao.tipoAtividade);\n        form.getTextField('tripulantes').setText(embarcacao.qtdTripulantes.toString());\n        form.getTextField('passageiros').setText(embarcacao.lotacao.toString());\n        form.getTextField('materialcasco').setText(embarcacao.matCasco);\n        form.getTextField('numserie').setText(embarcacao.numCasco);\n        form.getTextField('nomecliente').setText(embarcacao.cliente.nome);\n        form.getTextField('cpf').setText(_this.formatarCPFouCNPJ(embarcacao.cliente.cpfcnpj));\n        const dataAtual = new Date();\n        const dia = dataAtual.getDate().toString().padStart(2, '0');\n        const mes = (dataAtual.getMonth() + 1).toString().padStart(2, '0'); // Janeiro é 0\n        const ano = dataAtual.getFullYear();\n        form.getTextField('localdata').setText(`${embarcacao.cliente.cidade} ${dia}/${mes}/${ano}`);\n        //form.flatten();\n        const modifiedPdfBytes = yield pdfDoc.save();\n        if (!servico) {\n          _this.abrirPDFemJanela(modifiedPdfBytes);\n          console.log('PDF Criado!');\n        } else {\n          return modifiedPdfBytes;\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }\n  downloadPdf(data, filename) {\n    const blob = new Blob([data], {\n      type: 'application/pdf'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.style.display = 'none';\n    a.href = url;\n    a.download = filename;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n  }\n  abrirPDFemJanela(data) {\n    const blob = new Blob([data], {\n      type: 'application/pdf'\n    });\n    const url = window.URL.createObjectURL(blob);\n    window.open(url, '_blank');\n  }\n  formatarCPFouCNPJ(valor) {\n    // Remove todos os caracteres não numéricos\n    const valorLimpo = valor.replace(/\\D/g, '');\n    if (valorLimpo.length === 11) {\n      // Formata como CPF\n      return valorLimpo.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, 'CPF: $1.$2.$3-$4');\n    } else if (valorLimpo.length === 14) {\n      // Formata como CNPJ\n      return valorLimpo.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, 'CNPJ: $1.$2.$3/$4-$5');\n    } else {\n      // Retorna o valor original se não for CPF nem CNPJ válido\n      return valor;\n    }\n  }\n  substituirCampos(campoValores) {\n    // Percorrer o mapa de campos e valores para substituir todos os placeholders\n    for (const [campo, valor] of Object.entries(campoValores)) {\n      const regex = new RegExp(`{{${campo}}}`, 'g');\n      this.stringProcuracao = this.stringProcuracao.replace(regex, valor);\n    }\n  }\n  gerarPdf() {\n    this.procuracaoService.alterarTextoEConverterParaPdf(this.stringProcuracao).subscribe(response => {\n      const blob = new Blob([response], {\n        type: 'application/pdf'\n      });\n      const url = window.URL.createObjectURL(blob);\n      window.open(url);\n    }, error => {\n      console.error('Erro ao gerar o PDF', error);\n    });\n  }\n  static #_ = this.ɵfac = function Procuracao01Service_Factory(t) {\n    return new (t || Procuracao01Service)(i0.ɵɵinject(i1.DatePipe), i0.ɵɵinject(i2.FrontPrestadorService), i0.ɵɵinject(i3.FrontProcuracaoService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Procuracao01Service,\n    factory: Procuracao01Service.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PDFDocument","Procuracao01Service","constructor","datePipe","prestadorService","procuracaoService","prestadores","procuracao01","embarcacao","cliente","servico","_this","_asyncToGenerator","listarPrestador","subscribe","consultarProcuracao","procuracao","stringProcuracao","textoProcuracao","pdfBytes","fetch","then","res","arrayBuffer","pdfDoc","load","form","getForm","substituirCampos","nome_cliente","nome","nacionalidade_cliente","nacionalidade","endereco_cliente","logradouro","numero","complemento","cidade_cliente","cidade","estado_cliente","uf","identidade_cliente","rg","orgao_exp","orgEmissor","cpf_cliente","cpfcnpj","getTextField","setText","nomeEmbarcacao","tipoEmbarcacao","compTotal","toString","bocaMoldada","numCasco","potenciaMotor","numInscricao","tipoAtividade","qtdTripulantes","lotacao","matCasco","formatarCPFouCNPJ","dataAtual","Date","dia","getDate","padStart","mes","getMonth","ano","getFullYear","modifiedPdfBytes","save","abrirPDFemJanela","console","log","err","error","downloadPdf","data","filename","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","body","appendChild","style","display","href","download","click","revokeObjectURL","removeChild","open","valor","valorLimpo","replace","length","campoValores","campo","Object","entries","regex","RegExp","gerarPdf","alterarTextoEConverterParaPdf","response","_","i0","ɵɵinject","i1","DatePipe","i2","FrontPrestadorService","i3","FrontProcuracaoService","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\anexos\\procuracao01.service.ts"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { Cliente } from 'src/app/model/cliente';\r\nimport { Embarcacao } from 'src/app/model/embarcacao';\r\nimport { Prestador } from 'src/app/model/prestador';\r\nimport { FrontPrestadorService } from '../front-prestador.service';\r\nimport { PDFDocument, rgb, StandardFonts } from 'pdf-lib';\r\nimport { Procuracao } from 'src/app/model/procuracao';\r\nimport { FrontProcuracaoService } from '../front-procuracao.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n}) \r\nexport class Procuracao01Service {\r\n\r\n  prestadores: Prestador[] = [];\r\n\r\n  stringProcuracao?: string;\r\n\r\n  constructor(private datePipe: DatePipe, private prestadorService: FrontPrestadorService, private procuracaoService: FrontProcuracaoService) { }\r\n\r\n\r\n  async procuracao01 (embarcacao: Embarcacao, cliente: Cliente, servico?: string): Promise<void | Uint8Array>{\r\n    \r\n    this.prestadorService.listarPrestador().subscribe(prestadores => {\r\n      this.prestadores = prestadores;\r\n    });\r\n\r\n    this.procuracaoService.consultarProcuracao(\"procuracao01\").subscribe((procuracao: any) => {\r\n      this.stringProcuracao = procuracao.textoProcuracao;\r\n    });\r\n    \r\n    \r\n\r\n    \r\n\r\n\r\n    try{\r\n      const pdfBytes = await fetch('assets/pdfanexos/Procuracao_modelo01.pdf').then(res => res.arrayBuffer());\r\n      const pdfDoc = await PDFDocument.load(pdfBytes);\r\n\r\n\r\n      const form = pdfDoc.getForm();\r\n\r\n\r\n\r\n      this.substituirCampos({\r\n        nome_cliente: embarcacao.cliente.nome,\r\n        nacionalidade_cliente: embarcacao.cliente.nacionalidade,\r\n        endereco_cliente: embarcacao.cliente.logradouro + \", \" +\r\n                          embarcacao.cliente.numero + \", \" +\r\n                          embarcacao.cliente.complemento,\r\n        cidade_cliente: embarcacao.cliente.cidade,\r\n        estado_cliente: embarcacao.cliente.uf,\r\n        identidade_cliente: embarcacao.cliente.rg,\r\n        orgao_exp: embarcacao.cliente.orgEmissor,\r\n        cpf_cliente: embarcacao.cliente.cpfcnpj,\r\n      });\r\n\r\n      form.getTextField('corpocompleto').setText(this.stringProcuracao);\r\n      \r\n\r\n      form.getTextField('nomeembarcacao').setText(embarcacao.nomeEmbarcacao);\r\n      form.getTextField('tipo').setText(embarcacao.tipoEmbarcacao);\r\n      form.getTextField('comprimento').setText(embarcacao.compTotal.toString());\r\n      form.getTextField('boca').setText(embarcacao.bocaMoldada.toString());\r\n      form.getTextField('numcasco').setText(embarcacao.numCasco);\r\n      form.getTextField('potencia').setText(embarcacao.potenciaMotor.toString());\r\n      form.getTextField('inscricao').setText(embarcacao.numInscricao);\r\n      form.getTextField('atividade').setText(embarcacao.tipoAtividade);\r\n      form.getTextField('tripulantes').setText(embarcacao.qtdTripulantes.toString());\r\n      form.getTextField('passageiros').setText(embarcacao.lotacao.toString());\r\n      form.getTextField('materialcasco').setText(embarcacao.matCasco);\r\n      form.getTextField('numserie').setText(embarcacao.numCasco);\r\n\r\n      form.getTextField('nomecliente').setText(embarcacao.cliente.nome);\r\n      form.getTextField('cpf').setText(this.formatarCPFouCNPJ(embarcacao.cliente.cpfcnpj));\r\n\r\n      const dataAtual = new Date();\r\n      const dia = dataAtual.getDate().toString().padStart(2, '0');\r\n      const mes = (dataAtual.getMonth() + 1).toString().padStart(2, '0'); // Janeiro é 0\r\n      const ano = dataAtual.getFullYear();\r\n\r\n      form.getTextField('localdata').setText(`${embarcacao.cliente.cidade} ${dia}/${mes}/${ano}`);\r\n\r\n      //form.flatten();\r\n      const modifiedPdfBytes = await pdfDoc.save();\r\n\r\n\r\n      if (!servico){\r\n        this.abrirPDFemJanela(modifiedPdfBytes);\r\n        console.log('PDF Criado!');\r\n      } else {\r\n        return modifiedPdfBytes;\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n  private downloadPdf(data: Uint8Array, filename: string): void {\r\n    const blob = new Blob([data], { type: 'application/pdf' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    document.body.appendChild(a);\r\n    a.style.display = 'none';\r\n    a.href = url;\r\n    a.download = filename;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  private abrirPDFemJanela(data: Uint8Array): void {\r\n    const blob = new Blob([data], { type: 'application/pdf' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  formatarCPFouCNPJ(valor: string): string {\r\n    // Remove todos os caracteres não numéricos\r\n    const valorLimpo = valor.replace(/\\D/g, '');\r\n  \r\n    if (valorLimpo.length === 11) {\r\n      // Formata como CPF\r\n      return valorLimpo.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, 'CPF: $1.$2.$3-$4');\r\n    } else if (valorLimpo.length === 14) {\r\n      // Formata como CNPJ\r\n      return valorLimpo.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, 'CNPJ: $1.$2.$3/$4-$5');\r\n    } else {\r\n      // Retorna o valor original se não for CPF nem CNPJ válido\r\n      return valor;\r\n    }\r\n  }\r\n\r\n  substituirCampos(campoValores: Record<string, string>): void {\r\n    // Percorrer o mapa de campos e valores para substituir todos os placeholders\r\n    for (const [campo, valor] of Object.entries(campoValores)) {\r\n      const regex = new RegExp(`{{${campo}}}`, 'g');\r\n      this.stringProcuracao = this.stringProcuracao!.replace(regex, valor);\r\n    }\r\n  }\r\n\r\n  gerarPdf() {\r\n\r\n    this.procuracaoService.alterarTextoEConverterParaPdf(this.stringProcuracao!).subscribe(\r\n      (response) => {\r\n        const blob = new Blob([response], { type: 'application/pdf' });\r\n        const url = window.URL.createObjectURL(blob);\r\n        window.open(url);\r\n      },\r\n      (error) => {\r\n        console.error('Erro ao gerar o PDF', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}