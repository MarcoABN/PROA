{"ast":null,"code":"import _asyncToGenerator from \"E:/PROA/frontPROA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PDFDocument } from 'pdf-lib';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport class Anexo3AService {\n  constructor(datePipe) {\n    this.datePipe = datePipe;\n    this.texto = [];\n  }\n  anexo3A(solicitacao, campotexto1, embarcacao, cliente, servico) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const pdfBytes = yield fetch('assets/pdfanexos/Anexo3A-N212.pdf').then(res => res.arrayBuffer());\n        const pdfDoc = yield PDFDocument.load(pdfBytes);\n        const form = pdfDoc.getForm();\n        const solicitacoes = solicitacao.split(',');\n        solicitacoes.forEach(valor => {\n          switch (valor.trim()) {\n            case \"1\":\n              form.getCheckBox('servico1').check();\n              break;\n            case \"2\":\n              form.getCheckBox('servico2').check();\n              break;\n            case \"3\":\n              form.getCheckBox('servico3').check();\n              break;\n            case \"3a\":\n              form.getCheckBox('servico3').check();\n              form.getCheckBox('servico3a').check();\n              break;\n            case \"4\":\n              form.getCheckBox('servico4').check();\n              break;\n            case \"5\":\n              form.getCheckBox('servico5').check();\n              break;\n            case \"6\":\n              form.getCheckBox('servico6').check();\n              break;\n            case \"6a\":\n              form.getCheckBox('servico6a').check();\n              form.getCheckBox('servico6').check();\n              break;\n            case \"6b\":\n              form.getCheckBox('servico6b').check();\n              form.getCheckBox('servico6').check();\n              break;\n            case \"7\":\n              form.getCheckBox('servico7').check();\n              break;\n            case \"7a\":\n              form.getCheckBox('servico7a').check();\n              form.getCheckBox('servico7').check();\n              break;\n            case \"7b\":\n              form.getCheckBox('servico7b').check();\n              form.getCheckBox('servico7').check();\n              break;\n            case \"8\":\n              form.getCheckBox('servico8').check();\n              break;\n            case \"9\":\n              form.getCheckBox('servico9').check();\n              break;\n            default:\n              console.log(`Solicitação ${valor} não reconhecida.`);\n          }\n        });\n        if (embarcacao) {\n          form.getTextField('nome').setText(embarcacao.cliente.nome);\n          form.getTextField('cpf1').setText(embarcacao.cliente.cpfcnpj);\n          form.getTextField('cpf2').setText(embarcacao.cliente.cpfcnpj);\n          form.getTextField('rg').setText(embarcacao.cliente.rg);\n          form.getTextField('orgexpedidor').setText(embarcacao.cliente.orgEmissor);\n          form.getTextField('logradouro').setText(embarcacao.cliente.logradouro);\n          form.getTextField('numero').setText(embarcacao.cliente.numero);\n          form.getTextField('complemento').setText(embarcacao.cliente.complemento);\n          form.getTextField('bairro').setText(embarcacao.cliente.bairro);\n          form.getTextField('cidade').setText(embarcacao.cliente.cidade);\n          form.getTextField('uf').setText(embarcacao.cliente.uf);\n          form.getTextField('cep').setText(embarcacao.cliente.cep);\n          form.getTextField('dddtelefone').setText(embarcacao.cliente.telefone.substring(0, 2));\n          form.getTextField('telefone').setText(embarcacao.cliente.telefone.substring(2));\n          form.getTextField('dddcelular').setText(embarcacao.cliente.celular.substring(0, 2));\n          form.getTextField('celular').setText(embarcacao.cliente.celular.substring(2));\n          form.getTextField('email').setText(embarcacao.cliente.email);\n          form.getTextField('local').setText(embarcacao.cliente.cidade);\n        } else if (cliente) {\n          form.getTextField('nome').setText(cliente.nome);\n          form.getTextField('cpf1').setText(cliente.cpfcnpj);\n          form.getTextField('cpf2').setText(cliente.cpfcnpj);\n          form.getTextField('rg').setText(cliente.rg);\n          form.getTextField('orgexpedidor').setText(cliente.orgEmissor);\n          form.getTextField('logradouro').setText(cliente.logradouro);\n          form.getTextField('numero').setText(cliente.numero);\n          form.getTextField('complemento').setText(cliente.complemento);\n          form.getTextField('bairro').setText(cliente.bairro);\n          form.getTextField('cidade').setText(cliente.cidade);\n          form.getTextField('uf').setText(cliente.uf);\n          form.getTextField('cep').setText(cliente.cep);\n          form.getTextField('dddtelefone').setText(cliente.telefone.substring(0, 2));\n          form.getTextField('telefone').setText(cliente.telefone.substring(2));\n          form.getTextField('dddcelular').setText(cliente.celular.substring(0, 2));\n          form.getTextField('celular').setText(cliente.celular.substring(2));\n          form.getTextField('email').setText(cliente.email);\n          form.getTextField('local').setText(cliente.cidade);\n        }\n        const hoje = new Date();\n        const dia = hoje.getDate().toString().padStart(2, '0');\n        const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\n        const ano = hoje.getFullYear().toString();\n        form.getTextField('dia').setText(dia);\n        form.getTextField('mes').setText(mes);\n        form.getTextField('ano').setText(ano);\n        console.log(campotexto1);\n        _this.texto = _this.divideString(campotexto1);\n        form.getTextField('descricao1').setText(_this.texto[0]);\n        form.getTextField('descricao2').setText(_this.texto[1]);\n        form.getTextField('descricao3').setText(_this.texto[2]);\n        form.flatten();\n        const modifiedPdfBytes = yield pdfDoc.save();\n        if (!servico) {\n          _this.abrirPDFemJanela(modifiedPdfBytes);\n          console.log('PDF Criado!');\n        } else {\n          return modifiedPdfBytes;\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }\n  abrirPDFemJanela(data) {\n    const blob = new Blob([data], {\n      type: 'application/pdf'\n    });\n    const url = window.URL.createObjectURL(blob);\n    window.open(url, '_blank');\n  }\n  divideString(texto) {\n    const limiteDescricao1 = 40;\n    const limiteOutros = 60;\n    const result = [];\n    // Função auxiliar para dividir um trecho de texto com limite de caracteres sem quebrar palavras\n    function dividirPorLimite(texto, limite) {\n      const partes = [];\n      let parteAtual = '';\n      texto.split(' ').forEach(palavra => {\n        if ((parteAtual + palavra).length <= limite) {\n          parteAtual += (parteAtual ? ' ' : '') + palavra;\n        } else {\n          partes.push(parteAtual);\n          parteAtual = palavra;\n        }\n      });\n      if (parteAtual) {\n        partes.push(parteAtual);\n      }\n      return partes;\n    }\n    // Divide o texto inicial para preencher 'descricao1'\n    let restante = texto;\n    if (restante.length > limiteDescricao1) {\n      const partesDescricao1 = dividirPorLimite(restante, limiteDescricao1);\n      result.push(partesDescricao1[0]);\n      restante = restante.substring(partesDescricao1[0].length).trim();\n    } else {\n      result.push(restante);\n      restante = '';\n    }\n    // Divide o texto restante para preencher os demais campos\n    const partesOutras = dividirPorLimite(restante, limiteOutros);\n    result.push(...partesOutras);\n    // Completa o array resultante com strings vazias, se necessário, para ter 7 elementos\n    while (result.length < 7) {\n      result.push('');\n    }\n    return result.slice(0, 7);\n  }\n  static #_ = this.ɵfac = function Anexo3AService_Factory(t) {\n    return new (t || Anexo3AService)(i0.ɵɵinject(i1.DatePipe));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Anexo3AService,\n    factory: Anexo3AService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PDFDocument","Anexo3AService","constructor","datePipe","texto","anexo3A","solicitacao","campotexto1","embarcacao","cliente","servico","_this","_asyncToGenerator","pdfBytes","fetch","then","res","arrayBuffer","pdfDoc","load","form","getForm","solicitacoes","split","forEach","valor","trim","getCheckBox","check","console","log","getTextField","setText","nome","cpfcnpj","rg","orgEmissor","logradouro","numero","complemento","bairro","cidade","uf","cep","telefone","substring","celular","email","hoje","Date","dia","getDate","toString","padStart","mes","getMonth","ano","getFullYear","divideString","flatten","modifiedPdfBytes","save","abrirPDFemJanela","err","error","data","blob","Blob","type","url","window","URL","createObjectURL","open","limiteDescricao1","limiteOutros","result","dividirPorLimite","limite","partes","parteAtual","palavra","length","push","restante","partesDescricao1","partesOutras","slice","_","i0","ɵɵinject","i1","DatePipe","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\anexos\\anexo3A.service.ts"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { PDFDocument } from 'pdf-lib';\r\nimport { Cliente } from 'src/app/model/cliente';\r\nimport { Embarcacao } from 'src/app/model/embarcacao';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Anexo3AService {\r\n  texto: string[] = [];\r\n  constructor(private datePipe: DatePipe) { }\r\n\r\n  async anexo3A(solicitacao: string, campotexto1: string, embarcacao?: Embarcacao, cliente?: Cliente, servico?: string): Promise<void | Uint8Array>{\r\n\r\n    try {\r\n\r\n      const pdfBytes = await fetch('assets/pdfanexos/Anexo3A-N212.pdf').then(res => res.arrayBuffer());\r\n      const pdfDoc = await PDFDocument.load(pdfBytes);\r\n\r\n      const form = pdfDoc.getForm();\r\n\r\n      const solicitacoes = solicitacao.split(',');\r\n      solicitacoes.forEach(valor => {\r\n        switch (valor.trim()) {\r\n          case \"1\":\r\n            form.getCheckBox('servico1').check();\r\n            break;\r\n          case \"2\":\r\n            form.getCheckBox('servico2').check();\r\n            break;\r\n          case \"3\":\r\n            form.getCheckBox('servico3').check();\r\n            break;\r\n          case \"3a\":\r\n            form.getCheckBox('servico3').check();\r\n            form.getCheckBox('servico3a').check();\r\n            break;\r\n          case \"4\":\r\n            form.getCheckBox('servico4').check();\r\n            break;\r\n          case \"5\":\r\n            form.getCheckBox('servico5').check();\r\n            break;\r\n          case \"6\":\r\n            form.getCheckBox('servico6').check();\r\n            break;\r\n          case \"6a\":\r\n            form.getCheckBox('servico6a').check();\r\n            form.getCheckBox('servico6').check();\r\n            break;\r\n          case \"6b\":\r\n            form.getCheckBox('servico6b').check();\r\n            form.getCheckBox('servico6').check();\r\n            break;\r\n          case \"7\":\r\n            form.getCheckBox('servico7').check();\r\n            break;\r\n          case \"7a\":\r\n            form.getCheckBox('servico7a').check();\r\n            form.getCheckBox('servico7').check();\r\n            break;\r\n          case \"7b\":\r\n            form.getCheckBox('servico7b').check();\r\n            form.getCheckBox('servico7').check();\r\n            break;\r\n          case \"8\":\r\n            form.getCheckBox('servico8').check();\r\n            break;\r\n          case \"9\":\r\n            form.getCheckBox('servico9').check();\r\n            break;\r\n\r\n          default:\r\n            console.log(`Solicitação ${valor} não reconhecida.`);\r\n        }\r\n      });\r\n\r\n      if (embarcacao) {\r\n        form.getTextField('nome').setText(embarcacao.cliente.nome);\r\n        form.getTextField('cpf1').setText(embarcacao.cliente.cpfcnpj);\r\n        form.getTextField('cpf2').setText(embarcacao.cliente.cpfcnpj);\r\n        form.getTextField('rg').setText(embarcacao.cliente.rg);\r\n        form.getTextField('orgexpedidor').setText(embarcacao.cliente.orgEmissor);\r\n        form.getTextField('logradouro').setText(embarcacao.cliente.logradouro);\r\n        form.getTextField('numero').setText(embarcacao.cliente.numero);\r\n        form.getTextField('complemento').setText(embarcacao.cliente.complemento);\r\n        form.getTextField('bairro').setText(embarcacao.cliente.bairro);\r\n        form.getTextField('cidade').setText(embarcacao.cliente.cidade);\r\n        form.getTextField('uf').setText(embarcacao.cliente.uf);\r\n        form.getTextField('cep').setText(embarcacao.cliente.cep);\r\n        form.getTextField('dddtelefone').setText(embarcacao.cliente.telefone.substring(0, 2));\r\n        form.getTextField('telefone').setText(embarcacao.cliente.telefone.substring(2));\r\n        form.getTextField('dddcelular').setText(embarcacao.cliente.celular.substring(0, 2));\r\n        form.getTextField('celular').setText(embarcacao.cliente.celular.substring(2));\r\n        form.getTextField('email').setText(embarcacao.cliente.email);\r\n        form.getTextField('local').setText(embarcacao.cliente.cidade);\r\n      } else if (cliente) {\r\n        form.getTextField('nome').setText(cliente.nome);\r\n        form.getTextField('cpf1').setText(cliente.cpfcnpj);\r\n        form.getTextField('cpf2').setText(cliente.cpfcnpj);\r\n        form.getTextField('rg').setText(cliente.rg);\r\n        form.getTextField('orgexpedidor').setText(cliente.orgEmissor);\r\n        form.getTextField('logradouro').setText(cliente.logradouro);\r\n        form.getTextField('numero').setText(cliente.numero);\r\n        form.getTextField('complemento').setText(cliente.complemento);\r\n        form.getTextField('bairro').setText(cliente.bairro);\r\n        form.getTextField('cidade').setText(cliente.cidade);\r\n        form.getTextField('uf').setText(cliente.uf);\r\n        form.getTextField('cep').setText(cliente.cep);\r\n        form.getTextField('dddtelefone').setText(cliente.telefone.substring(0, 2));\r\n        form.getTextField('telefone').setText(cliente.telefone.substring(2));\r\n        form.getTextField('dddcelular').setText(cliente.celular.substring(0, 2));\r\n        form.getTextField('celular').setText(cliente.celular.substring(2));\r\n        form.getTextField('email').setText(cliente.email);\r\n        form.getTextField('local').setText(cliente.cidade);\r\n      }\r\n\r\n      const hoje = new Date();\r\n      const dia = hoje.getDate().toString().padStart(2, '0');\r\n      const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\r\n      const ano = hoje.getFullYear().toString();\r\n      form.getTextField('dia').setText(dia);\r\n      form.getTextField('mes').setText(mes);\r\n      form.getTextField('ano').setText(ano);\r\n\r\n      console.log(campotexto1);\r\n\r\n      this.texto = this.divideString(campotexto1);\r\n      form.getTextField('descricao1').setText(this.texto[0]);\r\n      form.getTextField('descricao2').setText(this.texto[1]);\r\n      form.getTextField('descricao3').setText(this.texto[2]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n      form.flatten();\r\n      const modifiedPdfBytes = await pdfDoc.save();\r\n      if (!servico){\r\n        this.abrirPDFemJanela(modifiedPdfBytes);\r\n        console.log('PDF Criado!');\r\n      } else {\r\n        return modifiedPdfBytes;\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  private abrirPDFemJanela(data: Uint8Array): void {\r\n    const blob = new Blob([data], { type: 'application/pdf' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  divideString(texto: string): string[] {\r\n    const limiteDescricao1 = 40;\r\n    const limiteOutros = 60;\r\n    const result: string[] = [];\r\n\r\n    // Função auxiliar para dividir um trecho de texto com limite de caracteres sem quebrar palavras\r\n    function dividirPorLimite(texto: string, limite: number): string[] {\r\n      const partes: string[] = [];\r\n      let parteAtual = '';\r\n\r\n      texto.split(' ').forEach(palavra => {\r\n        if ((parteAtual + palavra).length <= limite) {\r\n          parteAtual += (parteAtual ? ' ' : '') + palavra;\r\n        } else {\r\n          partes.push(parteAtual);\r\n          parteAtual = palavra;\r\n        }\r\n      });\r\n\r\n      if (parteAtual) {\r\n        partes.push(parteAtual);\r\n      }\r\n\r\n      return partes;\r\n    }\r\n\r\n    // Divide o texto inicial para preencher 'descricao1'\r\n    let restante = texto;\r\n    if (restante.length > limiteDescricao1) {\r\n      const partesDescricao1 = dividirPorLimite(restante, limiteDescricao1);\r\n      result.push(partesDescricao1[0]);\r\n      restante = restante.substring(partesDescricao1[0].length).trim();\r\n    } else {\r\n      result.push(restante);\r\n      restante = '';\r\n    }\r\n\r\n    // Divide o texto restante para preencher os demais campos\r\n    const partesOutras = dividirPorLimite(restante, limiteOutros);\r\n    result.push(...partesOutras);\r\n\r\n    // Completa o array resultante com strings vazias, se necessário, para ter 7 elementos\r\n    while (result.length < 7) {\r\n      result.push('');\r\n    }\r\n\r\n    return result.slice(0, 7);\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}