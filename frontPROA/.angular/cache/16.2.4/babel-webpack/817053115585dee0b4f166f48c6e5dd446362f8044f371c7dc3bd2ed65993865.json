{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\n// prettier-ignore\nvar MARKERS = [0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc8, 0xffc9, 0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf];\nvar ColorSpace;\n(function (ColorSpace) {\n  ColorSpace[\"DeviceGray\"] = \"DeviceGray\";\n  ColorSpace[\"DeviceRGB\"] = \"DeviceRGB\";\n  ColorSpace[\"DeviceCMYK\"] = \"DeviceCMYK\";\n})(ColorSpace || (ColorSpace = {}));\nvar ChannelToColorSpace = {\n  1: ColorSpace.DeviceGray,\n  3: ColorSpace.DeviceRGB,\n  4: ColorSpace.DeviceCMYK\n};\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/foliojs/pdfkit/blob/a6af76467ce06bd6a2af4aa7271ccac9ff152a7d/lib/image/jpeg.js\n */\nvar JpegEmbedder = /** @class */function () {\n  function JpegEmbedder(imageData, bitsPerComponent, width, height, colorSpace) {\n    this.imageData = imageData;\n    this.bitsPerComponent = bitsPerComponent;\n    this.width = width;\n    this.height = height;\n    this.colorSpace = colorSpace;\n  }\n  JpegEmbedder.for = function (imageData) {\n    return __awaiter(this, void 0, void 0, function () {\n      var dataView, soi, pos, marker, bitsPerComponent, height, width, channelByte, channelName, colorSpace;\n      return __generator(this, function (_a) {\n        dataView = new DataView(imageData.buffer);\n        soi = dataView.getUint16(0);\n        if (soi !== 0xffd8) throw new Error('SOI not found in JPEG');\n        pos = 2;\n        while (pos < dataView.byteLength) {\n          marker = dataView.getUint16(pos);\n          pos += 2;\n          if (MARKERS.includes(marker)) break;\n          pos += dataView.getUint16(pos);\n        }\n        if (!MARKERS.includes(marker)) throw new Error('Invalid JPEG');\n        pos += 2;\n        bitsPerComponent = dataView.getUint8(pos++);\n        height = dataView.getUint16(pos);\n        pos += 2;\n        width = dataView.getUint16(pos);\n        pos += 2;\n        channelByte = dataView.getUint8(pos++);\n        channelName = ChannelToColorSpace[channelByte];\n        if (!channelName) throw new Error('Unknown JPEG channel.');\n        colorSpace = channelName;\n        return [2 /*return*/, new JpegEmbedder(imageData, bitsPerComponent, width, height, colorSpace)];\n      });\n    });\n  };\n  JpegEmbedder.prototype.embedIntoContext = function (context, ref) {\n    return __awaiter(this, void 0, void 0, function () {\n      var xObject;\n      return __generator(this, function (_a) {\n        xObject = context.stream(this.imageData, {\n          Type: 'XObject',\n          Subtype: 'Image',\n          BitsPerComponent: this.bitsPerComponent,\n          Width: this.width,\n          Height: this.height,\n          ColorSpace: this.colorSpace,\n          Filter: 'DCTDecode',\n          // CMYK JPEG streams in PDF are typically stored complemented,\n          // with 1 as 'off' and 0 as 'on' (PDF 32000-1:2008, 8.6.4.4).\n          //\n          // Standalone CMYK JPEG (usually exported by Photoshop) are\n          // stored inverse, with 0 as 'off' and 1 as 'on', like RGB.\n          //\n          // Applying a swap here as a hedge that most bytes passing\n          // through this method will benefit from it.\n          Decode: this.colorSpace === ColorSpace.DeviceCMYK ? [1, 0, 1, 0, 1, 0, 1, 0] : undefined\n        });\n        if (ref) {\n          context.assign(ref, xObject);\n          return [2 /*return*/, ref];\n        } else {\n          return [2 /*return*/, context.register(xObject)];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  return JpegEmbedder;\n}();\nexport default JpegEmbedder;","map":{"version":3,"names":["__awaiter","__generator","MARKERS","ColorSpace","ChannelToColorSpace","DeviceGray","DeviceRGB","DeviceCMYK","JpegEmbedder","imageData","bitsPerComponent","width","height","colorSpace","for","dataView","soi","pos","marker","channelByte","channelName","_a","DataView","buffer","getUint16","Error","byteLength","includes","getUint8","prototype","embedIntoContext","context","ref","xObject","stream","Type","Subtype","BitsPerComponent","Width","Height","Filter","Decode","undefined","assign","register"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/embedders/JpegEmbedder.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\n// prettier-ignore\nvar MARKERS = [\n    0xffc0, 0xffc1, 0xffc2,\n    0xffc3, 0xffc5, 0xffc6,\n    0xffc7, 0xffc8, 0xffc9,\n    0xffca, 0xffcb, 0xffcc,\n    0xffcd, 0xffce, 0xffcf,\n];\nvar ColorSpace;\n(function (ColorSpace) {\n    ColorSpace[\"DeviceGray\"] = \"DeviceGray\";\n    ColorSpace[\"DeviceRGB\"] = \"DeviceRGB\";\n    ColorSpace[\"DeviceCMYK\"] = \"DeviceCMYK\";\n})(ColorSpace || (ColorSpace = {}));\nvar ChannelToColorSpace = {\n    1: ColorSpace.DeviceGray,\n    3: ColorSpace.DeviceRGB,\n    4: ColorSpace.DeviceCMYK,\n};\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/foliojs/pdfkit/blob/a6af76467ce06bd6a2af4aa7271ccac9ff152a7d/lib/image/jpeg.js\n */\nvar JpegEmbedder = /** @class */ (function () {\n    function JpegEmbedder(imageData, bitsPerComponent, width, height, colorSpace) {\n        this.imageData = imageData;\n        this.bitsPerComponent = bitsPerComponent;\n        this.width = width;\n        this.height = height;\n        this.colorSpace = colorSpace;\n    }\n    JpegEmbedder.for = function (imageData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dataView, soi, pos, marker, bitsPerComponent, height, width, channelByte, channelName, colorSpace;\n            return __generator(this, function (_a) {\n                dataView = new DataView(imageData.buffer);\n                soi = dataView.getUint16(0);\n                if (soi !== 0xffd8)\n                    throw new Error('SOI not found in JPEG');\n                pos = 2;\n                while (pos < dataView.byteLength) {\n                    marker = dataView.getUint16(pos);\n                    pos += 2;\n                    if (MARKERS.includes(marker))\n                        break;\n                    pos += dataView.getUint16(pos);\n                }\n                if (!MARKERS.includes(marker))\n                    throw new Error('Invalid JPEG');\n                pos += 2;\n                bitsPerComponent = dataView.getUint8(pos++);\n                height = dataView.getUint16(pos);\n                pos += 2;\n                width = dataView.getUint16(pos);\n                pos += 2;\n                channelByte = dataView.getUint8(pos++);\n                channelName = ChannelToColorSpace[channelByte];\n                if (!channelName)\n                    throw new Error('Unknown JPEG channel.');\n                colorSpace = channelName;\n                return [2 /*return*/, new JpegEmbedder(imageData, bitsPerComponent, width, height, colorSpace)];\n            });\n        });\n    };\n    JpegEmbedder.prototype.embedIntoContext = function (context, ref) {\n        return __awaiter(this, void 0, void 0, function () {\n            var xObject;\n            return __generator(this, function (_a) {\n                xObject = context.stream(this.imageData, {\n                    Type: 'XObject',\n                    Subtype: 'Image',\n                    BitsPerComponent: this.bitsPerComponent,\n                    Width: this.width,\n                    Height: this.height,\n                    ColorSpace: this.colorSpace,\n                    Filter: 'DCTDecode',\n                    // CMYK JPEG streams in PDF are typically stored complemented,\n                    // with 1 as 'off' and 0 as 'on' (PDF 32000-1:2008, 8.6.4.4).\n                    //\n                    // Standalone CMYK JPEG (usually exported by Photoshop) are\n                    // stored inverse, with 0 as 'off' and 1 as 'on', like RGB.\n                    //\n                    // Applying a swap here as a hedge that most bytes passing\n                    // through this method will benefit from it.\n                    Decode: this.colorSpace === ColorSpace.DeviceCMYK\n                        ? [1, 0, 1, 0, 1, 0, 1, 0]\n                        : undefined,\n                });\n                if (ref) {\n                    context.assign(ref, xObject);\n                    return [2 /*return*/, ref];\n                }\n                else {\n                    return [2 /*return*/, context.register(xObject)];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    return JpegEmbedder;\n}());\nexport default JpegEmbedder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}