{"ast":null,"code":"import { assertIs, error } from \"../utils\";\nexport var RotationTypes = /*#__PURE__*/function (RotationTypes) {\n  RotationTypes[\"Degrees\"] = \"degrees\";\n  RotationTypes[\"Radians\"] = \"radians\";\n  return RotationTypes;\n}(RotationTypes || {});\nexport var radians = function (radianAngle) {\n  assertIs(radianAngle, 'radianAngle', ['number']);\n  return {\n    type: RotationTypes.Radians,\n    angle: radianAngle\n  };\n};\nexport var degrees = function (degreeAngle) {\n  assertIs(degreeAngle, 'degreeAngle', ['number']);\n  return {\n    type: RotationTypes.Degrees,\n    angle: degreeAngle\n  };\n};\nvar Radians = RotationTypes.Radians,\n  Degrees = RotationTypes.Degrees;\nexport var degreesToRadians = function (degree) {\n  return degree * Math.PI / 180;\n};\nexport var radiansToDegrees = function (radian) {\n  return radian * 180 / Math.PI;\n};\n// prettier-ignore\nexport var toRadians = function (rotation) {\n  return rotation.type === Radians ? rotation.angle : rotation.type === Degrees ? degreesToRadians(rotation.angle) : error(\"Invalid rotation: \" + JSON.stringify(rotation));\n};\n// prettier-ignore\nexport var toDegrees = function (rotation) {\n  return rotation.type === Radians ? radiansToDegrees(rotation.angle) : rotation.type === Degrees ? rotation.angle : error(\"Invalid rotation: \" + JSON.stringify(rotation));\n};\nexport var reduceRotation = function (degreeAngle) {\n  if (degreeAngle === void 0) {\n    degreeAngle = 0;\n  }\n  var quadrants = degreeAngle / 90 % 4;\n  if (quadrants === 0) return 0;\n  if (quadrants === 1) return 90;\n  if (quadrants === 2) return 180;\n  if (quadrants === 3) return 270;\n  return 0; // `degreeAngle` is not a multiple of 90\n};\n\nexport var adjustDimsForRotation = function (dims, degreeAngle) {\n  if (degreeAngle === void 0) {\n    degreeAngle = 0;\n  }\n  var rotation = reduceRotation(degreeAngle);\n  return rotation === 90 || rotation === 270 ? {\n    width: dims.height,\n    height: dims.width\n  } : {\n    width: dims.width,\n    height: dims.height\n  };\n};\nexport var rotateRectangle = function (rectangle, borderWidth, degreeAngle) {\n  if (borderWidth === void 0) {\n    borderWidth = 0;\n  }\n  if (degreeAngle === void 0) {\n    degreeAngle = 0;\n  }\n  var x = rectangle.x,\n    y = rectangle.y,\n    w = rectangle.width,\n    h = rectangle.height;\n  var r = reduceRotation(degreeAngle);\n  var b = borderWidth / 2;\n  // prettier-ignore\n  if (r === 0) return {\n    x: x - b,\n    y: y - b,\n    width: w,\n    height: h\n  };else if (r === 90) return {\n    x: x - h + b,\n    y: y - b,\n    width: h,\n    height: w\n  };else if (r === 180) return {\n    x: x - w + b,\n    y: y - h + b,\n    width: w,\n    height: h\n  };else if (r === 270) return {\n    x: x - b,\n    y: y - w + b,\n    width: h,\n    height: w\n  };else return {\n    x: x - b,\n    y: y - b,\n    width: w,\n    height: h\n  };\n};\n//# sourceMappingURL=rotations.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}