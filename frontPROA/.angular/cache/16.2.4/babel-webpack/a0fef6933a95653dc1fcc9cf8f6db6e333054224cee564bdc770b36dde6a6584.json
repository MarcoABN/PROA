{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFAcroTerminal from \"./PDFAcroTerminal\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFName from \"../objects/PDFName\";\nimport { AcroChoiceFlags } from \"./flags\";\nimport { InvalidAcroFieldValueError, MultiSelectValueError } from \"../errors\";\nvar PDFAcroChoice = /** @class */function (_super) {\n  __extends(PDFAcroChoice, _super);\n  function PDFAcroChoice() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFAcroChoice.prototype.setValues = function (values) {\n    if (this.hasFlag(AcroChoiceFlags.Combo) && !this.hasFlag(AcroChoiceFlags.Edit) && !this.valuesAreValid(values)) {\n      throw new InvalidAcroFieldValueError();\n    }\n    if (values.length === 0) {\n      this.dict.delete(PDFName.of('V'));\n    }\n    if (values.length === 1) {\n      this.dict.set(PDFName.of('V'), values[0]);\n    }\n    if (values.length > 1) {\n      if (!this.hasFlag(AcroChoiceFlags.MultiSelect)) {\n        throw new MultiSelectValueError();\n      }\n      this.dict.set(PDFName.of('V'), this.dict.context.obj(values));\n    }\n    this.updateSelectedIndices(values);\n  };\n  PDFAcroChoice.prototype.valuesAreValid = function (values) {\n    var options = this.getOptions();\n    var _loop_1 = function (idx, len) {\n      var val = values[idx].decodeText();\n      if (!options.find(function (o) {\n        return val === (o.display || o.value).decodeText();\n      })) {\n        return {\n          value: false\n        };\n      }\n    };\n    for (var idx = 0, len = values.length; idx < len; idx++) {\n      var state_1 = _loop_1(idx, len);\n      if (typeof state_1 === \"object\") return state_1.value;\n    }\n    return true;\n  };\n  PDFAcroChoice.prototype.updateSelectedIndices = function (values) {\n    if (values.length > 1) {\n      var indices = new Array(values.length);\n      var options = this.getOptions();\n      var _loop_2 = function (idx, len) {\n        var val = values[idx].decodeText();\n        indices[idx] = options.findIndex(function (o) {\n          return val === (o.display || o.value).decodeText();\n        });\n      };\n      for (var idx = 0, len = values.length; idx < len; idx++) {\n        _loop_2(idx, len);\n      }\n      this.dict.set(PDFName.of('I'), this.dict.context.obj(indices.sort()));\n    } else {\n      this.dict.delete(PDFName.of('I'));\n    }\n  };\n  PDFAcroChoice.prototype.getValues = function () {\n    var v = this.V();\n    if (v instanceof PDFString || v instanceof PDFHexString) return [v];\n    if (v instanceof PDFArray) {\n      var values = [];\n      for (var idx = 0, len = v.size(); idx < len; idx++) {\n        var value = v.lookup(idx);\n        if (value instanceof PDFString || value instanceof PDFHexString) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n    return [];\n  };\n  PDFAcroChoice.prototype.Opt = function () {\n    return this.dict.lookupMaybe(PDFName.of('Opt'), PDFString, PDFHexString, PDFArray);\n  };\n  PDFAcroChoice.prototype.setOptions = function (options) {\n    var newOpt = new Array(options.length);\n    for (var idx = 0, len = options.length; idx < len; idx++) {\n      var _a = options[idx],\n        value = _a.value,\n        display = _a.display;\n      newOpt[idx] = this.dict.context.obj([value, display || value]);\n    }\n    this.dict.set(PDFName.of('Opt'), this.dict.context.obj(newOpt));\n  };\n  PDFAcroChoice.prototype.getOptions = function () {\n    var Opt = this.Opt();\n    // Not supposed to happen - Opt _should_ always be `PDFArray | undefined`\n    if (Opt instanceof PDFString || Opt instanceof PDFHexString) {\n      return [{\n        value: Opt,\n        display: Opt\n      }];\n    }\n    if (Opt instanceof PDFArray) {\n      var res = [];\n      for (var idx = 0, len = Opt.size(); idx < len; idx++) {\n        var item = Opt.lookup(idx);\n        // If `item` is a string, use that as both the export and text value\n        if (item instanceof PDFString || item instanceof PDFHexString) {\n          res.push({\n            value: item,\n            display: item\n          });\n        }\n        // If `item` is an array of one, treat it the same as just a string,\n        // if it's an array of two then `item[0]` is the export value and\n        // `item[1]` is the text value\n        if (item instanceof PDFArray) {\n          if (item.size() > 0) {\n            var first = item.lookup(0, PDFString, PDFHexString);\n            var second = item.lookupMaybe(1, PDFString, PDFHexString);\n            res.push({\n              value: first,\n              display: second || first\n            });\n          }\n        }\n      }\n      return res;\n    }\n    return [];\n  };\n  return PDFAcroChoice;\n}(PDFAcroTerminal);\nexport default PDFAcroChoice;","map":{"version":3,"names":["__extends","PDFAcroTerminal","PDFHexString","PDFString","PDFArray","PDFName","AcroChoiceFlags","InvalidAcroFieldValueError","MultiSelectValueError","PDFAcroChoice","_super","apply","arguments","prototype","setValues","values","hasFlag","Combo","Edit","valuesAreValid","length","dict","delete","of","set","MultiSelect","context","obj","updateSelectedIndices","options","getOptions","_loop_1","idx","len","val","decodeText","find","o","display","value","state_1","indices","Array","_loop_2","findIndex","sort","getValues","v","V","size","lookup","push","Opt","lookupMaybe","setOptions","newOpt","_a","res","item","first","second"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/acroform/PDFAcroChoice.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport PDFAcroTerminal from \"./PDFAcroTerminal\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFName from \"../objects/PDFName\";\nimport { AcroChoiceFlags } from \"./flags\";\nimport { InvalidAcroFieldValueError, MultiSelectValueError, } from \"../errors\";\nvar PDFAcroChoice = /** @class */ (function (_super) {\n    __extends(PDFAcroChoice, _super);\n    function PDFAcroChoice() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PDFAcroChoice.prototype.setValues = function (values) {\n        if (this.hasFlag(AcroChoiceFlags.Combo) &&\n            !this.hasFlag(AcroChoiceFlags.Edit) &&\n            !this.valuesAreValid(values)) {\n            throw new InvalidAcroFieldValueError();\n        }\n        if (values.length === 0) {\n            this.dict.delete(PDFName.of('V'));\n        }\n        if (values.length === 1) {\n            this.dict.set(PDFName.of('V'), values[0]);\n        }\n        if (values.length > 1) {\n            if (!this.hasFlag(AcroChoiceFlags.MultiSelect)) {\n                throw new MultiSelectValueError();\n            }\n            this.dict.set(PDFName.of('V'), this.dict.context.obj(values));\n        }\n        this.updateSelectedIndices(values);\n    };\n    PDFAcroChoice.prototype.valuesAreValid = function (values) {\n        var options = this.getOptions();\n        var _loop_1 = function (idx, len) {\n            var val = values[idx].decodeText();\n            if (!options.find(function (o) { return val === (o.display || o.value).decodeText(); })) {\n                return { value: false };\n            }\n        };\n        for (var idx = 0, len = values.length; idx < len; idx++) {\n            var state_1 = _loop_1(idx, len);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        return true;\n    };\n    PDFAcroChoice.prototype.updateSelectedIndices = function (values) {\n        if (values.length > 1) {\n            var indices = new Array(values.length);\n            var options = this.getOptions();\n            var _loop_2 = function (idx, len) {\n                var val = values[idx].decodeText();\n                indices[idx] = options.findIndex(function (o) { return val === (o.display || o.value).decodeText(); });\n            };\n            for (var idx = 0, len = values.length; idx < len; idx++) {\n                _loop_2(idx, len);\n            }\n            this.dict.set(PDFName.of('I'), this.dict.context.obj(indices.sort()));\n        }\n        else {\n            this.dict.delete(PDFName.of('I'));\n        }\n    };\n    PDFAcroChoice.prototype.getValues = function () {\n        var v = this.V();\n        if (v instanceof PDFString || v instanceof PDFHexString)\n            return [v];\n        if (v instanceof PDFArray) {\n            var values = [];\n            for (var idx = 0, len = v.size(); idx < len; idx++) {\n                var value = v.lookup(idx);\n                if (value instanceof PDFString || value instanceof PDFHexString) {\n                    values.push(value);\n                }\n            }\n            return values;\n        }\n        return [];\n    };\n    PDFAcroChoice.prototype.Opt = function () {\n        return this.dict.lookupMaybe(PDFName.of('Opt'), PDFString, PDFHexString, PDFArray);\n    };\n    PDFAcroChoice.prototype.setOptions = function (options) {\n        var newOpt = new Array(options.length);\n        for (var idx = 0, len = options.length; idx < len; idx++) {\n            var _a = options[idx], value = _a.value, display = _a.display;\n            newOpt[idx] = this.dict.context.obj([value, display || value]);\n        }\n        this.dict.set(PDFName.of('Opt'), this.dict.context.obj(newOpt));\n    };\n    PDFAcroChoice.prototype.getOptions = function () {\n        var Opt = this.Opt();\n        // Not supposed to happen - Opt _should_ always be `PDFArray | undefined`\n        if (Opt instanceof PDFString || Opt instanceof PDFHexString) {\n            return [{ value: Opt, display: Opt }];\n        }\n        if (Opt instanceof PDFArray) {\n            var res = [];\n            for (var idx = 0, len = Opt.size(); idx < len; idx++) {\n                var item = Opt.lookup(idx);\n                // If `item` is a string, use that as both the export and text value\n                if (item instanceof PDFString || item instanceof PDFHexString) {\n                    res.push({ value: item, display: item });\n                }\n                // If `item` is an array of one, treat it the same as just a string,\n                // if it's an array of two then `item[0]` is the export value and\n                // `item[1]` is the text value\n                if (item instanceof PDFArray) {\n                    if (item.size() > 0) {\n                        var first = item.lookup(0, PDFString, PDFHexString);\n                        var second = item.lookupMaybe(1, PDFString, PDFHexString);\n                        res.push({ value: first, display: second || first });\n                    }\n                }\n            }\n            return res;\n        }\n        return [];\n    };\n    return PDFAcroChoice;\n}(PDFAcroTerminal));\nexport default PDFAcroChoice;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}