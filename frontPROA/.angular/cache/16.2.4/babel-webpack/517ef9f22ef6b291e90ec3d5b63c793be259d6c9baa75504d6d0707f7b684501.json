{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class SafeUrlPipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  transform(value) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n  }\n  static #_ = this.ɵfac = function SafeUrlPipe_Factory(t) {\n    return new (t || SafeUrlPipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"safeUrl\",\n    type: SafeUrlPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["SafeUrlPipe","constructor","sanitizer","transform","value","bypassSecurityTrustResourceUrl","_","i0","ɵɵdirectiveInject","i1","DomSanitizer","_2","pure"],"sources":["E:\\PROA\\frontPROA\\src\\app\\safe-url.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeUrl'\r\n})\r\nexport class SafeUrlPipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  transform(value: string): SafeResourceUrl {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n  }\r\n}\r\n"],"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,SAAuB;IAAvB,KAAAA,SAAS,GAATA,SAAS;EAAiB;EAE9CC,SAASA,CAACC,KAAa;IACrB,OAAO,IAAI,CAACF,SAAS,CAACG,8BAA8B,CAACD,KAAK,CAAC;EAC7D;EAAC,QAAAE,CAAA,G;qBANUN,WAAW,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;;UAAXX,WAAW;IAAAY,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}