{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FrontProcuracaoService = /*#__PURE__*/(() => {\n  class FrontProcuracaoService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.url = 'http://3.214.105.13:8080/cprocuracao';\n    }\n    listarProcuracao() {\n      return this.httpClient.get(`${this.url}`);\n    }\n    //Serviço para consulta da Procuracao\n    consultarProcuracao(modeloProcuracao) {\n      return this.httpClient.get(`${this.url}/modelo/${modeloProcuracao}`);\n    }\n    incluirProcuracao(procuracao) {\n      return this.httpClient.post(`${this.url}`, procuracao);\n    }\n    alterarProcuracao(IDProcuracao, procuracao) {\n      return this.httpClient.put(`${this.url}/${IDProcuracao}`, procuracao);\n    }\n    excluirProcuracao(IDProcuracao) {\n      return this.httpClient.delete(`${this.url}/${IDProcuracao}`);\n    }\n    obterProcuracao() {\n      return this.httpClient.get(`${this.url}`);\n    }\n    salvarProcuracao(procuracao) {\n      return this.httpClient.post(`${this.url}`, procuracao);\n    }\n    alterarTextoEConverterParaPdf(novoTexto) {\n      return this.httpClient.post(`${this.url}/alterar-para-pdf`, novoTexto, {\n        responseType: 'arraybuffer' // Necessário para lidar com o PDF como Uint8Array\n      });\n    }\n    static #_ = this.ɵfac = function FrontProcuracaoService_Factory(t) {\n      return new (t || FrontProcuracaoService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FrontProcuracaoService,\n      factory: FrontProcuracaoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return FrontProcuracaoService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}