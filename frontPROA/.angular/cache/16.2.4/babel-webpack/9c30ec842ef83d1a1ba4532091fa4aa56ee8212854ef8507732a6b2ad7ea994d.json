{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { createCmap } from \"./CMap\";\nimport { deriveFontFlags } from \"./FontFlags\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFString from \"../objects/PDFString\";\nimport { byAscendingId, Cache, sortedUniq, toHexStringOfMinLength } from \"../../utils\";\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/devongovett/pdfkit/blob/e71edab0dd4657b5a767804ba86c94c58d01fbca/lib/image/jpeg.coffee\n */\nvar CustomFontEmbedder = /** @class */function () {\n  function CustomFontEmbedder(font, fontData, customName, fontFeatures) {\n    var _this = this;\n    this.allGlyphsInFontSortedById = function () {\n      var glyphs = new Array(_this.font.characterSet.length);\n      for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n        var codePoint = _this.font.characterSet[idx];\n        glyphs[idx] = _this.font.glyphForCodePoint(codePoint);\n      }\n      return sortedUniq(glyphs.sort(byAscendingId), function (g) {\n        return g.id;\n      });\n    };\n    this.font = font;\n    this.scale = 1000 / this.font.unitsPerEm;\n    this.fontData = fontData;\n    this.fontName = this.font.postscriptName || 'Font';\n    this.customName = customName;\n    this.fontFeatures = fontFeatures;\n    this.baseFontName = '';\n    this.glyphCache = Cache.populatedBy(this.allGlyphsInFontSortedById);\n  }\n  CustomFontEmbedder.for = function (fontkit, fontData, customName, fontFeatures) {\n    return __awaiter(this, void 0, void 0, function () {\n      var font;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, fontkit.create(fontData)];\n          case 1:\n            font = _a.sent();\n            return [2 /*return*/, new CustomFontEmbedder(font, fontData, customName, fontFeatures)];\n        }\n      });\n    });\n  };\n  /**\n   * Encode the JavaScript string into this font. (JavaScript encodes strings in\n   * Unicode, but embedded fonts use their own custom encodings)\n   */\n  CustomFontEmbedder.prototype.encodeText = function (text) {\n    var glyphs = this.font.layout(text, this.fontFeatures).glyphs;\n    var hexCodes = new Array(glyphs.length);\n    for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n      hexCodes[idx] = toHexStringOfMinLength(glyphs[idx].id, 4);\n    }\n    return PDFHexString.of(hexCodes.join(''));\n  };\n  // The advanceWidth takes into account kerning automatically, so we don't\n  // have to do that manually like we do for the standard fonts.\n  CustomFontEmbedder.prototype.widthOfTextAtSize = function (text, size) {\n    var glyphs = this.font.layout(text, this.fontFeatures).glyphs;\n    var totalWidth = 0;\n    for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n      totalWidth += glyphs[idx].advanceWidth * this.scale;\n    }\n    var scale = size / 1000;\n    return totalWidth * scale;\n  };\n  CustomFontEmbedder.prototype.heightOfFontAtSize = function (size, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _a = options.descender,\n      descender = _a === void 0 ? true : _a;\n    var _b = this.font,\n      ascent = _b.ascent,\n      descent = _b.descent,\n      bbox = _b.bbox;\n    var yTop = (ascent || bbox.maxY) * this.scale;\n    var yBottom = (descent || bbox.minY) * this.scale;\n    var height = yTop - yBottom;\n    if (!descender) height -= Math.abs(descent) || 0;\n    return height / 1000 * size;\n  };\n  CustomFontEmbedder.prototype.sizeOfFontAtHeight = function (height) {\n    var _a = this.font,\n      ascent = _a.ascent,\n      descent = _a.descent,\n      bbox = _a.bbox;\n    var yTop = (ascent || bbox.maxY) * this.scale;\n    var yBottom = (descent || bbox.minY) * this.scale;\n    return 1000 * height / (yTop - yBottom);\n  };\n  CustomFontEmbedder.prototype.embedIntoContext = function (context, ref) {\n    this.baseFontName = this.customName || context.addRandomSuffix(this.fontName);\n    return this.embedFontDict(context, ref);\n  };\n  CustomFontEmbedder.prototype.embedFontDict = function (context, ref) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cidFontDictRef, unicodeCMapRef, fontDict;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.embedCIDFontDict(context)];\n          case 1:\n            cidFontDictRef = _a.sent();\n            unicodeCMapRef = this.embedUnicodeCmap(context);\n            fontDict = context.obj({\n              Type: 'Font',\n              Subtype: 'Type0',\n              BaseFont: this.baseFontName,\n              Encoding: 'Identity-H',\n              DescendantFonts: [cidFontDictRef],\n              ToUnicode: unicodeCMapRef\n            });\n            if (ref) {\n              context.assign(ref, fontDict);\n              return [2 /*return*/, ref];\n            } else {\n              return [2 /*return*/, context.register(fontDict)];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  CustomFontEmbedder.prototype.isCFF = function () {\n    return this.font.cff;\n  };\n  CustomFontEmbedder.prototype.embedCIDFontDict = function (context) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fontDescriptorRef, cidFontDict;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.embedFontDescriptor(context)];\n          case 1:\n            fontDescriptorRef = _a.sent();\n            cidFontDict = context.obj({\n              Type: 'Font',\n              Subtype: this.isCFF() ? 'CIDFontType0' : 'CIDFontType2',\n              CIDToGIDMap: 'Identity',\n              BaseFont: this.baseFontName,\n              CIDSystemInfo: {\n                Registry: PDFString.of('Adobe'),\n                Ordering: PDFString.of('Identity'),\n                Supplement: 0\n              },\n              FontDescriptor: fontDescriptorRef,\n              W: this.computeWidths()\n            });\n            return [2 /*return*/, context.register(cidFontDict)];\n        }\n      });\n    });\n  };\n  CustomFontEmbedder.prototype.embedFontDescriptor = function (context) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fontStreamRef, scale, _a, italicAngle, ascent, descent, capHeight, xHeight, _b, minX, minY, maxX, maxY, fontDescriptor;\n      var _c;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            return [4 /*yield*/, this.embedFontStream(context)];\n          case 1:\n            fontStreamRef = _d.sent();\n            scale = this.scale;\n            _a = this.font, italicAngle = _a.italicAngle, ascent = _a.ascent, descent = _a.descent, capHeight = _a.capHeight, xHeight = _a.xHeight;\n            _b = this.font.bbox, minX = _b.minX, minY = _b.minY, maxX = _b.maxX, maxY = _b.maxY;\n            fontDescriptor = context.obj((_c = {\n              Type: 'FontDescriptor',\n              FontName: this.baseFontName,\n              Flags: deriveFontFlags(this.font),\n              FontBBox: [minX * scale, minY * scale, maxX * scale, maxY * scale],\n              ItalicAngle: italicAngle,\n              Ascent: ascent * scale,\n              Descent: descent * scale,\n              CapHeight: (capHeight || ascent) * scale,\n              XHeight: (xHeight || 0) * scale,\n              // Not sure how to compute/find this, nor is anybody else really:\n              // https://stackoverflow.com/questions/35485179/stemv-value-of-the-truetype-font\n              StemV: 0\n            }, _c[this.isCFF() ? 'FontFile3' : 'FontFile2'] = fontStreamRef, _c));\n            return [2 /*return*/, context.register(fontDescriptor)];\n        }\n      });\n    });\n  };\n  CustomFontEmbedder.prototype.serializeFont = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.fontData];\n      });\n    });\n  };\n  CustomFontEmbedder.prototype.embedFontStream = function (context) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fontStream, _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _b = (_a = context).flateStream;\n            return [4 /*yield*/, this.serializeFont()];\n          case 1:\n            fontStream = _b.apply(_a, [_c.sent(), {\n              Subtype: this.isCFF() ? 'CIDFontType0C' : undefined\n            }]);\n            return [2 /*return*/, context.register(fontStream)];\n        }\n      });\n    });\n  };\n  CustomFontEmbedder.prototype.embedUnicodeCmap = function (context) {\n    var cmap = createCmap(this.glyphCache.access(), this.glyphId.bind(this));\n    var cmapStream = context.flateStream(cmap);\n    return context.register(cmapStream);\n  };\n  CustomFontEmbedder.prototype.glyphId = function (glyph) {\n    return glyph ? glyph.id : -1;\n  };\n  CustomFontEmbedder.prototype.computeWidths = function () {\n    var glyphs = this.glyphCache.access();\n    var widths = [];\n    var currSection = [];\n    for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n      var currGlyph = glyphs[idx];\n      var prevGlyph = glyphs[idx - 1];\n      var currGlyphId = this.glyphId(currGlyph);\n      var prevGlyphId = this.glyphId(prevGlyph);\n      if (idx === 0) {\n        widths.push(currGlyphId);\n      } else if (currGlyphId - prevGlyphId !== 1) {\n        widths.push(currSection);\n        widths.push(currGlyphId);\n        currSection = [];\n      }\n      currSection.push(currGlyph.advanceWidth * this.scale);\n    }\n    widths.push(currSection);\n    return widths;\n  };\n  return CustomFontEmbedder;\n}();\nexport default CustomFontEmbedder;","map":{"version":3,"names":["__awaiter","__generator","createCmap","deriveFontFlags","PDFHexString","PDFString","byAscendingId","Cache","sortedUniq","toHexStringOfMinLength","CustomFontEmbedder","font","fontData","customName","fontFeatures","_this","allGlyphsInFontSortedById","glyphs","Array","characterSet","length","idx","len","codePoint","glyphForCodePoint","sort","g","id","scale","unitsPerEm","fontName","postscriptName","baseFontName","glyphCache","populatedBy","for","fontkit","_a","label","create","sent","prototype","encodeText","text","layout","hexCodes","of","join","widthOfTextAtSize","size","totalWidth","advanceWidth","heightOfFontAtSize","options","descender","_b","ascent","descent","bbox","yTop","maxY","yBottom","minY","height","Math","abs","sizeOfFontAtHeight","embedIntoContext","context","ref","addRandomSuffix","embedFontDict","cidFontDictRef","unicodeCMapRef","fontDict","embedCIDFontDict","embedUnicodeCmap","obj","Type","Subtype","BaseFont","Encoding","DescendantFonts","ToUnicode","assign","register","isCFF","cff","fontDescriptorRef","cidFontDict","embedFontDescriptor","CIDToGIDMap","CIDSystemInfo","Registry","Ordering","Supplement","FontDescriptor","W","computeWidths","fontStreamRef","italicAngle","capHeight","xHeight","minX","maxX","fontDescriptor","_c","_d","embedFontStream","FontName","Flags","FontBBox","ItalicAngle","Ascent","Descent","CapHeight","XHeight","StemV","serializeFont","fontStream","flateStream","apply","undefined","cmap","access","glyphId","bind","cmapStream","glyph","widths","currSection","currGlyph","prevGlyph","currGlyphId","prevGlyphId","push"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/embedders/CustomFontEmbedder.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { createCmap } from \"./CMap\";\nimport { deriveFontFlags } from \"./FontFlags\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFString from \"../objects/PDFString\";\nimport { byAscendingId, Cache, sortedUniq, toHexStringOfMinLength, } from \"../../utils\";\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/devongovett/pdfkit/blob/e71edab0dd4657b5a767804ba86c94c58d01fbca/lib/image/jpeg.coffee\n */\nvar CustomFontEmbedder = /** @class */ (function () {\n    function CustomFontEmbedder(font, fontData, customName, fontFeatures) {\n        var _this = this;\n        this.allGlyphsInFontSortedById = function () {\n            var glyphs = new Array(_this.font.characterSet.length);\n            for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n                var codePoint = _this.font.characterSet[idx];\n                glyphs[idx] = _this.font.glyphForCodePoint(codePoint);\n            }\n            return sortedUniq(glyphs.sort(byAscendingId), function (g) { return g.id; });\n        };\n        this.font = font;\n        this.scale = 1000 / this.font.unitsPerEm;\n        this.fontData = fontData;\n        this.fontName = this.font.postscriptName || 'Font';\n        this.customName = customName;\n        this.fontFeatures = fontFeatures;\n        this.baseFontName = '';\n        this.glyphCache = Cache.populatedBy(this.allGlyphsInFontSortedById);\n    }\n    CustomFontEmbedder.for = function (fontkit, fontData, customName, fontFeatures) {\n        return __awaiter(this, void 0, void 0, function () {\n            var font;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, fontkit.create(fontData)];\n                    case 1:\n                        font = _a.sent();\n                        return [2 /*return*/, new CustomFontEmbedder(font, fontData, customName, fontFeatures)];\n                }\n            });\n        });\n    };\n    /**\n     * Encode the JavaScript string into this font. (JavaScript encodes strings in\n     * Unicode, but embedded fonts use their own custom encodings)\n     */\n    CustomFontEmbedder.prototype.encodeText = function (text) {\n        var glyphs = this.font.layout(text, this.fontFeatures).glyphs;\n        var hexCodes = new Array(glyphs.length);\n        for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n            hexCodes[idx] = toHexStringOfMinLength(glyphs[idx].id, 4);\n        }\n        return PDFHexString.of(hexCodes.join(''));\n    };\n    // The advanceWidth takes into account kerning automatically, so we don't\n    // have to do that manually like we do for the standard fonts.\n    CustomFontEmbedder.prototype.widthOfTextAtSize = function (text, size) {\n        var glyphs = this.font.layout(text, this.fontFeatures).glyphs;\n        var totalWidth = 0;\n        for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n            totalWidth += glyphs[idx].advanceWidth * this.scale;\n        }\n        var scale = size / 1000;\n        return totalWidth * scale;\n    };\n    CustomFontEmbedder.prototype.heightOfFontAtSize = function (size, options) {\n        if (options === void 0) { options = {}; }\n        var _a = options.descender, descender = _a === void 0 ? true : _a;\n        var _b = this.font, ascent = _b.ascent, descent = _b.descent, bbox = _b.bbox;\n        var yTop = (ascent || bbox.maxY) * this.scale;\n        var yBottom = (descent || bbox.minY) * this.scale;\n        var height = yTop - yBottom;\n        if (!descender)\n            height -= Math.abs(descent) || 0;\n        return (height / 1000) * size;\n    };\n    CustomFontEmbedder.prototype.sizeOfFontAtHeight = function (height) {\n        var _a = this.font, ascent = _a.ascent, descent = _a.descent, bbox = _a.bbox;\n        var yTop = (ascent || bbox.maxY) * this.scale;\n        var yBottom = (descent || bbox.minY) * this.scale;\n        return (1000 * height) / (yTop - yBottom);\n    };\n    CustomFontEmbedder.prototype.embedIntoContext = function (context, ref) {\n        this.baseFontName =\n            this.customName || context.addRandomSuffix(this.fontName);\n        return this.embedFontDict(context, ref);\n    };\n    CustomFontEmbedder.prototype.embedFontDict = function (context, ref) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cidFontDictRef, unicodeCMapRef, fontDict;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.embedCIDFontDict(context)];\n                    case 1:\n                        cidFontDictRef = _a.sent();\n                        unicodeCMapRef = this.embedUnicodeCmap(context);\n                        fontDict = context.obj({\n                            Type: 'Font',\n                            Subtype: 'Type0',\n                            BaseFont: this.baseFontName,\n                            Encoding: 'Identity-H',\n                            DescendantFonts: [cidFontDictRef],\n                            ToUnicode: unicodeCMapRef,\n                        });\n                        if (ref) {\n                            context.assign(ref, fontDict);\n                            return [2 /*return*/, ref];\n                        }\n                        else {\n                            return [2 /*return*/, context.register(fontDict)];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CustomFontEmbedder.prototype.isCFF = function () {\n        return this.font.cff;\n    };\n    CustomFontEmbedder.prototype.embedCIDFontDict = function (context) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fontDescriptorRef, cidFontDict;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.embedFontDescriptor(context)];\n                    case 1:\n                        fontDescriptorRef = _a.sent();\n                        cidFontDict = context.obj({\n                            Type: 'Font',\n                            Subtype: this.isCFF() ? 'CIDFontType0' : 'CIDFontType2',\n                            CIDToGIDMap: 'Identity',\n                            BaseFont: this.baseFontName,\n                            CIDSystemInfo: {\n                                Registry: PDFString.of('Adobe'),\n                                Ordering: PDFString.of('Identity'),\n                                Supplement: 0,\n                            },\n                            FontDescriptor: fontDescriptorRef,\n                            W: this.computeWidths(),\n                        });\n                        return [2 /*return*/, context.register(cidFontDict)];\n                }\n            });\n        });\n    };\n    CustomFontEmbedder.prototype.embedFontDescriptor = function (context) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fontStreamRef, scale, _a, italicAngle, ascent, descent, capHeight, xHeight, _b, minX, minY, maxX, maxY, fontDescriptor;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0: return [4 /*yield*/, this.embedFontStream(context)];\n                    case 1:\n                        fontStreamRef = _d.sent();\n                        scale = this.scale;\n                        _a = this.font, italicAngle = _a.italicAngle, ascent = _a.ascent, descent = _a.descent, capHeight = _a.capHeight, xHeight = _a.xHeight;\n                        _b = this.font.bbox, minX = _b.minX, minY = _b.minY, maxX = _b.maxX, maxY = _b.maxY;\n                        fontDescriptor = context.obj((_c = {\n                                Type: 'FontDescriptor',\n                                FontName: this.baseFontName,\n                                Flags: deriveFontFlags(this.font),\n                                FontBBox: [minX * scale, minY * scale, maxX * scale, maxY * scale],\n                                ItalicAngle: italicAngle,\n                                Ascent: ascent * scale,\n                                Descent: descent * scale,\n                                CapHeight: (capHeight || ascent) * scale,\n                                XHeight: (xHeight || 0) * scale,\n                                // Not sure how to compute/find this, nor is anybody else really:\n                                // https://stackoverflow.com/questions/35485179/stemv-value-of-the-truetype-font\n                                StemV: 0\n                            },\n                            _c[this.isCFF() ? 'FontFile3' : 'FontFile2'] = fontStreamRef,\n                            _c));\n                        return [2 /*return*/, context.register(fontDescriptor)];\n                }\n            });\n        });\n    };\n    CustomFontEmbedder.prototype.serializeFont = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.fontData];\n            });\n        });\n    };\n    CustomFontEmbedder.prototype.embedFontStream = function (context) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fontStream, _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = (_a = context).flateStream;\n                        return [4 /*yield*/, this.serializeFont()];\n                    case 1:\n                        fontStream = _b.apply(_a, [_c.sent(), {\n                                Subtype: this.isCFF() ? 'CIDFontType0C' : undefined,\n                            }]);\n                        return [2 /*return*/, context.register(fontStream)];\n                }\n            });\n        });\n    };\n    CustomFontEmbedder.prototype.embedUnicodeCmap = function (context) {\n        var cmap = createCmap(this.glyphCache.access(), this.glyphId.bind(this));\n        var cmapStream = context.flateStream(cmap);\n        return context.register(cmapStream);\n    };\n    CustomFontEmbedder.prototype.glyphId = function (glyph) {\n        return glyph ? glyph.id : -1;\n    };\n    CustomFontEmbedder.prototype.computeWidths = function () {\n        var glyphs = this.glyphCache.access();\n        var widths = [];\n        var currSection = [];\n        for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n            var currGlyph = glyphs[idx];\n            var prevGlyph = glyphs[idx - 1];\n            var currGlyphId = this.glyphId(currGlyph);\n            var prevGlyphId = this.glyphId(prevGlyph);\n            if (idx === 0) {\n                widths.push(currGlyphId);\n            }\n            else if (currGlyphId - prevGlyphId !== 1) {\n                widths.push(currSection);\n                widths.push(currGlyphId);\n                currSection = [];\n            }\n            currSection.push(currGlyph.advanceWidth * this.scale);\n        }\n        widths.push(currSection);\n        return widths;\n    };\n    return CustomFontEmbedder;\n}());\nexport default CustomFontEmbedder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}