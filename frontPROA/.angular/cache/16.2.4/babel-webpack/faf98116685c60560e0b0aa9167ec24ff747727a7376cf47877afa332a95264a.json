{"ast":null,"code":"import _asyncToGenerator from \"E:/PROA/frontPROA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PDFDocument } from 'pdf-lib';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../front-cliente.service\";\nexport class Anexo2FService {\n  constructor(clienteService) {\n    this.clienteService = clienteService;\n  }\n  anexo2F(embarcacao, campotexto1, campotexto2, servico) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.carregarDados(campotexto1);\n      try {\n        const pdfBytes = yield fetch('assets/pdfanexos/Anexo2F-N212.pdf').then(res => res.arrayBuffer());\n        const pdfDoc = yield PDFDocument.load(pdfBytes);\n        const form = pdfDoc.getForm();\n        form.getTextField('nomemotoaquatica').setText(embarcacao.nomeEmbarcacao);\n        form.getTextField('inscricao').setText(embarcacao.numInscricao);\n        form.getTextField('cp-dl-ag').setText(campotexto2);\n        form.getTextField('nomeproprietarioanterior').setText(embarcacao.cliente.nome);\n        //form.getTextField('tipo').setText(embarcacao.cliente.?);\n        form.getTextField('rg').setText(embarcacao.cliente.rg);\n        form.getTextField('orgaoexpedidor').setText(embarcacao.cliente.orgEmissor);\n        form.getTextField('dtexpedicao').setText(embarcacao.cliente.dtEmissao.toString());\n        form.getTextField('cpfcnpj').setText(embarcacao.cliente.cpfcnpj);\n        form.getTextField('endereco').setText(embarcacao.cliente.cpfcnpj);\n        form.getTextField('complemento').setText(embarcacao.cliente.complemento);\n        form.getTextField('numero').setText(embarcacao.cliente.numero);\n        form.getTextField('bairro').setText(embarcacao.cliente.bairro);\n        form.getTextField('cidade').setText(embarcacao.cliente.cidade);\n        form.getTextField('uf').setText(embarcacao.cliente.uf);\n        form.getTextField('cep').setText(embarcacao.cliente.cep);\n        form.getTextField('nomenovoproprietario').setText(_this.clienteNovo.nome);\n        form.getTextField('rgnovoproprietario').setText(_this.clienteNovo.rg);\n        //form.getTextField('tiponovoproprietario').setText(this.clienteNovo.tipo?);\n        form.getTextField('orgaoexpedidornovoproprietario').setText(_this.clienteNovo.orgEmissor);\n        form.getTextField('dtexpedicaonovoproprietario').setText(_this.clienteNovo.dtEmissao.toString());\n        form.getTextField('cpfcnpjnovoproprietario').setText(_this.clienteNovo.cpfcnpj);\n        form.getTextField('endereconovoproprietario').setText(_this.clienteNovo.logradouro);\n        form.getTextField('numeronovoproprietario').setText(_this.clienteNovo.numero);\n        form.getTextField('complementonovoproprietario').setText(_this.clienteNovo.complemento);\n        form.getTextField('bairronovoproprietario').setText(_this.clienteNovo.bairro);\n        form.getTextField('cidadenovoproprietario').setText(_this.clienteNovo.cidade);\n        form.getTextField('ufnovoproprietario').setText(_this.clienteNovo.uf);\n        form.getTextField('cepnovoproprietario').setText(_this.clienteNovo.cep);\n        form.getTextField('local').setText(_this.clienteNovo.cidade);\n        const hoje = new Date();\n        const dia = hoje.getDate().toString().padStart(2, '0');\n        const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\n        const ano = hoje.getFullYear().toString();\n        form.getTextField('dia').setText(dia);\n        form.getTextField('ano').setText(ano.slice(-2));\n        // form.getTextField('mesextenso').setText(mes);\n        switch (mes) {\n          case '01':\n            form.getTextField('mes').setText('Janeiro');\n            break;\n          case '02':\n            form.getTextField('mes').setText('Fevereiro');\n            break;\n          case '03':\n            form.getTextField('mes').setText('Março');\n            break;\n          case '04':\n            form.getTextField('mes').setText('Abril');\n            break;\n          case '05':\n            form.getTextField('mes').setText('Maio');\n            break;\n          case '06':\n            form.getTextField('mes').setText('Junho');\n            break;\n          case '07':\n            form.getTextField('mes').setText('Julho');\n            break;\n          case '08':\n            form.getTextField('mes').setText('Agosto');\n            break;\n          case '09':\n            form.getTextField('mes').setText('Setembro');\n            break;\n          case '10':\n            form.getTextField('mes').setText('Outubro');\n            break;\n          case '11':\n            form.getTextField('mes').setText('Novembro');\n            break;\n          case '12':\n            form.getTextField('mes').setText('Dezembro');\n            break;\n        }\n        form.flatten();\n        const modifiedPdfBytes = yield pdfDoc.save();\n        if (!servico) {\n          _this.abrirPDFemJanela(modifiedPdfBytes);\n          console.log('PDF Criado!');\n        } else {\n          return modifiedPdfBytes;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }\n  abrirPDFemJanela(data) {\n    const blob = new Blob([data], {\n      type: 'application/pdf'\n    });\n    const url = window.URL.createObjectURL(blob);\n    window.open(url, '_blank');\n  }\n  carregarDados(campotexto1) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.clienteService.consultarClienteCPFCNPJ(campotexto1).subscribe(cliente => {\n        _this2.clienteNovo = cliente;\n      });\n    })();\n  }\n  static #_ = this.ɵfac = function Anexo2FService_Factory(t) {\n    return new (t || Anexo2FService)(i0.ɵɵinject(i1.FrontClienteService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Anexo2FService,\n    factory: Anexo2FService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PDFDocument","Anexo2FService","constructor","clienteService","anexo2F","embarcacao","campotexto1","campotexto2","servico","_this","_asyncToGenerator","carregarDados","pdfBytes","fetch","then","res","arrayBuffer","pdfDoc","load","form","getForm","getTextField","setText","nomeEmbarcacao","numInscricao","cliente","nome","rg","orgEmissor","dtEmissao","toString","cpfcnpj","complemento","numero","bairro","cidade","uf","cep","clienteNovo","logradouro","hoje","Date","dia","getDate","padStart","mes","getMonth","ano","getFullYear","slice","flatten","modifiedPdfBytes","save","abrirPDFemJanela","console","log","err","data","blob","Blob","type","url","window","URL","createObjectURL","open","_this2","consultarClienteCPFCNPJ","subscribe","_","i0","ɵɵinject","i1","FrontClienteService","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\anexos\\anexo2F.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { FrontClienteService } from '../front-cliente.service';\r\nimport { Cliente } from 'src/app/model/cliente';\r\nimport { Embarcacao } from 'src/app/model/embarcacao';\r\nimport { PDFDocument } from 'pdf-lib';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Anexo2FService {\r\n\r\n  constructor(private clienteService: FrontClienteService) { }\r\n  clienteNovo!: Cliente;\r\n  \r\n\r\n  async anexo2F(embarcacao: Embarcacao, campotexto1: string, campotexto2: string, servico?: string): Promise<void | Uint8Array> {\r\n\r\n    await this.carregarDados(campotexto1);\r\n\r\n    try {\r\n      const pdfBytes = await fetch('assets/pdfanexos/Anexo2F-N212.pdf').then(res => res.arrayBuffer());\r\n      const pdfDoc = await PDFDocument.load(pdfBytes);\r\n\r\n      const form = pdfDoc.getForm();\r\n\r\n      form.getTextField('nomemotoaquatica').setText(embarcacao.nomeEmbarcacao);\r\n      form.getTextField('inscricao').setText(embarcacao.numInscricao);\r\n      form.getTextField('cp-dl-ag').setText(campotexto2);\r\n\r\n      form.getTextField('nomeproprietarioanterior').setText(embarcacao.cliente.nome);\r\n      //form.getTextField('tipo').setText(embarcacao.cliente.?);\r\n      form.getTextField('rg').setText(embarcacao.cliente.rg);\r\n      form.getTextField('orgaoexpedidor').setText(embarcacao.cliente.orgEmissor);\r\n      form.getTextField('dtexpedicao').setText(embarcacao.cliente.dtEmissao.toString());\r\n      form.getTextField('cpfcnpj').setText(embarcacao.cliente.cpfcnpj);\r\n      form.getTextField('endereco').setText(embarcacao.cliente.cpfcnpj);\r\n      form.getTextField('complemento').setText(embarcacao.cliente.complemento);\r\n      form.getTextField('numero').setText(embarcacao.cliente.numero);\r\n      form.getTextField('bairro').setText(embarcacao.cliente.bairro);\r\n      form.getTextField('cidade').setText(embarcacao.cliente.cidade);\r\n      form.getTextField('uf').setText(embarcacao.cliente.uf);\r\n      form.getTextField('cep').setText(embarcacao.cliente.cep);\r\n\r\n      form.getTextField('nomenovoproprietario').setText(this.clienteNovo.nome);\r\n      form.getTextField('rgnovoproprietario').setText(this.clienteNovo.rg);\r\n      //form.getTextField('tiponovoproprietario').setText(this.clienteNovo.tipo?);\r\n      form.getTextField('orgaoexpedidornovoproprietario').setText(this.clienteNovo.orgEmissor);\r\n      form.getTextField('dtexpedicaonovoproprietario').setText(this.clienteNovo.dtEmissao.toString());\r\n      form.getTextField('cpfcnpjnovoproprietario').setText(this.clienteNovo.cpfcnpj);\r\n      form.getTextField('endereconovoproprietario').setText(this.clienteNovo.logradouro);\r\n      form.getTextField('numeronovoproprietario').setText(this.clienteNovo.numero);\r\n      form.getTextField('complementonovoproprietario').setText(this.clienteNovo.complemento);\r\n      form.getTextField('bairronovoproprietario').setText(this.clienteNovo.bairro);\r\n      form.getTextField('cidadenovoproprietario').setText(this.clienteNovo.cidade);\r\n      form.getTextField('ufnovoproprietario').setText(this.clienteNovo.uf);\r\n      form.getTextField('cepnovoproprietario').setText(this.clienteNovo.cep);\r\n\r\n      form.getTextField('local').setText(this.clienteNovo.cidade);\r\n      const hoje = new Date();\r\n      const dia = hoje.getDate().toString().padStart(2, '0');\r\n      const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\r\n      const ano = hoje.getFullYear().toString();\r\n      form.getTextField('dia').setText(dia);\r\n      form.getTextField('ano').setText(ano.slice(-2));\r\n     // form.getTextField('mesextenso').setText(mes);\r\n\r\n      switch (mes){\r\n        case '01':\r\n          form.getTextField('mes').setText('Janeiro');\r\n          break;\r\n        case '02':\r\n          form.getTextField('mes').setText('Fevereiro');\r\n          break;\r\n        case '03':\r\n          form.getTextField('mes').setText('Março');\r\n          break;\r\n        case '04':\r\n          form.getTextField('mes').setText('Abril');\r\n          break;\r\n        case '05':\r\n          form.getTextField('mes').setText('Maio');\r\n          break;\r\n        case '06':\r\n          form.getTextField('mes').setText('Junho');\r\n          break;\r\n        case '07':\r\n          form.getTextField('mes').setText('Julho');\r\n          break;\r\n        case '08':\r\n          form.getTextField('mes').setText('Agosto');\r\n          break;\r\n        case '09':\r\n          form.getTextField('mes').setText('Setembro');\r\n          break;\r\n        case '10':\r\n          form.getTextField('mes').setText('Outubro');\r\n          break;\r\n        case '11':\r\n          form.getTextField('mes').setText('Novembro');\r\n          break;\r\n        case '12':\r\n          form.getTextField('mes').setText('Dezembro');\r\n          break;\r\n      }\r\n\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n      form.flatten();\r\n      const modifiedPdfBytes = await pdfDoc.save();\r\n      if (!servico){\r\n        this.abrirPDFemJanela(modifiedPdfBytes);\r\n        console.log('PDF Criado!');\r\n      } else {\r\n        return modifiedPdfBytes;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n  }\r\n\r\n  private abrirPDFemJanela(data: Uint8Array): void {\r\n    const blob = new Blob([data], { type: 'application/pdf' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  async carregarDados (campotexto1: string){\r\n       \r\n    this.clienteService.consultarClienteCPFCNPJ(campotexto1).subscribe(cliente => {\r\n      this.clienteNovo = cliente;\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}