{"ast":null,"code":"import { Encodings, Font, FontNames } from '@pdf-lib/standard-fonts';\nimport PDFHexString from \"../objects/PDFHexString\";\nimport { toCodePoint, toHexString } from \"../../utils\";\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/foliojs/pdfkit/blob/f91bdd61c164a72ea06be1a43dc0a412afc3925f/lib/font/afm.coffee\n */\nvar StandardFontEmbedder = /** @class */function () {\n  function StandardFontEmbedder(fontName, customName) {\n    // prettier-ignore\n    this.encoding = fontName === FontNames.ZapfDingbats ? Encodings.ZapfDingbats : fontName === FontNames.Symbol ? Encodings.Symbol : Encodings.WinAnsi;\n    this.font = Font.load(fontName);\n    this.fontName = this.font.FontName;\n    this.customName = customName;\n  }\n  /**\n   * Encode the JavaScript string into this font. (JavaScript encodes strings in\n   * Unicode, but standard fonts use either WinAnsi, ZapfDingbats, or Symbol\n   * encodings)\n   */\n  StandardFontEmbedder.prototype.encodeText = function (text) {\n    var glyphs = this.encodeTextAsGlyphs(text);\n    var hexCodes = new Array(glyphs.length);\n    for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n      hexCodes[idx] = toHexString(glyphs[idx].code);\n    }\n    return PDFHexString.of(hexCodes.join(''));\n  };\n  StandardFontEmbedder.prototype.widthOfTextAtSize = function (text, size) {\n    var glyphs = this.encodeTextAsGlyphs(text);\n    var totalWidth = 0;\n    for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n      var left = glyphs[idx].name;\n      var right = (glyphs[idx + 1] || {}).name;\n      var kernAmount = this.font.getXAxisKerningForPair(left, right) || 0;\n      totalWidth += this.widthOfGlyph(left) + kernAmount;\n    }\n    var scale = size / 1000;\n    return totalWidth * scale;\n  };\n  StandardFontEmbedder.prototype.heightOfFontAtSize = function (size, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _a = options.descender,\n      descender = _a === void 0 ? true : _a;\n    var _b = this.font,\n      Ascender = _b.Ascender,\n      Descender = _b.Descender,\n      FontBBox = _b.FontBBox;\n    var yTop = Ascender || FontBBox[3];\n    var yBottom = Descender || FontBBox[1];\n    var height = yTop - yBottom;\n    if (!descender) height += Descender || 0;\n    return height / 1000 * size;\n  };\n  StandardFontEmbedder.prototype.sizeOfFontAtHeight = function (height) {\n    var _a = this.font,\n      Ascender = _a.Ascender,\n      Descender = _a.Descender,\n      FontBBox = _a.FontBBox;\n    var yTop = Ascender || FontBBox[3];\n    var yBottom = Descender || FontBBox[1];\n    return 1000 * height / (yTop - yBottom);\n  };\n  StandardFontEmbedder.prototype.embedIntoContext = function (context, ref) {\n    var fontDict = context.obj({\n      Type: 'Font',\n      Subtype: 'Type1',\n      BaseFont: this.customName || this.fontName,\n      Encoding: this.encoding === Encodings.WinAnsi ? 'WinAnsiEncoding' : undefined\n    });\n    if (ref) {\n      context.assign(ref, fontDict);\n      return ref;\n    } else {\n      return context.register(fontDict);\n    }\n  };\n  StandardFontEmbedder.prototype.widthOfGlyph = function (glyphName) {\n    // Default to 250 if font doesn't specify a width\n    return this.font.getWidthOfGlyph(glyphName) || 250;\n  };\n  StandardFontEmbedder.prototype.encodeTextAsGlyphs = function (text) {\n    var codePoints = Array.from(text);\n    var glyphs = new Array(codePoints.length);\n    for (var idx = 0, len = codePoints.length; idx < len; idx++) {\n      var codePoint = toCodePoint(codePoints[idx]);\n      glyphs[idx] = this.encoding.encodeUnicodeCodePoint(codePoint);\n    }\n    return glyphs;\n  };\n  StandardFontEmbedder.for = function (fontName, customName) {\n    return new StandardFontEmbedder(fontName, customName);\n  };\n  return StandardFontEmbedder;\n}();\nexport default StandardFontEmbedder;","map":{"version":3,"names":["Encodings","Font","FontNames","PDFHexString","toCodePoint","toHexString","StandardFontEmbedder","fontName","customName","encoding","ZapfDingbats","Symbol","WinAnsi","font","load","FontName","prototype","encodeText","text","glyphs","encodeTextAsGlyphs","hexCodes","Array","length","idx","len","code","of","join","widthOfTextAtSize","size","totalWidth","left","name","right","kernAmount","getXAxisKerningForPair","widthOfGlyph","scale","heightOfFontAtSize","options","_a","descender","_b","Ascender","Descender","FontBBox","yTop","yBottom","height","sizeOfFontAtHeight","embedIntoContext","context","ref","fontDict","obj","Type","Subtype","BaseFont","Encoding","undefined","assign","register","glyphName","getWidthOfGlyph","codePoints","from","codePoint","encodeUnicodeCodePoint","for"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/embedders/StandardFontEmbedder.js"],"sourcesContent":["import { Encodings, Font, FontNames, } from '@pdf-lib/standard-fonts';\nimport PDFHexString from \"../objects/PDFHexString\";\nimport { toCodePoint, toHexString } from \"../../utils\";\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/foliojs/pdfkit/blob/f91bdd61c164a72ea06be1a43dc0a412afc3925f/lib/font/afm.coffee\n */\nvar StandardFontEmbedder = /** @class */ (function () {\n    function StandardFontEmbedder(fontName, customName) {\n        // prettier-ignore\n        this.encoding = (fontName === FontNames.ZapfDingbats ? Encodings.ZapfDingbats\n            : fontName === FontNames.Symbol ? Encodings.Symbol\n                : Encodings.WinAnsi);\n        this.font = Font.load(fontName);\n        this.fontName = this.font.FontName;\n        this.customName = customName;\n    }\n    /**\n     * Encode the JavaScript string into this font. (JavaScript encodes strings in\n     * Unicode, but standard fonts use either WinAnsi, ZapfDingbats, or Symbol\n     * encodings)\n     */\n    StandardFontEmbedder.prototype.encodeText = function (text) {\n        var glyphs = this.encodeTextAsGlyphs(text);\n        var hexCodes = new Array(glyphs.length);\n        for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n            hexCodes[idx] = toHexString(glyphs[idx].code);\n        }\n        return PDFHexString.of(hexCodes.join(''));\n    };\n    StandardFontEmbedder.prototype.widthOfTextAtSize = function (text, size) {\n        var glyphs = this.encodeTextAsGlyphs(text);\n        var totalWidth = 0;\n        for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n            var left = glyphs[idx].name;\n            var right = (glyphs[idx + 1] || {}).name;\n            var kernAmount = this.font.getXAxisKerningForPair(left, right) || 0;\n            totalWidth += this.widthOfGlyph(left) + kernAmount;\n        }\n        var scale = size / 1000;\n        return totalWidth * scale;\n    };\n    StandardFontEmbedder.prototype.heightOfFontAtSize = function (size, options) {\n        if (options === void 0) { options = {}; }\n        var _a = options.descender, descender = _a === void 0 ? true : _a;\n        var _b = this.font, Ascender = _b.Ascender, Descender = _b.Descender, FontBBox = _b.FontBBox;\n        var yTop = Ascender || FontBBox[3];\n        var yBottom = Descender || FontBBox[1];\n        var height = yTop - yBottom;\n        if (!descender)\n            height += Descender || 0;\n        return (height / 1000) * size;\n    };\n    StandardFontEmbedder.prototype.sizeOfFontAtHeight = function (height) {\n        var _a = this.font, Ascender = _a.Ascender, Descender = _a.Descender, FontBBox = _a.FontBBox;\n        var yTop = Ascender || FontBBox[3];\n        var yBottom = Descender || FontBBox[1];\n        return (1000 * height) / (yTop - yBottom);\n    };\n    StandardFontEmbedder.prototype.embedIntoContext = function (context, ref) {\n        var fontDict = context.obj({\n            Type: 'Font',\n            Subtype: 'Type1',\n            BaseFont: this.customName || this.fontName,\n            Encoding: this.encoding === Encodings.WinAnsi ? 'WinAnsiEncoding' : undefined,\n        });\n        if (ref) {\n            context.assign(ref, fontDict);\n            return ref;\n        }\n        else {\n            return context.register(fontDict);\n        }\n    };\n    StandardFontEmbedder.prototype.widthOfGlyph = function (glyphName) {\n        // Default to 250 if font doesn't specify a width\n        return this.font.getWidthOfGlyph(glyphName) || 250;\n    };\n    StandardFontEmbedder.prototype.encodeTextAsGlyphs = function (text) {\n        var codePoints = Array.from(text);\n        var glyphs = new Array(codePoints.length);\n        for (var idx = 0, len = codePoints.length; idx < len; idx++) {\n            var codePoint = toCodePoint(codePoints[idx]);\n            glyphs[idx] = this.encoding.encodeUnicodeCodePoint(codePoint);\n        }\n        return glyphs;\n    };\n    StandardFontEmbedder.for = function (fontName, customName) {\n        return new StandardFontEmbedder(fontName, customName);\n    };\n    return StandardFontEmbedder;\n}());\nexport default StandardFontEmbedder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}