{"ast":null,"code":"import _asyncToGenerator from \"E:/PROA/frontPROA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PDFDocument } from 'pdf-lib';\nimport * as i0 from \"@angular/core\";\nexport class Anexo3CService {\n  constructor() {}\n  anexo3C(embarcacao, campotexto2, servico) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const pdfBytes = yield fetch('assets/pdfanexos/Anexo3C-N211.pdf').then(res => res.arrayBuffer());\n        const pdfDoc = yield PDFDocument.load(pdfBytes);\n        const form = pdfDoc.getForm();\n        form.getTextField('nome').setText(embarcacao.cliente.nome);\n        form.getTextField('nacionalidade').setText(embarcacao.cliente.nacionalidade.toUpperCase());\n        let partesData = embarcacao.cliente.dataNasc.toString().split('-');\n        form.getTextField('dianasc').setText(partesData[2]);\n        form.getTextField('mesnasc').setText(partesData[1]);\n        form.getTextField('anonasc').setText(partesData[0]);\n        form.getTextField('rg').setText(embarcacao.cliente.rg);\n        form.getTextField('orgexpedidor').setText(embarcacao.cliente.orgEmissor);\n        let partesData2 = embarcacao.cliente.dtEmissao.toString().split('-');\n        form.getTextField('diaexprg').setText(partesData2[2]);\n        form.getTextField('mesexprg').setText(partesData2[1]);\n        form.getTextField('anoexprg').setText(partesData2[0]);\n        form.getTextField('cpf').setText(embarcacao.cliente.cpfcnpj);\n        const endereco = embarcacao.cliente.logradouro + ', ' + embarcacao.cliente.complemento;\n        const [part1, part2] = _this.divideString(endereco, 28);\n        form.getTextField('logradouro').setText(part1.toUpperCase());\n        form.getTextField('logradouro2').setText(part2.toUpperCase());\n        form.getTextField('logradouro').setText(endereco);\n        form.getTextField('bairro').setText(embarcacao.cliente.bairro);\n        form.getTextField('cep').setText(embarcacao.cliente.cep);\n        form.getTextField('cidade_uf').setText(embarcacao.cliente.cidade + ' / ' + embarcacao.cliente.uf);\n        form.getTextField('telefone').setText(embarcacao.cliente.telefone ? embarcacao.cliente.telefone : embarcacao.cliente.celular);\n        form.getTextField('nomeembarcacao').setText(embarcacao.nomeEmbarcacao);\n        form.getTextField('classificacaoembarcacao').setText(embarcacao.tipoEmbarcacao);\n        //form.getTextField('capitania').setText(embarcacao.?); falta tratar capitania\n        form.getTextField('numinscricaoembarcacao').setText(embarcacao.numInscricao);\n        form.getTextField('cidade').setText(embarcacao.cidade);\n        form.getTextField('capitania').setText(campotexto2);\n        form.getTextField('capitania2').setText(campotexto2);\n        const hoje = new Date();\n        const dia = hoje.getDate().toString().padStart(2, '0');\n        const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\n        const ano = hoje.getFullYear().toString();\n        form.getTextField('dia').setText(dia);\n        form.getTextField('ano').setText(ano);\n        // form.getTextField('mesextenso').setText(mes);\n        switch (mes) {\n          case '01':\n            form.getTextField('mesextenso').setText('Janeiro');\n            break;\n          case '02':\n            form.getTextField('mesextenso').setText('Fevereiro');\n            break;\n          case '03':\n            form.getTextField('mesextenso').setText('Março');\n            break;\n          case '04':\n            form.getTextField('mesextenso').setText('Abril');\n            break;\n          case '05':\n            form.getTextField('mesextenso').setText('Maio');\n            break;\n          case '06':\n            form.getTextField('mesextenso').setText('Junho');\n            break;\n          case '07':\n            form.getTextField('mesextenso').setText('Julho');\n            break;\n          case '08':\n            form.getTextField('mesextenso').setText('Agosto');\n            break;\n          case '09':\n            form.getTextField('mesextenso').setText('Setembro');\n            break;\n          case '10':\n            form.getTextField('mesextenso').setText('Outubro');\n            break;\n          case '11':\n            form.getTextField('mesextenso').setText('Novembro');\n            break;\n          case '12':\n            form.getTextField('mesextenso').setText('Dezembro');\n            break;\n        }\n        form.flatten();\n        const modifiedPdfBytes = yield pdfDoc.save();\n        if (!servico) {\n          _this.abrirPDFemJanela(modifiedPdfBytes);\n          console.log('PDF Criado!');\n        } else {\n          return modifiedPdfBytes;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }\n  abrirPDFemJanela(data) {\n    const blob = new Blob([data], {\n      type: 'application/pdf'\n    });\n    const url = window.URL.createObjectURL(blob);\n    window.open(url, '_blank');\n  }\n  divideString(input, limit) {\n    let part1 = '';\n    let part2 = '';\n    console.log(\"tamanho: \", input.length);\n    if (input.length <= limit) {\n      part1 = input;\n    } else {\n      let breakPoint = input.lastIndexOf(' ', limit);\n      if (breakPoint === -1) {\n        breakPoint = limit; // Nenhum espaço encontrado, quebra no limite\n      }\n\n      part1 = input.substring(0, breakPoint);\n      part2 = input.substring(breakPoint).trim();\n      if (part2.length > limit) {\n        part2 = part2.substring(0, limit);\n      }\n    }\n    return [part1, part2];\n  }\n  static #_ = this.ɵfac = function Anexo3CService_Factory(t) {\n    return new (t || Anexo3CService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Anexo3CService,\n    factory: Anexo3CService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PDFDocument","Anexo3CService","constructor","anexo3C","embarcacao","campotexto2","servico","_this","_asyncToGenerator","pdfBytes","fetch","then","res","arrayBuffer","pdfDoc","load","form","getForm","getTextField","setText","cliente","nome","nacionalidade","toUpperCase","partesData","dataNasc","toString","split","rg","orgEmissor","partesData2","dtEmissao","cpfcnpj","endereco","logradouro","complemento","part1","part2","divideString","bairro","cep","cidade","uf","telefone","celular","nomeEmbarcacao","tipoEmbarcacao","numInscricao","hoje","Date","dia","getDate","padStart","mes","getMonth","ano","getFullYear","flatten","modifiedPdfBytes","save","abrirPDFemJanela","console","log","err","data","blob","Blob","type","url","window","URL","createObjectURL","open","input","limit","length","breakPoint","lastIndexOf","substring","trim","_","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\anexos\\anexo3c.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { PDFDocument } from 'pdf-lib';\r\nimport { Embarcacao } from 'src/app/model/embarcacao';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Anexo3CService {\r\n\r\n  constructor() { }\r\n\r\n  async anexo3C (embarcacao: Embarcacao, campotexto2: string, servico?: string): Promise<void | Uint8Array>{\r\n\r\n    try{\r\n      const pdfBytes = await fetch('assets/pdfanexos/Anexo3C-N211.pdf').then(res => res.arrayBuffer());\r\n      const pdfDoc = await PDFDocument.load(pdfBytes);\r\n\r\n      const form = pdfDoc.getForm();\r\n\r\n      form.getTextField('nome').setText(embarcacao.cliente.nome);\r\n      form.getTextField('nacionalidade').setText(embarcacao.cliente.nacionalidade.toUpperCase());\r\n\r\n      let partesData = embarcacao.cliente.dataNasc.toString().split('-');\r\n      form.getTextField('dianasc').setText(partesData[2]);\r\n      form.getTextField('mesnasc').setText(partesData[1]);\r\n      form.getTextField('anonasc').setText(partesData[0]);\r\n\r\n      form.getTextField('rg').setText(embarcacao.cliente.rg);\r\n      form.getTextField('orgexpedidor').setText(embarcacao.cliente.orgEmissor);\r\n\r\n      let partesData2 = embarcacao.cliente.dtEmissao.toString().split('-');\r\n      form.getTextField('diaexprg').setText(partesData2[2]);\r\n      form.getTextField('mesexprg').setText(partesData2[1]);\r\n      form.getTextField('anoexprg').setText(partesData2[0]);\r\n      form.getTextField('cpf').setText(embarcacao.cliente.cpfcnpj);\r\n\r\n      const endereco = embarcacao.cliente.logradouro + ', ' +embarcacao.cliente.complemento;\r\n      const [part1, part2] = this.divideString(endereco, 28);\r\n      form.getTextField('logradouro').setText(part1.toUpperCase());\r\n      form.getTextField('logradouro2').setText(part2.toUpperCase());\r\n\r\n\r\n      form.getTextField('logradouro').setText(endereco);\r\n\r\n      form.getTextField('bairro').setText(embarcacao.cliente.bairro);\r\n      form.getTextField('cep').setText(embarcacao.cliente.cep);\r\n      form.getTextField('cidade_uf').setText(embarcacao.cliente.cidade + ' / ' + embarcacao.cliente.uf);\r\n      form.getTextField('telefone').setText(embarcacao.cliente.telefone ? embarcacao.cliente.telefone : embarcacao.cliente.celular);\r\n\r\n      form.getTextField('nomeembarcacao').setText(embarcacao.nomeEmbarcacao);\r\n      form.getTextField('classificacaoembarcacao').setText(embarcacao.tipoEmbarcacao);\r\n      //form.getTextField('capitania').setText(embarcacao.?); falta tratar capitania\r\n      form.getTextField('numinscricaoembarcacao').setText(embarcacao.numInscricao);\r\n      form.getTextField('cidade').setText(embarcacao.cidade);\r\n\r\n      form.getTextField('capitania').setText(campotexto2);\r\n      form.getTextField('capitania2').setText(campotexto2);\r\n      \r\n      const hoje = new Date();\r\n      const dia = hoje.getDate().toString().padStart(2, '0');\r\n      const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\r\n      const ano = hoje.getFullYear().toString();\r\n      form.getTextField('dia').setText(dia);\r\n      form.getTextField('ano').setText(ano);\r\n     // form.getTextField('mesextenso').setText(mes);\r\n\r\n      switch (mes){\r\n        case '01':\r\n          form.getTextField('mesextenso').setText('Janeiro');\r\n          break;\r\n        case '02':\r\n          form.getTextField('mesextenso').setText('Fevereiro');\r\n          break;\r\n        case '03':\r\n          form.getTextField('mesextenso').setText('Março');\r\n          break;\r\n        case '04':\r\n          form.getTextField('mesextenso').setText('Abril');\r\n          break;\r\n        case '05':\r\n          form.getTextField('mesextenso').setText('Maio');\r\n          break;\r\n        case '06':\r\n          form.getTextField('mesextenso').setText('Junho');\r\n          break;\r\n        case '07':\r\n          form.getTextField('mesextenso').setText('Julho');\r\n          break;\r\n        case '08':\r\n          form.getTextField('mesextenso').setText('Agosto');\r\n          break;\r\n        case '09':\r\n          form.getTextField('mesextenso').setText('Setembro');\r\n          break;\r\n        case '10':\r\n          form.getTextField('mesextenso').setText('Outubro');\r\n          break;\r\n        case '11':\r\n          form.getTextField('mesextenso').setText('Novembro');\r\n          break;\r\n        case '12':\r\n          form.getTextField('mesextenso').setText('Dezembro');\r\n          break;\r\n      }\r\n\r\n      \r\n\r\n\r\n      form.flatten();\r\n      const modifiedPdfBytes = await pdfDoc.save();\r\n      if (!servico){\r\n        this.abrirPDFemJanela(modifiedPdfBytes);\r\n        console.log('PDF Criado!');\r\n      } else {\r\n        return modifiedPdfBytes;\r\n      }\r\n    }catch (err){\r\n      console.log(err);\r\n    }\r\n\r\n  }\r\n\r\n  private abrirPDFemJanela(data: Uint8Array): void {\r\n    const blob = new Blob([data], { type: 'application/pdf' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  divideString(input: string, limit: number): [string, string] {\r\n    let part1 = '';\r\n    let part2 = '';\r\n    console.log(\"tamanho: \", input.length)\r\n    if (input.length <= limit) {\r\n      part1 = input;\r\n    } else {\r\n      let breakPoint = input.lastIndexOf(' ', limit);\r\n      if (breakPoint === -1) {\r\n        breakPoint = limit; // Nenhum espaço encontrado, quebra no limite\r\n      }\r\n      part1 = input.substring(0, breakPoint);\r\n      \r\n      part2 = input.substring(breakPoint).trim();\r\n      if (part2.length > limit) {\r\n        part2 = part2.substring(0, limit);\r\n      }\r\n    }\r\n\r\n    return [part1, part2];\r\n  }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}