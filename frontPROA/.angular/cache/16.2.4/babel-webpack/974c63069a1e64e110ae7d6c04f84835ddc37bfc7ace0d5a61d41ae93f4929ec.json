{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FrontProcuracaoService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://192.168.15.49:8080/cprocuracao';\n  }\n  listarProcuracao() {\n    return this.httpClient.get(`${this.url}`);\n  }\n  //Serviço para consulta da Procuracao\n  consultarProcuracao(modeloProcuracao) {\n    return this.httpClient.get(`${this.url}/modelo/${modeloProcuracao}`);\n  }\n  incluirProcuracao(procuracao) {\n    return this.httpClient.post(`${this.url}`, procuracao);\n  }\n  alterarProcuracao(IDProcuracao, procuracao) {\n    return this.httpClient.put(`${this.url}/${IDProcuracao}`, procuracao);\n  }\n  excluirProcuracao(IDProcuracao) {\n    return this.httpClient.delete(`${this.url}/${IDProcuracao}`);\n  }\n  obterProcuracao() {\n    return this.httpClient.get(`${this.url}`);\n  }\n  salvarProcuracao(procuracao) {\n    return this.httpClient.post(`${this.url}`, procuracao);\n  }\n  alterarTextoEConverterParaPdf(novoTexto) {\n    return this.httpClient.post(`${this.url}/alterar-para-pdf`, novoTexto, {\n      responseType: 'arraybuffer' // Necessário para lidar com o PDF como Uint8Array\n    });\n  }\n  static #_ = this.ɵfac = function FrontProcuracaoService_Factory(t) {\n    return new (t || FrontProcuracaoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FrontProcuracaoService,\n    factory: FrontProcuracaoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FrontProcuracaoService","constructor","httpClient","url","listarProcuracao","get","consultarProcuracao","modeloProcuracao","incluirProcuracao","procuracao","post","alterarProcuracao","IDProcuracao","put","excluirProcuracao","delete","obterProcuracao","salvarProcuracao","alterarTextoEConverterParaPdf","novoTexto","responseType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\front-procuracao.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Procuracao } from '../model/procuracao';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FrontProcuracaoService {\n  private url = 'http://192.168.15.49:8080/cprocuracao';  \n\n  constructor(private httpClient: HttpClient) { }\n\n\n  listarProcuracao(): Observable<Procuracao[]>{\n    return this.httpClient.get<Procuracao[]>(`${this.url}`)\n  }\n\n  //Serviço para consulta da Procuracao\n  consultarProcuracao (modeloProcuracao: string): Observable<Procuracao>{\n    \n    return this.httpClient.get<Procuracao>(`${this.url}/modelo/${modeloProcuracao}`)\n  }\n\n\n  incluirProcuracao(procuracao: Procuracao): Observable<object>{\n    return this.httpClient.post(`${this.url}`, procuracao);\n  }\n\n\n  alterarProcuracao(IDProcuracao: number, procuracao: Procuracao): Observable<object>{\n    return this.httpClient.put(`${this.url}/${IDProcuracao}`, procuracao);\n  }\n\n\n  excluirProcuracao(IDProcuracao: number): Observable<Object>{\n    return this.httpClient.delete<Procuracao>(`${this.url}/${IDProcuracao}`);\n  }\n\n  obterProcuracao(): Observable<Procuracao> {\n    return this.httpClient.get<Procuracao>(`${this.url}`);\n  }\n\n  salvarProcuracao(procuracao: Procuracao): Observable<void> {\n    return this.httpClient.post<void>(`${this.url}`, procuracao);\n  }\n\n  alterarTextoEConverterParaPdf(novoTexto: string) {\n    return this.httpClient.post(`${this.url}/alterar-para-pdf`, novoTexto, {\n      responseType: 'arraybuffer', // Necessário para lidar com o PDF como Uint8Array\n    });\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,sBAAsB;EAGjCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,GAAG,GAAG,uCAAuC;EAEP;EAG9CC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAe,GAAG,IAAI,CAACF,GAAG,EAAE,CAAC;EACzD;EAEA;EACAG,mBAAmBA,CAAEC,gBAAwB;IAE3C,OAAO,IAAI,CAACL,UAAU,CAACG,GAAG,CAAa,GAAG,IAAI,CAACF,GAAG,WAAWI,gBAAgB,EAAE,CAAC;EAClF;EAGAC,iBAAiBA,CAACC,UAAsB;IACtC,OAAO,IAAI,CAACP,UAAU,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,EAAE,EAAEM,UAAU,CAAC;EACxD;EAGAE,iBAAiBA,CAACC,YAAoB,EAAEH,UAAsB;IAC5D,OAAO,IAAI,CAACP,UAAU,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,GAAG,IAAIS,YAAY,EAAE,EAAEH,UAAU,CAAC;EACvE;EAGAK,iBAAiBA,CAACF,YAAoB;IACpC,OAAO,IAAI,CAACV,UAAU,CAACa,MAAM,CAAa,GAAG,IAAI,CAACZ,GAAG,IAAIS,YAAY,EAAE,CAAC;EAC1E;EAEAI,eAAeA,CAAA;IACb,OAAO,IAAI,CAACd,UAAU,CAACG,GAAG,CAAa,GAAG,IAAI,CAACF,GAAG,EAAE,CAAC;EACvD;EAEAc,gBAAgBA,CAACR,UAAsB;IACrC,OAAO,IAAI,CAACP,UAAU,CAACQ,IAAI,CAAO,GAAG,IAAI,CAACP,GAAG,EAAE,EAAEM,UAAU,CAAC;EAC9D;EAEAS,6BAA6BA,CAACC,SAAiB;IAC7C,OAAO,IAAI,CAACjB,UAAU,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,mBAAmB,EAAEgB,SAAS,EAAE;MACrEC,YAAY,EAAE,aAAa,CAAE;KAC9B,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBA3CUrB,sBAAsB,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAtB1B,sBAAsB;IAAA2B,OAAA,EAAtB3B,sBAAsB,CAAA4B,IAAA;IAAAC,UAAA,EAFrB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}