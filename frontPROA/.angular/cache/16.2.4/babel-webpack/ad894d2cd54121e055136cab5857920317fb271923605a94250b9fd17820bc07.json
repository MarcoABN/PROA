{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { PDFName, PDFArray, PDFDict, PDFHexString } from \"../core\";\n/**\n * Represents JavaScript that has been embedded in a [[PDFDocument]].\n */\nvar PDFJavaScript = /** @class */function () {\n  function PDFJavaScript(ref, doc, embedder) {\n    this.alreadyEmbedded = false;\n    this.ref = ref;\n    this.doc = doc;\n    this.embedder = embedder;\n  }\n  /**\n   * > **NOTE:** You probably don't need to call this method directly. The\n   * > [[PDFDocument.save]] and [[PDFDocument.saveAsBase64]] methods will\n   * > automatically ensure all JavaScripts get embedded.\n   *\n   * Embed this JavaScript in its document.\n   *\n   * @returns Resolves when the embedding is complete.\n   */\n  PDFJavaScript.prototype.embed = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, catalog, context, ref, Names, Javascript, JSNames;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!!this.alreadyEmbedded) return [3 /*break*/, 2];\n            _a = this.doc, catalog = _a.catalog, context = _a.context;\n            return [4 /*yield*/, this.embedder.embedIntoContext(this.doc.context, this.ref)];\n          case 1:\n            ref = _b.sent();\n            if (!catalog.has(PDFName.of('Names'))) {\n              catalog.set(PDFName.of('Names'), context.obj({}));\n            }\n            Names = catalog.lookup(PDFName.of('Names'), PDFDict);\n            if (!Names.has(PDFName.of('JavaScript'))) {\n              Names.set(PDFName.of('JavaScript'), context.obj({}));\n            }\n            Javascript = Names.lookup(PDFName.of('JavaScript'), PDFDict);\n            if (!Javascript.has(PDFName.of('Names'))) {\n              Javascript.set(PDFName.of('Names'), context.obj([]));\n            }\n            JSNames = Javascript.lookup(PDFName.of('Names'), PDFArray);\n            JSNames.push(PDFHexString.fromText(this.embedder.scriptName));\n            JSNames.push(ref);\n            this.alreadyEmbedded = true;\n            _b.label = 2;\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * > **NOTE:** You probably don't want to call this method directly. Instead,\n   * > consider using the [[PDFDocument.addJavaScript]] method, which will\n   * create instances of [[PDFJavaScript]] for you.\n   *\n   * Create an instance of [[PDFJavaScript]] from an existing ref and script\n   *\n   * @param ref The unique reference for this script.\n   * @param doc The document to which the script will belong.\n   * @param embedder The embedder that will be used to embed the script.\n   */\n  PDFJavaScript.of = function (ref, doc, embedder) {\n    return new PDFJavaScript(ref, doc, embedder);\n  };\n  return PDFJavaScript;\n}();\nexport default PDFJavaScript;","map":{"version":3,"names":["__awaiter","__generator","PDFName","PDFArray","PDFDict","PDFHexString","PDFJavaScript","ref","doc","embedder","alreadyEmbedded","prototype","embed","_a","catalog","context","Names","Javascript","JSNames","_b","label","embedIntoContext","sent","has","of","set","obj","lookup","push","fromText","scriptName"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/api/PDFJavaScript.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { PDFName, PDFArray, PDFDict, PDFHexString } from \"../core\";\n/**\n * Represents JavaScript that has been embedded in a [[PDFDocument]].\n */\nvar PDFJavaScript = /** @class */ (function () {\n    function PDFJavaScript(ref, doc, embedder) {\n        this.alreadyEmbedded = false;\n        this.ref = ref;\n        this.doc = doc;\n        this.embedder = embedder;\n    }\n    /**\n     * > **NOTE:** You probably don't need to call this method directly. The\n     * > [[PDFDocument.save]] and [[PDFDocument.saveAsBase64]] methods will\n     * > automatically ensure all JavaScripts get embedded.\n     *\n     * Embed this JavaScript in its document.\n     *\n     * @returns Resolves when the embedding is complete.\n     */\n    PDFJavaScript.prototype.embed = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, catalog, context, ref, Names, Javascript, JSNames;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!!this.alreadyEmbedded) return [3 /*break*/, 2];\n                        _a = this.doc, catalog = _a.catalog, context = _a.context;\n                        return [4 /*yield*/, this.embedder.embedIntoContext(this.doc.context, this.ref)];\n                    case 1:\n                        ref = _b.sent();\n                        if (!catalog.has(PDFName.of('Names'))) {\n                            catalog.set(PDFName.of('Names'), context.obj({}));\n                        }\n                        Names = catalog.lookup(PDFName.of('Names'), PDFDict);\n                        if (!Names.has(PDFName.of('JavaScript'))) {\n                            Names.set(PDFName.of('JavaScript'), context.obj({}));\n                        }\n                        Javascript = Names.lookup(PDFName.of('JavaScript'), PDFDict);\n                        if (!Javascript.has(PDFName.of('Names'))) {\n                            Javascript.set(PDFName.of('Names'), context.obj([]));\n                        }\n                        JSNames = Javascript.lookup(PDFName.of('Names'), PDFArray);\n                        JSNames.push(PDFHexString.fromText(this.embedder.scriptName));\n                        JSNames.push(ref);\n                        this.alreadyEmbedded = true;\n                        _b.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * > **NOTE:** You probably don't want to call this method directly. Instead,\n     * > consider using the [[PDFDocument.addJavaScript]] method, which will\n     * create instances of [[PDFJavaScript]] for you.\n     *\n     * Create an instance of [[PDFJavaScript]] from an existing ref and script\n     *\n     * @param ref The unique reference for this script.\n     * @param doc The document to which the script will belong.\n     * @param embedder The embedder that will be used to embed the script.\n     */\n    PDFJavaScript.of = function (ref, doc, embedder) {\n        return new PDFJavaScript(ref, doc, embedder);\n    };\n    return PDFJavaScript;\n}());\nexport default PDFJavaScript;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}