{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFField from \"./PDFField\";\nimport { PDFAcroSignature } from \"../../core\";\nimport { assertIs } from \"../../utils\";\n/**\n * Represents a signature field of a [[PDFForm]].\n *\n * [[PDFSignature]] fields are digital signatures. `pdf-lib` does not\n * currently provide any specialized APIs for creating digital signatures or\n * reading the contents of existing digital signatures.\n */\nvar PDFSignature = /** @class */function (_super) {\n  __extends(PDFSignature, _super);\n  function PDFSignature(acroSignature, ref, doc) {\n    var _this = _super.call(this, acroSignature, ref, doc) || this;\n    assertIs(acroSignature, 'acroSignature', [[PDFAcroSignature, 'PDFAcroSignature']]);\n    _this.acroField = acroSignature;\n    return _this;\n  }\n  PDFSignature.prototype.needsAppearancesUpdate = function () {\n    return false;\n  };\n  /**\n   * > **NOTE:** You probably don't want to call this method directly. Instead,\n   * > consider using the [[PDFForm.getSignature]] method, which will create an\n   * > instance of [[PDFSignature]] for you.\n   *\n   * Create an instance of [[PDFSignature]] from an existing acroSignature and\n   * ref\n   *\n   * @param acroSignature The underlying `PDFAcroSignature` for this signature.\n   * @param ref The unique reference for this signature.\n   * @param doc The document to which this signature will belong.\n   */\n  PDFSignature.of = function (acroSignature, ref, doc) {\n    return new PDFSignature(acroSignature, ref, doc);\n  };\n  return PDFSignature;\n}(PDFField);\nexport default PDFSignature;","map":{"version":3,"names":["__extends","PDFField","PDFAcroSignature","assertIs","PDFSignature","_super","acroSignature","ref","doc","_this","call","acroField","prototype","needsAppearancesUpdate","of"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/api/form/PDFSignature.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport PDFField from \"./PDFField\";\nimport { PDFAcroSignature } from \"../../core\";\nimport { assertIs } from \"../../utils\";\n/**\n * Represents a signature field of a [[PDFForm]].\n *\n * [[PDFSignature]] fields are digital signatures. `pdf-lib` does not\n * currently provide any specialized APIs for creating digital signatures or\n * reading the contents of existing digital signatures.\n */\nvar PDFSignature = /** @class */ (function (_super) {\n    __extends(PDFSignature, _super);\n    function PDFSignature(acroSignature, ref, doc) {\n        var _this = _super.call(this, acroSignature, ref, doc) || this;\n        assertIs(acroSignature, 'acroSignature', [\n            [PDFAcroSignature, 'PDFAcroSignature'],\n        ]);\n        _this.acroField = acroSignature;\n        return _this;\n    }\n    PDFSignature.prototype.needsAppearancesUpdate = function () {\n        return false;\n    };\n    /**\n     * > **NOTE:** You probably don't want to call this method directly. Instead,\n     * > consider using the [[PDFForm.getSignature]] method, which will create an\n     * > instance of [[PDFSignature]] for you.\n     *\n     * Create an instance of [[PDFSignature]] from an existing acroSignature and\n     * ref\n     *\n     * @param acroSignature The underlying `PDFAcroSignature` for this signature.\n     * @param ref The unique reference for this signature.\n     * @param doc The document to which this signature will belong.\n     */\n    PDFSignature.of = function (acroSignature, ref, doc) { return new PDFSignature(acroSignature, ref, doc); };\n    return PDFSignature;\n}(PDFField));\nexport default PDFSignature;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAG,aAAe,UAAUC,MAAM,EAAE;EAChDL,SAAS,CAACI,YAAY,EAAEC,MAAM,CAAC;EAC/B,SAASD,YAAYA,CAACE,aAAa,EAAEC,GAAG,EAAEC,GAAG,EAAE;IAC3C,IAAIC,KAAK,GAAGJ,MAAM,CAACK,IAAI,CAAC,IAAI,EAAEJ,aAAa,EAAEC,GAAG,EAAEC,GAAG,CAAC,IAAI,IAAI;IAC9DL,QAAQ,CAACG,aAAa,EAAE,eAAe,EAAE,CACrC,CAACJ,gBAAgB,EAAE,kBAAkB,CAAC,CACzC,CAAC;IACFO,KAAK,CAACE,SAAS,GAAGL,aAAa;IAC/B,OAAOG,KAAK;EAChB;EACAL,YAAY,CAACQ,SAAS,CAACC,sBAAsB,GAAG,YAAY;IACxD,OAAO,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIT,YAAY,CAACU,EAAE,GAAG,UAAUR,aAAa,EAAEC,GAAG,EAAEC,GAAG,EAAE;IAAE,OAAO,IAAIJ,YAAY,CAACE,aAAa,EAAEC,GAAG,EAAEC,GAAG,CAAC;EAAE,CAAC;EAC1G,OAAOJ,YAAY;AACvB,CAAC,CAACH,QAAQ,CAAE;AACZ,eAAeG,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}