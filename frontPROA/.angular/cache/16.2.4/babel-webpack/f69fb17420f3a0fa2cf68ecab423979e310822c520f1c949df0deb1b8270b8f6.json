{"ast":null,"code":"import PDFDict from \"../objects/PDFDict\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroNonTerminal from \"./PDFAcroNonTerminal\";\nimport { createPDFAcroField, createPDFAcroFields } from \"./utils\";\nvar PDFAcroForm = /** @class */function () {\n  function PDFAcroForm(dict) {\n    this.dict = dict;\n  }\n  PDFAcroForm.prototype.Fields = function () {\n    var fields = this.dict.lookup(PDFName.of('Fields'));\n    if (fields instanceof PDFArray) return fields;\n    return undefined;\n  };\n  PDFAcroForm.prototype.getFields = function () {\n    var Fields = this.normalizedEntries().Fields;\n    var fields = new Array(Fields.size());\n    for (var idx = 0, len = Fields.size(); idx < len; idx++) {\n      var ref = Fields.get(idx);\n      var dict = Fields.lookup(idx, PDFDict);\n      fields[idx] = [createPDFAcroField(dict, ref), ref];\n    }\n    return fields;\n  };\n  PDFAcroForm.prototype.getAllFields = function () {\n    var allFields = [];\n    var pushFields = function (fields) {\n      if (!fields) return;\n      for (var idx = 0, len = fields.length; idx < len; idx++) {\n        var field = fields[idx];\n        allFields.push(field);\n        var fieldModel = field[0];\n        if (fieldModel instanceof PDFAcroNonTerminal) {\n          pushFields(createPDFAcroFields(fieldModel.Kids()));\n        }\n      }\n    };\n    pushFields(this.getFields());\n    return allFields;\n  };\n  PDFAcroForm.prototype.addField = function (field) {\n    var Fields = this.normalizedEntries().Fields;\n    Fields === null || Fields === void 0 ? void 0 : Fields.push(field);\n  };\n  PDFAcroForm.prototype.removeField = function (field) {\n    var parent = field.getParent();\n    var fields = parent === undefined ? this.normalizedEntries().Fields : parent.Kids();\n    var index = fields === null || fields === void 0 ? void 0 : fields.indexOf(field.ref);\n    if (fields === undefined || index === undefined) {\n      throw new Error(\"Tried to remove inexistent field \" + field.getFullyQualifiedName());\n    }\n    fields.remove(index);\n    if (parent !== undefined && fields.size() === 0) {\n      this.removeField(parent);\n    }\n  };\n  PDFAcroForm.prototype.normalizedEntries = function () {\n    var Fields = this.Fields();\n    if (!Fields) {\n      Fields = this.dict.context.obj([]);\n      this.dict.set(PDFName.of('Fields'), Fields);\n    }\n    return {\n      Fields: Fields\n    };\n  };\n  PDFAcroForm.fromDict = function (dict) {\n    return new PDFAcroForm(dict);\n  };\n  PDFAcroForm.create = function (context) {\n    var dict = context.obj({\n      Fields: []\n    });\n    return new PDFAcroForm(dict);\n  };\n  return PDFAcroForm;\n}();\nexport default PDFAcroForm;","map":{"version":3,"names":["PDFDict","PDFArray","PDFName","PDFAcroNonTerminal","createPDFAcroField","createPDFAcroFields","PDFAcroForm","dict","prototype","Fields","fields","lookup","of","undefined","getFields","normalizedEntries","Array","size","idx","len","ref","get","getAllFields","allFields","pushFields","length","field","push","fieldModel","Kids","addField","removeField","parent","getParent","index","indexOf","Error","getFullyQualifiedName","remove","context","obj","set","fromDict","create"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/acroform/PDFAcroForm.js"],"sourcesContent":["import PDFDict from \"../objects/PDFDict\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroNonTerminal from \"./PDFAcroNonTerminal\";\nimport { createPDFAcroField, createPDFAcroFields, } from \"./utils\";\nvar PDFAcroForm = /** @class */ (function () {\n    function PDFAcroForm(dict) {\n        this.dict = dict;\n    }\n    PDFAcroForm.prototype.Fields = function () {\n        var fields = this.dict.lookup(PDFName.of('Fields'));\n        if (fields instanceof PDFArray)\n            return fields;\n        return undefined;\n    };\n    PDFAcroForm.prototype.getFields = function () {\n        var Fields = this.normalizedEntries().Fields;\n        var fields = new Array(Fields.size());\n        for (var idx = 0, len = Fields.size(); idx < len; idx++) {\n            var ref = Fields.get(idx);\n            var dict = Fields.lookup(idx, PDFDict);\n            fields[idx] = [createPDFAcroField(dict, ref), ref];\n        }\n        return fields;\n    };\n    PDFAcroForm.prototype.getAllFields = function () {\n        var allFields = [];\n        var pushFields = function (fields) {\n            if (!fields)\n                return;\n            for (var idx = 0, len = fields.length; idx < len; idx++) {\n                var field = fields[idx];\n                allFields.push(field);\n                var fieldModel = field[0];\n                if (fieldModel instanceof PDFAcroNonTerminal) {\n                    pushFields(createPDFAcroFields(fieldModel.Kids()));\n                }\n            }\n        };\n        pushFields(this.getFields());\n        return allFields;\n    };\n    PDFAcroForm.prototype.addField = function (field) {\n        var Fields = this.normalizedEntries().Fields;\n        Fields === null || Fields === void 0 ? void 0 : Fields.push(field);\n    };\n    PDFAcroForm.prototype.removeField = function (field) {\n        var parent = field.getParent();\n        var fields = parent === undefined ? this.normalizedEntries().Fields : parent.Kids();\n        var index = fields === null || fields === void 0 ? void 0 : fields.indexOf(field.ref);\n        if (fields === undefined || index === undefined) {\n            throw new Error(\"Tried to remove inexistent field \" + field.getFullyQualifiedName());\n        }\n        fields.remove(index);\n        if (parent !== undefined && fields.size() === 0) {\n            this.removeField(parent);\n        }\n    };\n    PDFAcroForm.prototype.normalizedEntries = function () {\n        var Fields = this.Fields();\n        if (!Fields) {\n            Fields = this.dict.context.obj([]);\n            this.dict.set(PDFName.of('Fields'), Fields);\n        }\n        return { Fields: Fields };\n    };\n    PDFAcroForm.fromDict = function (dict) { return new PDFAcroForm(dict); };\n    PDFAcroForm.create = function (context) {\n        var dict = context.obj({ Fields: [] });\n        return new PDFAcroForm(dict);\n    };\n    return PDFAcroForm;\n}());\nexport default PDFAcroForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}