{"ast":null,"code":"import _asyncToGenerator from \"E:/PROA/frontPROA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PDFDocument } from 'pdf-lib';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../front-motor.service\";\nimport * as i2 from \"../front-cliente.service\";\nexport let Anexo2MService = /*#__PURE__*/(() => {\n  class Anexo2MService {\n    constructor(motorService, clienteService) {\n      this.motorService = motorService;\n      this.clienteService = clienteService;\n      this.motores = [];\n    }\n    anexo2M(embarcacao, campotexto1, campotexto2, servico) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this.carregarDados(embarcacao, campotexto1);\n          const pdfBytes = yield fetch('assets/pdfanexos/Anexo2M-N211.pdf').then(res => res.arrayBuffer());\n          const pdfDoc = yield PDFDocument.load(pdfBytes);\n          const form = pdfDoc.getForm();\n          form.getTextField('nomeembarcacao').setText(embarcacao.nomeEmbarcacao);\n          form.getTextField('inscricao').setText(embarcacao.numInscricao);\n          form.getTextField('nomeproprietario').setText(embarcacao.cliente.nome);\n          form.getTextField('cpfcnpjproprietario').setText(embarcacao.cliente.cpfcnpj);\n          form.getTextField('telefoneproprietario').setText(embarcacao.cliente.telefone);\n          form.getTextField('emailproprietario').setText(embarcacao.cliente.email);\n          form.getTextField('nomecomprador').setText(_this.cliente.nome);\n          form.getTextField('cpfcnpjcomprador').setText(_this.cliente.cpfcnpj);\n          form.getTextField('telefone').setText(_this.cliente.celular);\n          form.getTextField('logradourocomprador').setText(_this.cliente.logradouro);\n          form.getTextField('bairrocomprador').setText(_this.cliente.bairro);\n          form.getTextField('cidadecomprador').setText(_this.cliente.cidade);\n          form.getTextField('numerocomprador').setText(_this.cliente.numero);\n          form.getTextField('complementocomprador').setText(_this.cliente.complemento);\n          form.getTextField('cepcomprador').setText(_this.cliente.cep);\n          form.getTextField('emailcomprador').setText(_this.cliente.email);\n          form.getTextField('valorcomprador').setText(\"R$ \" + campotexto2);\n          //form.getTextField('localdata').setText(this.cliente.nome);\n          switch (_this.qtdmotores) {\n            case 1:\n              form.getCheckBox('motor1_sim').check();\n              form.getCheckBox('motor2_nao').check();\n              form.getCheckBox('motor3_nao').check();\n              form.getCheckBox('motor4_nao').check();\n              break;\n            case 2:\n              form.getCheckBox('motor1_sim').check();\n              form.getCheckBox('motor2_sim').check();\n              form.getCheckBox('motor3_nao').check();\n              form.getCheckBox('motor4_nao').check();\n              break;\n            case 3:\n              form.getCheckBox('motor1_sim').check();\n              form.getCheckBox('motor2_sim').check();\n              form.getCheckBox('motor3_sim').check();\n              form.getCheckBox('motor4_nao').check();\n              break;\n            case 4:\n              form.getCheckBox('motor1_sim').check();\n              form.getCheckBox('motor2_sim').check();\n              form.getCheckBox('motor3_sim').check();\n              form.getCheckBox('motor4_sim').check();\n              break;\n          }\n          ;\n          if (_this.qtdmotores >= 1) {\n            form.getTextField('marcamotor1').setText(_this.motores[0].marca);\n            form.getTextField('potenciamotor1').setText(_this.motores[0].potencia.toString());\n            form.getTextField('numseriemotor1').setText(_this.motores[0].numSerie);\n          }\n          ;\n          if (_this.qtdmotores >= 2) {\n            form.getTextField('marcamotor2').setText(_this.motores[1].marca);\n            form.getTextField('potenciamotor2').setText(_this.motores[1].potencia.toString());\n            form.getTextField('numseriemotor2').setText(_this.motores[1].numSerie);\n          }\n          ;\n          if (_this.qtdmotores >= 3) {\n            form.getTextField('marcamotor3').setText(_this.motores[2].marca);\n            form.getTextField('potenciamotor3').setText(_this.motores[2].potencia.toString());\n            form.getTextField('numseriemotor3').setText(_this.motores[2].numSerie);\n          }\n          if (_this.qtdmotores >= 4) {\n            form.getTextField('marcamotor4').setText(_this.motores[3].marca);\n            form.getTextField('potenciamotor4').setText(_this.motores[3].potencia.toString());\n            form.getTextField('numseriemotor4').setText(_this.motores[3].numSerie);\n          }\n          ;\n          const hoje = new Date();\n          const dia = hoje.getDate().toString().padStart(2, '0');\n          const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\n          const ano = hoje.getFullYear().toString();\n          form.getTextField('localdata').setText(embarcacao.cidade + ', ' + dia + '/' + mes + '/' + ano);\n          form.flatten();\n          const modifiedPdfBytes = yield pdfDoc.save();\n          if (!servico) {\n            _this.abrirPDFemJanela(modifiedPdfBytes);\n            console.log('PDF Criado!');\n          } else {\n            return modifiedPdfBytes;\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      })();\n    }\n    abrirPDFemJanela(data) {\n      const blob = new Blob([data], {\n        type: 'application/pdf'\n      });\n      const url = window.URL.createObjectURL(blob);\n      window.open(url, '_blank');\n    }\n    carregarDados(embarcacao, campotexto1) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        _this2.motorService.listarMotorPorEmbarcacao(embarcacao.id).subscribe(motores => {\n          _this2.motores = motores;\n        });\n        _this2.qtdmotores = _this2.motores.length;\n        console.log(\"QTD MOTORES: \", _this2.qtdmotores);\n        _this2.clienteService.consultarClienteCPFCNPJ(campotexto1).subscribe(cliente => {\n          _this2.cliente = cliente;\n        });\n      })();\n    }\n    static #_ = this.ɵfac = function Anexo2MService_Factory(t) {\n      return new (t || Anexo2MService)(i0.ɵɵinject(i1.FrontMotorService), i0.ɵɵinject(i2.FrontClienteService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: Anexo2MService,\n      factory: Anexo2MService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Anexo2MService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}