{"ast":null,"code":"import { map, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./autenticacao.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    return this.authService.getUser().pipe(take(1), map(user => {\n      if (user) {\n        return true;\n      } else {\n        return this.router.createUrlTree(['/login/login']);\n      }\n    }));\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AutenticacaoService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","take","AuthGuard","constructor","authService","router","canActivate","route","state","getUser","pipe","user","createUrlTree","_","i0","ɵɵinject","i1","AutenticacaoService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\autenticacao\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AutenticacaoService } from './autenticacao.service';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AutenticacaoService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      return this.authService.getUser().pipe(\r\n        take(1),\r\n        map(user => {\r\n          if (user) {\r\n            return true;\r\n          } else {\r\n            return this.router.createUrlTree(['/login/login']);\r\n          }\r\n        })\r\n      );\r\n  }\r\n}"],"mappings":"AAIA,SAASA,GAAG,EAAEC,IAAI,QAAQ,gBAAgB;;;;AAK1C,OAAM,MAAOC,SAAS;EAEpBC,YAAoBC,WAAgC,EAAUC,MAAc;IAAxD,KAAAD,WAAW,GAAXA,WAAW;IAA+B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE/EC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,OAAO,IAAI,CAACJ,WAAW,CAACK,OAAO,EAAE,CAACC,IAAI,CACpCT,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAACW,IAAI,IAAG;MACT,IAAIA,IAAI,EAAE;QACR,OAAO,IAAI;OACZ,MAAM;QACL,OAAO,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,CAAC,cAAc,CAAC,CAAC;;IAEtD,CAAC,CAAC,CACH;EACL;EAAC,QAAAC,CAAA,G;qBAjBUX,SAAS,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATlB,SAAS;IAAAmB,OAAA,EAATnB,SAAS,CAAAoB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}