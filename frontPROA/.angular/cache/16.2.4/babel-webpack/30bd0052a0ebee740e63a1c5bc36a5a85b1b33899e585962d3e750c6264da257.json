{"ast":null,"code":"import _asyncToGenerator from \"E:/PROA/frontPROA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PDFDocument } from 'pdf-lib';\nimport * as i0 from \"@angular/core\";\nexport class Anexo2LService {\n  constructor() {}\n  anexo2L(embarcacao, cliente, servico) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const pdfBytes = yield fetch('assets/pdfanexos/Anexo2L-N211.pdf').then(res => res.arrayBuffer());\n        const pdfDoc = yield PDFDocument.load(pdfBytes);\n        const form = pdfDoc.getForm();\n        if (cliente) {\n          form.getTextField('nome').setText(cliente.nome);\n          form.getTextField('nacionalidade').setText(cliente.nacionalidade.toUpperCase());\n          form.getTextField('naturalidade').setText(cliente.naturalidade.toUpperCase());\n          form.getTextField('cpf').setText(cliente.cpfcnpj);\n          form.getTextField('telefone').setText(cliente.telefone);\n          form.getTextField('celular').setText(cliente.celular);\n          form.getTextField('email').setText(cliente.email);\n          const endereco = cliente.logradouro + ', ' + cliente.complemento + ', ' + cliente.bairro + ', ' + cliente.cidade + ', CEP: ' + cliente.cep;\n          const [part1, part2] = _this.divideString(endereco, 35);\n          form.getTextField('endereco1').setText(part1.toUpperCase());\n          form.getTextField('endereco2').setText(part2.toUpperCase());\n        } else if (embarcacao) {\n          form.getTextField('nome').setText(embarcacao.cliente.nome);\n          form.getTextField('nacionalidade').setText(embarcacao.cliente.nacionalidade.toUpperCase());\n          form.getTextField('naturalidade').setText(embarcacao.cliente.naturalidade.toUpperCase());\n          form.getTextField('cpf').setText(embarcacao.cliente.cpfcnpj);\n          form.getTextField('telefone').setText(embarcacao.cliente.telefone);\n          form.getTextField('celular').setText(embarcacao.cliente.celular);\n          form.getTextField('email').setText(embarcacao.cliente.email);\n          const endereco = embarcacao.cliente.logradouro + ', ' + embarcacao.cliente.complemento + ', ' + embarcacao.cliente.bairro + ', ' + embarcacao.cliente.cidade + ', CEP: ' + embarcacao.cliente.cep;\n          const [part1, part2] = _this.divideString(endereco, 35);\n          form.getTextField('endereco1').setText(part1.toUpperCase());\n          form.getTextField('endereco2').setText(part2.toUpperCase());\n        }\n        const hoje = new Date();\n        const dia = hoje.getDate().toString().padStart(2, '0');\n        const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\n        const ano = hoje.getFullYear().toString();\n        form.getTextField('dia').setText(dia);\n        form.getTextField('ano').setText(ano);\n        form.getTextField('mes').setText(mes);\n        form.flatten();\n        const modifiedPdfBytes = yield pdfDoc.save();\n        if (!servico) {\n          _this.abrirPDFemJanela(modifiedPdfBytes);\n          console.log('PDF Criado!');\n        } else {\n          return modifiedPdfBytes;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }\n  abrirPDFemJanela(data) {\n    const blob = new Blob([data], {\n      type: 'application/pdf'\n    });\n    const url = window.URL.createObjectURL(blob);\n    window.open(url, '_blank');\n  }\n  divideString(input, limit) {\n    let part1 = '';\n    let part2 = '';\n    console.log(\"tamanho: \", input.length);\n    if (input.length <= limit) {\n      part1 = input;\n    } else {\n      let breakPoint = input.lastIndexOf(' ', limit);\n      if (breakPoint === -1) {\n        breakPoint = limit; // Nenhum espaço encontrado, quebra no limite\n      }\n\n      part1 = input.substring(0, breakPoint);\n      part2 = input.substring(breakPoint).trim();\n      //if (part2.length > limit) {\n      // part2 = part2.substring(0, limit);\n      //}\n    }\n\n    return [part1, part2];\n  }\n  static #_ = this.ɵfac = function Anexo2LService_Factory(t) {\n    return new (t || Anexo2LService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Anexo2LService,\n    factory: Anexo2LService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PDFDocument","Anexo2LService","constructor","anexo2L","embarcacao","cliente","servico","_this","_asyncToGenerator","pdfBytes","fetch","then","res","arrayBuffer","pdfDoc","load","form","getForm","getTextField","setText","nome","nacionalidade","toUpperCase","naturalidade","cpfcnpj","telefone","celular","email","endereco","logradouro","complemento","bairro","cidade","cep","part1","part2","divideString","hoje","Date","dia","getDate","toString","padStart","mes","getMonth","ano","getFullYear","flatten","modifiedPdfBytes","save","abrirPDFemJanela","console","log","err","data","blob","Blob","type","url","window","URL","createObjectURL","open","input","limit","length","breakPoint","lastIndexOf","substring","trim","_","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\anexos\\anexo2L.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { PDFDocument } from 'pdf-lib';\r\nimport { Cliente } from 'src/app/model/cliente';\r\nimport { Embarcacao } from 'src/app/model/embarcacao';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Anexo2LService {\r\n\r\n  constructor() { }\r\n\r\n  async anexo2L (embarcacao?: Embarcacao, cliente?: Cliente, servico?: string): Promise<void | Uint8Array>{\r\n    \r\n    try {\r\n      const pdfBytes = await fetch('assets/pdfanexos/Anexo2L-N211.pdf').then(res => res.arrayBuffer());\r\n      const pdfDoc = await PDFDocument.load(pdfBytes);\r\n\r\n      const form = pdfDoc.getForm();\r\n  \r\n      if (cliente){\r\n      form.getTextField('nome').setText(cliente.nome);\r\n      form.getTextField('nacionalidade').setText(cliente.nacionalidade.toUpperCase());\r\n      form.getTextField('naturalidade').setText(cliente.naturalidade.toUpperCase());\r\n      form.getTextField('cpf').setText(cliente.cpfcnpj);\r\n      form.getTextField('telefone').setText(cliente.telefone);\r\n      form.getTextField('celular').setText(cliente.celular);\r\n      form.getTextField('email').setText(cliente.email);\r\n      const endereco = \r\n        cliente.logradouro \r\n        + ', ' +cliente.complemento\r\n        + ', ' +cliente.bairro\r\n        + ', ' +cliente.cidade\r\n        + ', CEP: ' +cliente.cep;\r\n      const [part1, part2] = this.divideString(endereco, 35);\r\n      form.getTextField('endereco1').setText(part1.toUpperCase());\r\n      form.getTextField('endereco2').setText(part2.toUpperCase());\r\n      } else if (embarcacao){\r\n        form.getTextField('nome').setText(embarcacao.cliente.nome);\r\n      form.getTextField('nacionalidade').setText(embarcacao.cliente.nacionalidade.toUpperCase());\r\n      form.getTextField('naturalidade').setText(embarcacao.cliente.naturalidade.toUpperCase());\r\n      form.getTextField('cpf').setText(embarcacao.cliente.cpfcnpj);\r\n      form.getTextField('telefone').setText(embarcacao.cliente.telefone);\r\n      form.getTextField('celular').setText(embarcacao.cliente.celular);\r\n      form.getTextField('email').setText(embarcacao.cliente.email);\r\n      const endereco = \r\n      embarcacao.cliente.logradouro \r\n        + ', ' +embarcacao.cliente.complemento\r\n        + ', ' +embarcacao.cliente.bairro\r\n        + ', ' +embarcacao.cliente.cidade\r\n        + ', CEP: ' +embarcacao.cliente.cep;\r\n      const [part1, part2] = this.divideString(endereco, 35);\r\n      form.getTextField('endereco1').setText(part1.toUpperCase());\r\n      form.getTextField('endereco2').setText(part2.toUpperCase());\r\n      }\r\n\r\n      \r\n\r\n      const hoje = new Date();\r\n      const dia = hoje.getDate().toString().padStart(2, '0');\r\n      const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\r\n      const ano = hoje.getFullYear().toString();\r\n      form.getTextField('dia').setText(dia);\r\n      form.getTextField('ano').setText(ano);\r\n      form.getTextField('mes').setText(mes);\r\n\r\n\r\n      form.flatten();\r\n      const modifiedPdfBytes = await pdfDoc.save();\r\n      if (!servico){\r\n        this.abrirPDFemJanela(modifiedPdfBytes);\r\n        console.log('PDF Criado!');\r\n      } else {\r\n        return modifiedPdfBytes;\r\n      }\r\n    }catch (err){\r\n      console.log(err);\r\n    }\r\n\r\n  }\r\n\r\n  private abrirPDFemJanela(data: Uint8Array): void {\r\n    const blob = new Blob([data], { type: 'application/pdf' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  divideString(input: string, limit: number): [string, string] {\r\n    let part1 = '';\r\n    let part2 = '';\r\n    console.log(\"tamanho: \", input.length)\r\n    if (input.length <= limit) {\r\n      part1 = input;\r\n    } else {\r\n      let breakPoint = input.lastIndexOf(' ', limit);\r\n      if (breakPoint === -1) {\r\n        breakPoint = limit; // Nenhum espaço encontrado, quebra no limite\r\n      }\r\n      part1 = input.substring(0, breakPoint);\r\n      \r\n      part2 = input.substring(breakPoint).trim();\r\n      //if (part2.length > limit) {\r\n       // part2 = part2.substring(0, limit);\r\n      //}\r\n    }\r\n\r\n    return [part1, part2];\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}