{"ast":null,"code":"import _asyncToGenerator from \"E:/PROA/frontPROA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nexport class AutenticacaoService {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n    this.baseUrl = 'http://localhost:3000';\n    this.userSubject = new BehaviorSubject(null);\n    const user = localStorage.getItem('user');\n    if (user) {\n      this.userSubject.next(JSON.parse(user));\n    }\n  }\n  login(userLogin) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const credential = yield _this.auth.signInWithEmailAndPassword(userLogin.email, userLogin.senha);\n        _this.user = credential.user;\n        _this.setUserSubject(_this.user);\n        return credential.user;\n      } catch (error) {\n        _this.error = error;\n        throw error; // Lança o erro para ser capturado pelo componente\n      }\n    })();\n  }\n\n  setUserSubject(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n    this.userSubject.next(user); // Corrige para userSubject\n  }\n\n  getUser() {\n    return this.userSubject.asObservable();\n  }\n  getRoles() {\n    return this.userSubject.getValue();\n  }\n  logout() {\n    this.userSubject.next(null);\n    localStorage.clear();\n    this.auth.signOut();\n  }\n  resetPassword(email) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this2.auth.sendPasswordResetEmail(email);\n        alert('Um link para resetar sua senha foi enviado para seu e-mail.');\n      } catch (error) {\n        console.error('Erro ao tentar resetar a senha', error);\n        alert('Erro ao tentar resetar a senha. Verifique se o e-mail está correto.');\n        throw error;\n      }\n    })();\n  }\n  register(userLogin) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const credential = yield _this3.auth.createUserWithEmailAndPassword(userLogin.email, userLogin.senha);\n        _this3.user = credential.user;\n        _this3.setUserSubject(_this3.user); // Armazena o usuário recém-criado no localStorage\n        return credential.user;\n      } catch (error) {\n        _this3.error = error;\n        throw error; // Lança o erro para ser capturado pelo componente\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function AutenticacaoService_Factory(t) {\n    return new (t || AutenticacaoService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AngularFireAuth));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AutenticacaoService,\n    factory: AutenticacaoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","AutenticacaoService","constructor","http","auth","baseUrl","userSubject","user","localStorage","getItem","next","JSON","parse","login","userLogin","_this","_asyncToGenerator","credential","signInWithEmailAndPassword","email","senha","setUserSubject","error","setItem","stringify","getUser","asObservable","getRoles","getValue","logout","clear","signOut","resetPassword","_this2","sendPasswordResetEmail","alert","console","register","_this3","createUserWithEmailAndPassword","_","i0","ɵɵinject","i1","HttpClient","i2","AngularFireAuth","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\autenticacao\\autenticacao.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { UserLogin } from \"./user.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AutenticacaoService {\r\n\r\n  baseUrl = 'http://localhost:3000';\r\n  private userSubject = new BehaviorSubject<any>(null);\r\n  user: any;\r\n  error: any;\r\n\r\n  constructor(private http: HttpClient, public auth: AngularFireAuth) {\r\n    const user = localStorage.getItem('user');\r\n    if (user) {\r\n      this.userSubject.next(JSON.parse(user));\r\n    }\r\n  }\r\n\r\n  async login(userLogin: UserLogin): Promise<any> {\r\n    try {\r\n      const credential = await this.auth.signInWithEmailAndPassword(userLogin.email, userLogin.senha);\r\n      this.user = credential.user;\r\n      this.setUserSubject(this.user);\r\n      return credential.user;\r\n    } catch (error) {\r\n      this.error = error;\r\n      throw error; // Lança o erro para ser capturado pelo componente\r\n    }\r\n  }\r\n\r\n  private setUserSubject(user: any): void {\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.userSubject.next(user); // Corrige para userSubject\r\n  }\r\n\r\n  getUser() {\r\n    return this.userSubject.asObservable();\r\n  }\r\n\r\n  getRoles() {\r\n    return this.userSubject.getValue();\r\n  }\r\n\r\n  logout() {\r\n    this.userSubject.next(null);\r\n    localStorage.clear();\r\n    this.auth.signOut();\r\n  }\r\n\r\n  async resetPassword(email: string): Promise<void> {\r\n    try {\r\n      await this.auth.sendPasswordResetEmail(email);\r\n      alert('Um link para resetar sua senha foi enviado para seu e-mail.');\r\n    } catch (error) {\r\n      console.error('Erro ao tentar resetar a senha', error);\r\n      alert('Erro ao tentar resetar a senha. Verifique se o e-mail está correto.');\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async register(userLogin: UserLogin): Promise<any> {\r\n    try {\r\n      const credential = await this.auth.createUserWithEmailAndPassword(userLogin.email, userLogin.senha);\r\n      this.user = credential.user;\r\n      this.setUserSubject(this.user); // Armazena o usuário recém-criado no localStorage\r\n      return credential.user;\r\n    } catch (error) {\r\n      this.error = error;\r\n      throw error; // Lança o erro para ser capturado pelo componente\r\n    }\r\n}\r\n\r\n  \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}