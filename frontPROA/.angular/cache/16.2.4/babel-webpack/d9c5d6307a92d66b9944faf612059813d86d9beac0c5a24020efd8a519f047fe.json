{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { MethodNotImplementedError } from \"../errors\";\nimport PDFName from \"./PDFName\";\nimport PDFNumber from \"./PDFNumber\";\nimport PDFObject from \"./PDFObject\";\nimport CharCodes from \"../syntax/CharCodes\";\nvar PDFStream = /** @class */function (_super) {\n  __extends(PDFStream, _super);\n  function PDFStream(dict) {\n    var _this = _super.call(this) || this;\n    _this.dict = dict;\n    return _this;\n  }\n  PDFStream.prototype.clone = function (_context) {\n    throw new MethodNotImplementedError(this.constructor.name, 'clone');\n  };\n  PDFStream.prototype.getContentsString = function () {\n    throw new MethodNotImplementedError(this.constructor.name, 'getContentsString');\n  };\n  PDFStream.prototype.getContents = function () {\n    throw new MethodNotImplementedError(this.constructor.name, 'getContents');\n  };\n  PDFStream.prototype.getContentsSize = function () {\n    throw new MethodNotImplementedError(this.constructor.name, 'getContentsSize');\n  };\n  PDFStream.prototype.updateDict = function () {\n    var contentsSize = this.getContentsSize();\n    this.dict.set(PDFName.Length, PDFNumber.of(contentsSize));\n  };\n  PDFStream.prototype.sizeInBytes = function () {\n    this.updateDict();\n    return this.dict.sizeInBytes() + this.getContentsSize() + 18;\n  };\n  PDFStream.prototype.toString = function () {\n    this.updateDict();\n    var streamString = this.dict.toString();\n    streamString += '\\nstream\\n';\n    streamString += this.getContentsString();\n    streamString += '\\nendstream';\n    return streamString;\n  };\n  PDFStream.prototype.copyBytesInto = function (buffer, offset) {\n    this.updateDict();\n    var initialOffset = offset;\n    offset += this.dict.copyBytesInto(buffer, offset);\n    buffer[offset++] = CharCodes.Newline;\n    buffer[offset++] = CharCodes.s;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.e;\n    buffer[offset++] = CharCodes.a;\n    buffer[offset++] = CharCodes.m;\n    buffer[offset++] = CharCodes.Newline;\n    var contents = this.getContents();\n    for (var idx = 0, len = contents.length; idx < len; idx++) {\n      buffer[offset++] = contents[idx];\n    }\n    buffer[offset++] = CharCodes.Newline;\n    buffer[offset++] = CharCodes.e;\n    buffer[offset++] = CharCodes.n;\n    buffer[offset++] = CharCodes.d;\n    buffer[offset++] = CharCodes.s;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.e;\n    buffer[offset++] = CharCodes.a;\n    buffer[offset++] = CharCodes.m;\n    return offset - initialOffset;\n  };\n  return PDFStream;\n}(PDFObject);\nexport default PDFStream;","map":{"version":3,"names":["__extends","MethodNotImplementedError","PDFName","PDFNumber","PDFObject","CharCodes","PDFStream","_super","dict","_this","call","prototype","clone","_context","constructor","name","getContentsString","getContents","getContentsSize","updateDict","contentsSize","set","Length","of","sizeInBytes","toString","streamString","copyBytesInto","buffer","offset","initialOffset","Newline","s","t","r","e","a","m","contents","idx","len","length","n","d"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/objects/PDFStream.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { MethodNotImplementedError } from \"../errors\";\nimport PDFName from \"./PDFName\";\nimport PDFNumber from \"./PDFNumber\";\nimport PDFObject from \"./PDFObject\";\nimport CharCodes from \"../syntax/CharCodes\";\nvar PDFStream = /** @class */ (function (_super) {\n    __extends(PDFStream, _super);\n    function PDFStream(dict) {\n        var _this = _super.call(this) || this;\n        _this.dict = dict;\n        return _this;\n    }\n    PDFStream.prototype.clone = function (_context) {\n        throw new MethodNotImplementedError(this.constructor.name, 'clone');\n    };\n    PDFStream.prototype.getContentsString = function () {\n        throw new MethodNotImplementedError(this.constructor.name, 'getContentsString');\n    };\n    PDFStream.prototype.getContents = function () {\n        throw new MethodNotImplementedError(this.constructor.name, 'getContents');\n    };\n    PDFStream.prototype.getContentsSize = function () {\n        throw new MethodNotImplementedError(this.constructor.name, 'getContentsSize');\n    };\n    PDFStream.prototype.updateDict = function () {\n        var contentsSize = this.getContentsSize();\n        this.dict.set(PDFName.Length, PDFNumber.of(contentsSize));\n    };\n    PDFStream.prototype.sizeInBytes = function () {\n        this.updateDict();\n        return this.dict.sizeInBytes() + this.getContentsSize() + 18;\n    };\n    PDFStream.prototype.toString = function () {\n        this.updateDict();\n        var streamString = this.dict.toString();\n        streamString += '\\nstream\\n';\n        streamString += this.getContentsString();\n        streamString += '\\nendstream';\n        return streamString;\n    };\n    PDFStream.prototype.copyBytesInto = function (buffer, offset) {\n        this.updateDict();\n        var initialOffset = offset;\n        offset += this.dict.copyBytesInto(buffer, offset);\n        buffer[offset++] = CharCodes.Newline;\n        buffer[offset++] = CharCodes.s;\n        buffer[offset++] = CharCodes.t;\n        buffer[offset++] = CharCodes.r;\n        buffer[offset++] = CharCodes.e;\n        buffer[offset++] = CharCodes.a;\n        buffer[offset++] = CharCodes.m;\n        buffer[offset++] = CharCodes.Newline;\n        var contents = this.getContents();\n        for (var idx = 0, len = contents.length; idx < len; idx++) {\n            buffer[offset++] = contents[idx];\n        }\n        buffer[offset++] = CharCodes.Newline;\n        buffer[offset++] = CharCodes.e;\n        buffer[offset++] = CharCodes.n;\n        buffer[offset++] = CharCodes.d;\n        buffer[offset++] = CharCodes.s;\n        buffer[offset++] = CharCodes.t;\n        buffer[offset++] = CharCodes.r;\n        buffer[offset++] = CharCodes.e;\n        buffer[offset++] = CharCodes.a;\n        buffer[offset++] = CharCodes.m;\n        return offset - initialOffset;\n    };\n    return PDFStream;\n}(PDFObject));\nexport default PDFStream;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}