{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport { PDFAcroForm } from \"../acroform\";\nimport ViewerPreferences from '../interactive/ViewerPreferences';\nvar PDFCatalog = /** @class */function (_super) {\n  __extends(PDFCatalog, _super);\n  function PDFCatalog() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFCatalog.prototype.Pages = function () {\n    return this.lookup(PDFName.of('Pages'), PDFDict);\n  };\n  PDFCatalog.prototype.AcroForm = function () {\n    return this.lookupMaybe(PDFName.of('AcroForm'), PDFDict);\n  };\n  PDFCatalog.prototype.getAcroForm = function () {\n    var dict = this.AcroForm();\n    if (!dict) return undefined;\n    return PDFAcroForm.fromDict(dict);\n  };\n  PDFCatalog.prototype.getOrCreateAcroForm = function () {\n    var acroForm = this.getAcroForm();\n    if (!acroForm) {\n      acroForm = PDFAcroForm.create(this.context);\n      var acroFormRef = this.context.register(acroForm.dict);\n      this.set(PDFName.of('AcroForm'), acroFormRef);\n    }\n    return acroForm;\n  };\n  PDFCatalog.prototype.ViewerPreferences = function () {\n    return this.lookupMaybe(PDFName.of('ViewerPreferences'), PDFDict);\n  };\n  PDFCatalog.prototype.getViewerPreferences = function () {\n    var dict = this.ViewerPreferences();\n    if (!dict) return undefined;\n    return ViewerPreferences.fromDict(dict);\n  };\n  PDFCatalog.prototype.getOrCreateViewerPreferences = function () {\n    var viewerPrefs = this.getViewerPreferences();\n    if (!viewerPrefs) {\n      viewerPrefs = ViewerPreferences.create(this.context);\n      var viewerPrefsRef = this.context.register(viewerPrefs.dict);\n      this.set(PDFName.of('ViewerPreferences'), viewerPrefsRef);\n    }\n    return viewerPrefs;\n  };\n  /**\n   * Inserts the given ref as a leaf node of this catalog's page tree at the\n   * specified index (zero-based). Also increments the `Count` of each node in\n   * the page tree hierarchy to accomodate the new page.\n   *\n   * Returns the ref of the PDFPageTree node into which `leafRef` was inserted.\n   */\n  PDFCatalog.prototype.insertLeafNode = function (leafRef, index) {\n    var pagesRef = this.get(PDFName.of('Pages'));\n    var maybeParentRef = this.Pages().insertLeafNode(leafRef, index);\n    return maybeParentRef || pagesRef;\n  };\n  PDFCatalog.prototype.removeLeafNode = function (index) {\n    this.Pages().removeLeafNode(index);\n  };\n  PDFCatalog.withContextAndPages = function (context, pages) {\n    var dict = new Map();\n    dict.set(PDFName.of('Type'), PDFName.of('Catalog'));\n    dict.set(PDFName.of('Pages'), pages);\n    return new PDFCatalog(dict, context);\n  };\n  PDFCatalog.fromMapWithContext = function (map, context) {\n    return new PDFCatalog(map, context);\n  };\n  return PDFCatalog;\n}(PDFDict);\nexport default PDFCatalog;","map":{"version":3,"names":["__extends","PDFDict","PDFName","PDFAcroForm","ViewerPreferences","PDFCatalog","_super","apply","arguments","prototype","Pages","lookup","of","AcroForm","lookupMaybe","getAcroForm","dict","undefined","fromDict","getOrCreateAcroForm","acroForm","create","context","acroFormRef","register","set","getViewerPreferences","getOrCreateViewerPreferences","viewerPrefs","viewerPrefsRef","insertLeafNode","leafRef","index","pagesRef","get","maybeParentRef","removeLeafNode","withContextAndPages","pages","Map","fromMapWithContext","map"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/structures/PDFCatalog.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport { PDFAcroForm } from \"../acroform\";\nimport ViewerPreferences from '../interactive/ViewerPreferences';\nvar PDFCatalog = /** @class */ (function (_super) {\n    __extends(PDFCatalog, _super);\n    function PDFCatalog() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PDFCatalog.prototype.Pages = function () {\n        return this.lookup(PDFName.of('Pages'), PDFDict);\n    };\n    PDFCatalog.prototype.AcroForm = function () {\n        return this.lookupMaybe(PDFName.of('AcroForm'), PDFDict);\n    };\n    PDFCatalog.prototype.getAcroForm = function () {\n        var dict = this.AcroForm();\n        if (!dict)\n            return undefined;\n        return PDFAcroForm.fromDict(dict);\n    };\n    PDFCatalog.prototype.getOrCreateAcroForm = function () {\n        var acroForm = this.getAcroForm();\n        if (!acroForm) {\n            acroForm = PDFAcroForm.create(this.context);\n            var acroFormRef = this.context.register(acroForm.dict);\n            this.set(PDFName.of('AcroForm'), acroFormRef);\n        }\n        return acroForm;\n    };\n    PDFCatalog.prototype.ViewerPreferences = function () {\n        return this.lookupMaybe(PDFName.of('ViewerPreferences'), PDFDict);\n    };\n    PDFCatalog.prototype.getViewerPreferences = function () {\n        var dict = this.ViewerPreferences();\n        if (!dict)\n            return undefined;\n        return ViewerPreferences.fromDict(dict);\n    };\n    PDFCatalog.prototype.getOrCreateViewerPreferences = function () {\n        var viewerPrefs = this.getViewerPreferences();\n        if (!viewerPrefs) {\n            viewerPrefs = ViewerPreferences.create(this.context);\n            var viewerPrefsRef = this.context.register(viewerPrefs.dict);\n            this.set(PDFName.of('ViewerPreferences'), viewerPrefsRef);\n        }\n        return viewerPrefs;\n    };\n    /**\n     * Inserts the given ref as a leaf node of this catalog's page tree at the\n     * specified index (zero-based). Also increments the `Count` of each node in\n     * the page tree hierarchy to accomodate the new page.\n     *\n     * Returns the ref of the PDFPageTree node into which `leafRef` was inserted.\n     */\n    PDFCatalog.prototype.insertLeafNode = function (leafRef, index) {\n        var pagesRef = this.get(PDFName.of('Pages'));\n        var maybeParentRef = this.Pages().insertLeafNode(leafRef, index);\n        return maybeParentRef || pagesRef;\n    };\n    PDFCatalog.prototype.removeLeafNode = function (index) {\n        this.Pages().removeLeafNode(index);\n    };\n    PDFCatalog.withContextAndPages = function (context, pages) {\n        var dict = new Map();\n        dict.set(PDFName.of('Type'), PDFName.of('Catalog'));\n        dict.set(PDFName.of('Pages'), pages);\n        return new PDFCatalog(dict, context);\n    };\n    PDFCatalog.fromMapWithContext = function (map, context) {\n        return new PDFCatalog(map, context);\n    };\n    return PDFCatalog;\n}(PDFDict));\nexport default PDFCatalog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}