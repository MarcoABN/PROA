{"ast":null,"code":"import PDFRef from \"../objects/PDFRef\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { copyStringIntoBuffer, padStart } from \"../../utils\";\n/**\n * Entries should be added using the [[addEntry]] and [[addDeletedEntry]]\n * methods **in order of ascending object number**.\n */\nvar PDFCrossRefSection = /** @class */function () {\n  function PDFCrossRefSection(firstEntry) {\n    this.subsections = firstEntry ? [[firstEntry]] : [];\n    this.chunkIdx = 0;\n    this.chunkLength = firstEntry ? 1 : 0;\n  }\n  PDFCrossRefSection.prototype.addEntry = function (ref, offset) {\n    this.append({\n      ref: ref,\n      offset: offset,\n      deleted: false\n    });\n  };\n  PDFCrossRefSection.prototype.addDeletedEntry = function (ref, nextFreeObjectNumber) {\n    this.append({\n      ref: ref,\n      offset: nextFreeObjectNumber,\n      deleted: true\n    });\n  };\n  PDFCrossRefSection.prototype.toString = function () {\n    var section = \"xref\\n\";\n    for (var rangeIdx = 0, rangeLen = this.subsections.length; rangeIdx < rangeLen; rangeIdx++) {\n      var range = this.subsections[rangeIdx];\n      section += range[0].ref.objectNumber + \" \" + range.length + \"\\n\";\n      for (var entryIdx = 0, entryLen = range.length; entryIdx < entryLen; entryIdx++) {\n        var entry = range[entryIdx];\n        section += padStart(String(entry.offset), 10, '0');\n        section += ' ';\n        section += padStart(String(entry.ref.generationNumber), 5, '0');\n        section += ' ';\n        section += entry.deleted ? 'f' : 'n';\n        section += ' \\n';\n      }\n    }\n    return section;\n  };\n  PDFCrossRefSection.prototype.sizeInBytes = function () {\n    var size = 5;\n    for (var idx = 0, len = this.subsections.length; idx < len; idx++) {\n      var subsection = this.subsections[idx];\n      var subsectionLength = subsection.length;\n      var firstEntry = subsection[0];\n      size += 2;\n      size += String(firstEntry.ref.objectNumber).length;\n      size += String(subsectionLength).length;\n      size += 20 * subsectionLength;\n    }\n    return size;\n  };\n  PDFCrossRefSection.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes.x;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.e;\n    buffer[offset++] = CharCodes.f;\n    buffer[offset++] = CharCodes.Newline;\n    offset += this.copySubsectionsIntoBuffer(this.subsections, buffer, offset);\n    return offset - initialOffset;\n  };\n  PDFCrossRefSection.prototype.copySubsectionsIntoBuffer = function (subsections, buffer, offset) {\n    var initialOffset = offset;\n    var length = subsections.length;\n    for (var idx = 0; idx < length; idx++) {\n      var subsection = this.subsections[idx];\n      var firstObjectNumber = String(subsection[0].ref.objectNumber);\n      offset += copyStringIntoBuffer(firstObjectNumber, buffer, offset);\n      buffer[offset++] = CharCodes.Space;\n      var rangeLength = String(subsection.length);\n      offset += copyStringIntoBuffer(rangeLength, buffer, offset);\n      buffer[offset++] = CharCodes.Newline;\n      offset += this.copyEntriesIntoBuffer(subsection, buffer, offset);\n    }\n    return offset - initialOffset;\n  };\n  PDFCrossRefSection.prototype.copyEntriesIntoBuffer = function (entries, buffer, offset) {\n    var length = entries.length;\n    for (var idx = 0; idx < length; idx++) {\n      var entry = entries[idx];\n      var entryOffset = padStart(String(entry.offset), 10, '0');\n      offset += copyStringIntoBuffer(entryOffset, buffer, offset);\n      buffer[offset++] = CharCodes.Space;\n      var entryGen = padStart(String(entry.ref.generationNumber), 5, '0');\n      offset += copyStringIntoBuffer(entryGen, buffer, offset);\n      buffer[offset++] = CharCodes.Space;\n      buffer[offset++] = entry.deleted ? CharCodes.f : CharCodes.n;\n      buffer[offset++] = CharCodes.Space;\n      buffer[offset++] = CharCodes.Newline;\n    }\n    return 20 * length;\n  };\n  PDFCrossRefSection.prototype.append = function (currEntry) {\n    if (this.chunkLength === 0) {\n      this.subsections.push([currEntry]);\n      this.chunkIdx = 0;\n      this.chunkLength = 1;\n      return;\n    }\n    var chunk = this.subsections[this.chunkIdx];\n    var prevEntry = chunk[this.chunkLength - 1];\n    if (currEntry.ref.objectNumber - prevEntry.ref.objectNumber > 1) {\n      this.subsections.push([currEntry]);\n      this.chunkIdx += 1;\n      this.chunkLength = 1;\n    } else {\n      chunk.push(currEntry);\n      this.chunkLength += 1;\n    }\n  };\n  PDFCrossRefSection.create = function () {\n    return new PDFCrossRefSection({\n      ref: PDFRef.of(0, 65535),\n      offset: 0,\n      deleted: true\n    });\n  };\n  PDFCrossRefSection.createEmpty = function () {\n    return new PDFCrossRefSection();\n  };\n  return PDFCrossRefSection;\n}();\nexport default PDFCrossRefSection;","map":{"version":3,"names":["PDFRef","CharCodes","copyStringIntoBuffer","padStart","PDFCrossRefSection","firstEntry","subsections","chunkIdx","chunkLength","prototype","addEntry","ref","offset","append","deleted","addDeletedEntry","nextFreeObjectNumber","toString","section","rangeIdx","rangeLen","length","range","objectNumber","entryIdx","entryLen","entry","String","generationNumber","sizeInBytes","size","idx","len","subsection","subsectionLength","copyBytesInto","buffer","initialOffset","x","r","e","f","Newline","copySubsectionsIntoBuffer","firstObjectNumber","Space","rangeLength","copyEntriesIntoBuffer","entries","entryOffset","entryGen","n","currEntry","push","chunk","prevEntry","create","of","createEmpty"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/document/PDFCrossRefSection.js"],"sourcesContent":["import PDFRef from \"../objects/PDFRef\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { copyStringIntoBuffer, padStart } from \"../../utils\";\n/**\n * Entries should be added using the [[addEntry]] and [[addDeletedEntry]]\n * methods **in order of ascending object number**.\n */\nvar PDFCrossRefSection = /** @class */ (function () {\n    function PDFCrossRefSection(firstEntry) {\n        this.subsections = firstEntry ? [[firstEntry]] : [];\n        this.chunkIdx = 0;\n        this.chunkLength = firstEntry ? 1 : 0;\n    }\n    PDFCrossRefSection.prototype.addEntry = function (ref, offset) {\n        this.append({ ref: ref, offset: offset, deleted: false });\n    };\n    PDFCrossRefSection.prototype.addDeletedEntry = function (ref, nextFreeObjectNumber) {\n        this.append({ ref: ref, offset: nextFreeObjectNumber, deleted: true });\n    };\n    PDFCrossRefSection.prototype.toString = function () {\n        var section = \"xref\\n\";\n        for (var rangeIdx = 0, rangeLen = this.subsections.length; rangeIdx < rangeLen; rangeIdx++) {\n            var range = this.subsections[rangeIdx];\n            section += range[0].ref.objectNumber + \" \" + range.length + \"\\n\";\n            for (var entryIdx = 0, entryLen = range.length; entryIdx < entryLen; entryIdx++) {\n                var entry = range[entryIdx];\n                section += padStart(String(entry.offset), 10, '0');\n                section += ' ';\n                section += padStart(String(entry.ref.generationNumber), 5, '0');\n                section += ' ';\n                section += entry.deleted ? 'f' : 'n';\n                section += ' \\n';\n            }\n        }\n        return section;\n    };\n    PDFCrossRefSection.prototype.sizeInBytes = function () {\n        var size = 5;\n        for (var idx = 0, len = this.subsections.length; idx < len; idx++) {\n            var subsection = this.subsections[idx];\n            var subsectionLength = subsection.length;\n            var firstEntry = subsection[0];\n            size += 2;\n            size += String(firstEntry.ref.objectNumber).length;\n            size += String(subsectionLength).length;\n            size += 20 * subsectionLength;\n        }\n        return size;\n    };\n    PDFCrossRefSection.prototype.copyBytesInto = function (buffer, offset) {\n        var initialOffset = offset;\n        buffer[offset++] = CharCodes.x;\n        buffer[offset++] = CharCodes.r;\n        buffer[offset++] = CharCodes.e;\n        buffer[offset++] = CharCodes.f;\n        buffer[offset++] = CharCodes.Newline;\n        offset += this.copySubsectionsIntoBuffer(this.subsections, buffer, offset);\n        return offset - initialOffset;\n    };\n    PDFCrossRefSection.prototype.copySubsectionsIntoBuffer = function (subsections, buffer, offset) {\n        var initialOffset = offset;\n        var length = subsections.length;\n        for (var idx = 0; idx < length; idx++) {\n            var subsection = this.subsections[idx];\n            var firstObjectNumber = String(subsection[0].ref.objectNumber);\n            offset += copyStringIntoBuffer(firstObjectNumber, buffer, offset);\n            buffer[offset++] = CharCodes.Space;\n            var rangeLength = String(subsection.length);\n            offset += copyStringIntoBuffer(rangeLength, buffer, offset);\n            buffer[offset++] = CharCodes.Newline;\n            offset += this.copyEntriesIntoBuffer(subsection, buffer, offset);\n        }\n        return offset - initialOffset;\n    };\n    PDFCrossRefSection.prototype.copyEntriesIntoBuffer = function (entries, buffer, offset) {\n        var length = entries.length;\n        for (var idx = 0; idx < length; idx++) {\n            var entry = entries[idx];\n            var entryOffset = padStart(String(entry.offset), 10, '0');\n            offset += copyStringIntoBuffer(entryOffset, buffer, offset);\n            buffer[offset++] = CharCodes.Space;\n            var entryGen = padStart(String(entry.ref.generationNumber), 5, '0');\n            offset += copyStringIntoBuffer(entryGen, buffer, offset);\n            buffer[offset++] = CharCodes.Space;\n            buffer[offset++] = entry.deleted ? CharCodes.f : CharCodes.n;\n            buffer[offset++] = CharCodes.Space;\n            buffer[offset++] = CharCodes.Newline;\n        }\n        return 20 * length;\n    };\n    PDFCrossRefSection.prototype.append = function (currEntry) {\n        if (this.chunkLength === 0) {\n            this.subsections.push([currEntry]);\n            this.chunkIdx = 0;\n            this.chunkLength = 1;\n            return;\n        }\n        var chunk = this.subsections[this.chunkIdx];\n        var prevEntry = chunk[this.chunkLength - 1];\n        if (currEntry.ref.objectNumber - prevEntry.ref.objectNumber > 1) {\n            this.subsections.push([currEntry]);\n            this.chunkIdx += 1;\n            this.chunkLength = 1;\n        }\n        else {\n            chunk.push(currEntry);\n            this.chunkLength += 1;\n        }\n    };\n    PDFCrossRefSection.create = function () {\n        return new PDFCrossRefSection({\n            ref: PDFRef.of(0, 65535),\n            offset: 0,\n            deleted: true,\n        });\n    };\n    PDFCrossRefSection.createEmpty = function () { return new PDFCrossRefSection(); };\n    return PDFCrossRefSection;\n}());\nexport default PDFCrossRefSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}