{"ast":null,"code":"import { setFillingCmykColor, setFillingGrayscaleColor, setFillingRgbColor, setStrokingCmykColor, setStrokingGrayscaleColor, setStrokingRgbColor } from \"./operators\";\nimport { assertRange, error } from \"../utils\";\nexport var ColorTypes;\n(function (ColorTypes) {\n  ColorTypes[\"Grayscale\"] = \"Grayscale\";\n  ColorTypes[\"RGB\"] = \"RGB\";\n  ColorTypes[\"CMYK\"] = \"CMYK\";\n})(ColorTypes || (ColorTypes = {}));\nexport var grayscale = function (gray) {\n  assertRange(gray, 'gray', 0.0, 1.0);\n  return {\n    type: ColorTypes.Grayscale,\n    gray: gray\n  };\n};\nexport var rgb = function (red, green, blue) {\n  assertRange(red, 'red', 0, 1);\n  assertRange(green, 'green', 0, 1);\n  assertRange(blue, 'blue', 0, 1);\n  return {\n    type: ColorTypes.RGB,\n    red: red,\n    green: green,\n    blue: blue\n  };\n};\nexport var cmyk = function (cyan, magenta, yellow, key) {\n  assertRange(cyan, 'cyan', 0, 1);\n  assertRange(magenta, 'magenta', 0, 1);\n  assertRange(yellow, 'yellow', 0, 1);\n  assertRange(key, 'key', 0, 1);\n  return {\n    type: ColorTypes.CMYK,\n    cyan: cyan,\n    magenta: magenta,\n    yellow: yellow,\n    key: key\n  };\n};\nvar Grayscale = ColorTypes.Grayscale,\n  RGB = ColorTypes.RGB,\n  CMYK = ColorTypes.CMYK;\n// prettier-ignore\nexport var setFillingColor = function (color) {\n  return color.type === Grayscale ? setFillingGrayscaleColor(color.gray) : color.type === RGB ? setFillingRgbColor(color.red, color.green, color.blue) : color.type === CMYK ? setFillingCmykColor(color.cyan, color.magenta, color.yellow, color.key) : error(\"Invalid color: \" + JSON.stringify(color));\n};\n// prettier-ignore\nexport var setStrokingColor = function (color) {\n  return color.type === Grayscale ? setStrokingGrayscaleColor(color.gray) : color.type === RGB ? setStrokingRgbColor(color.red, color.green, color.blue) : color.type === CMYK ? setStrokingCmykColor(color.cyan, color.magenta, color.yellow, color.key) : error(\"Invalid color: \" + JSON.stringify(color));\n};\n// prettier-ignore\nexport var componentsToColor = function (comps, scale) {\n  if (scale === void 0) {\n    scale = 1;\n  }\n  return (comps === null || comps === void 0 ? void 0 : comps.length) === 1 ? grayscale(comps[0] * scale) : (comps === null || comps === void 0 ? void 0 : comps.length) === 3 ? rgb(comps[0] * scale, comps[1] * scale, comps[2] * scale) : (comps === null || comps === void 0 ? void 0 : comps.length) === 4 ? cmyk(comps[0] * scale, comps[1] * scale, comps[2] * scale, comps[3] * scale) : undefined;\n};\n// prettier-ignore\nexport var colorToComponents = function (color) {\n  return color.type === Grayscale ? [color.gray] : color.type === RGB ? [color.red, color.green, color.blue] : color.type === CMYK ? [color.cyan, color.magenta, color.yellow, color.key] : error(\"Invalid color: \" + JSON.stringify(color));\n};","map":{"version":3,"names":["setFillingCmykColor","setFillingGrayscaleColor","setFillingRgbColor","setStrokingCmykColor","setStrokingGrayscaleColor","setStrokingRgbColor","assertRange","error","ColorTypes","grayscale","gray","type","Grayscale","rgb","red","green","blue","RGB","cmyk","cyan","magenta","yellow","key","CMYK","setFillingColor","color","JSON","stringify","setStrokingColor","componentsToColor","comps","scale","length","undefined","colorToComponents"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/api/colors.js"],"sourcesContent":["import { setFillingCmykColor, setFillingGrayscaleColor, setFillingRgbColor, setStrokingCmykColor, setStrokingGrayscaleColor, setStrokingRgbColor, } from \"./operators\";\nimport { assertRange, error } from \"../utils\";\nexport var ColorTypes;\n(function (ColorTypes) {\n    ColorTypes[\"Grayscale\"] = \"Grayscale\";\n    ColorTypes[\"RGB\"] = \"RGB\";\n    ColorTypes[\"CMYK\"] = \"CMYK\";\n})(ColorTypes || (ColorTypes = {}));\nexport var grayscale = function (gray) {\n    assertRange(gray, 'gray', 0.0, 1.0);\n    return { type: ColorTypes.Grayscale, gray: gray };\n};\nexport var rgb = function (red, green, blue) {\n    assertRange(red, 'red', 0, 1);\n    assertRange(green, 'green', 0, 1);\n    assertRange(blue, 'blue', 0, 1);\n    return { type: ColorTypes.RGB, red: red, green: green, blue: blue };\n};\nexport var cmyk = function (cyan, magenta, yellow, key) {\n    assertRange(cyan, 'cyan', 0, 1);\n    assertRange(magenta, 'magenta', 0, 1);\n    assertRange(yellow, 'yellow', 0, 1);\n    assertRange(key, 'key', 0, 1);\n    return { type: ColorTypes.CMYK, cyan: cyan, magenta: magenta, yellow: yellow, key: key };\n};\nvar Grayscale = ColorTypes.Grayscale, RGB = ColorTypes.RGB, CMYK = ColorTypes.CMYK;\n// prettier-ignore\nexport var setFillingColor = function (color) {\n    return color.type === Grayscale ? setFillingGrayscaleColor(color.gray)\n        : color.type === RGB ? setFillingRgbColor(color.red, color.green, color.blue)\n            : color.type === CMYK ? setFillingCmykColor(color.cyan, color.magenta, color.yellow, color.key)\n                : error(\"Invalid color: \" + JSON.stringify(color));\n};\n// prettier-ignore\nexport var setStrokingColor = function (color) {\n    return color.type === Grayscale ? setStrokingGrayscaleColor(color.gray)\n        : color.type === RGB ? setStrokingRgbColor(color.red, color.green, color.blue)\n            : color.type === CMYK ? setStrokingCmykColor(color.cyan, color.magenta, color.yellow, color.key)\n                : error(\"Invalid color: \" + JSON.stringify(color));\n};\n// prettier-ignore\nexport var componentsToColor = function (comps, scale) {\n    if (scale === void 0) { scale = 1; }\n    return ((comps === null || comps === void 0 ? void 0 : comps.length) === 1 ? grayscale(comps[0] * scale)\n        : (comps === null || comps === void 0 ? void 0 : comps.length) === 3 ? rgb(comps[0] * scale, comps[1] * scale, comps[2] * scale)\n            : (comps === null || comps === void 0 ? void 0 : comps.length) === 4 ? cmyk(comps[0] * scale, comps[1] * scale, comps[2] * scale, comps[3] * scale)\n                : undefined);\n};\n// prettier-ignore\nexport var colorToComponents = function (color) {\n    return color.type === Grayscale ? [color.gray]\n        : color.type === RGB ? [color.red, color.green, color.blue]\n            : color.type === CMYK ? [color.cyan, color.magenta, color.yellow, color.key]\n                : error(\"Invalid color: \" + JSON.stringify(color));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}