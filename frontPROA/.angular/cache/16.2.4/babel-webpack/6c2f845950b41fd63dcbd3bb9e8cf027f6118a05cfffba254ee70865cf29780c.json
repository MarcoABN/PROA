{"ast":null,"code":"/*\n * Copyright 2012 Mozilla Foundation\n *\n * The AsciiHexStream class contained in this file is a TypeScript port of the\n * JavaScript AsciiHexStream class in Mozilla's pdf.js project, made available\n * under the Apache 2.0 open source license.\n */\nimport { __extends } from \"tslib\";\nimport DecodeStream from \"./DecodeStream\";\nvar AsciiHexStream = /** @class */function (_super) {\n  __extends(AsciiHexStream, _super);\n  function AsciiHexStream(stream, maybeLength) {\n    var _this = _super.call(this, maybeLength) || this;\n    _this.stream = stream;\n    _this.firstDigit = -1;\n    // Most streams increase in size when decoded, but AsciiHex streams shrink\n    // by 50%.\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    return _this;\n  }\n  AsciiHexStream.prototype.readBlock = function () {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.stream.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i];\n      var digit = void 0;\n      if (ch >= 0x30 && ch <= 0x39) {\n        // '0'-'9'\n        digit = ch & 0x0f;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        // 'A'-'Z', 'a'-'z'\n        digit = (ch & 0x0f) + 9;\n      } else if (ch === 0x3e) {\n        // '>'\n        this.eof = true;\n        break;\n      } else {\n        // probably whitespace\n        continue; // ignoring\n      }\n\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      // incomplete byte\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}(DecodeStream);\nexport default AsciiHexStream;","map":{"version":3,"names":["__extends","DecodeStream","AsciiHexStream","_super","stream","maybeLength","_this","call","firstDigit","prototype","readBlock","UPSTREAM_BLOCK_SIZE","bytes","getBytes","length","eof","maxDecodeLength","buffer","ensureBuffer","bufferLength","i","ii","ch","digit"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/streams/AsciiHexStream.js"],"sourcesContent":["/*\n * Copyright 2012 Mozilla Foundation\n *\n * The AsciiHexStream class contained in this file is a TypeScript port of the\n * JavaScript AsciiHexStream class in Mozilla's pdf.js project, made available\n * under the Apache 2.0 open source license.\n */\nimport { __extends } from \"tslib\";\nimport DecodeStream from \"./DecodeStream\";\nvar AsciiHexStream = /** @class */ (function (_super) {\n    __extends(AsciiHexStream, _super);\n    function AsciiHexStream(stream, maybeLength) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this.stream = stream;\n        _this.firstDigit = -1;\n        // Most streams increase in size when decoded, but AsciiHex streams shrink\n        // by 50%.\n        if (maybeLength) {\n            maybeLength = 0.5 * maybeLength;\n        }\n        return _this;\n    }\n    AsciiHexStream.prototype.readBlock = function () {\n        var UPSTREAM_BLOCK_SIZE = 8000;\n        var bytes = this.stream.getBytes(UPSTREAM_BLOCK_SIZE);\n        if (!bytes.length) {\n            this.eof = true;\n            return;\n        }\n        var maxDecodeLength = (bytes.length + 1) >> 1;\n        var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n        var bufferLength = this.bufferLength;\n        var firstDigit = this.firstDigit;\n        for (var i = 0, ii = bytes.length; i < ii; i++) {\n            var ch = bytes[i];\n            var digit = void 0;\n            if (ch >= 0x30 && ch <= 0x39) {\n                // '0'-'9'\n                digit = ch & 0x0f;\n            }\n            else if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n                // 'A'-'Z', 'a'-'z'\n                digit = (ch & 0x0f) + 9;\n            }\n            else if (ch === 0x3e) {\n                // '>'\n                this.eof = true;\n                break;\n            }\n            else {\n                // probably whitespace\n                continue; // ignoring\n            }\n            if (firstDigit < 0) {\n                firstDigit = digit;\n            }\n            else {\n                buffer[bufferLength++] = (firstDigit << 4) | digit;\n                firstDigit = -1;\n            }\n        }\n        if (firstDigit >= 0 && this.eof) {\n            // incomplete byte\n            buffer[bufferLength++] = firstDigit << 4;\n            firstDigit = -1;\n        }\n        this.firstDigit = firstDigit;\n        this.bufferLength = bufferLength;\n    };\n    return AsciiHexStream;\n}(DecodeStream));\nexport default AsciiHexStream;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,IAAIC,cAAc,GAAG,aAAe,UAAUC,MAAM,EAAE;EAClDH,SAAS,CAACE,cAAc,EAAEC,MAAM,CAAC;EACjC,SAASD,cAAcA,CAACE,MAAM,EAAEC,WAAW,EAAE;IACzC,IAAIC,KAAK,GAAGH,MAAM,CAACI,IAAI,CAAC,IAAI,EAAEF,WAAW,CAAC,IAAI,IAAI;IAClDC,KAAK,CAACF,MAAM,GAAGA,MAAM;IACrBE,KAAK,CAACE,UAAU,GAAG,CAAC,CAAC;IACrB;IACA;IACA,IAAIH,WAAW,EAAE;MACbA,WAAW,GAAG,GAAG,GAAGA,WAAW;IACnC;IACA,OAAOC,KAAK;EAChB;EACAJ,cAAc,CAACO,SAAS,CAACC,SAAS,GAAG,YAAY;IAC7C,IAAIC,mBAAmB,GAAG,IAAI;IAC9B,IAAIC,KAAK,GAAG,IAAI,CAACR,MAAM,CAACS,QAAQ,CAACF,mBAAmB,CAAC;IACrD,IAAI,CAACC,KAAK,CAACE,MAAM,EAAE;MACf,IAAI,CAACC,GAAG,GAAG,IAAI;MACf;IACJ;IACA,IAAIC,eAAe,GAAIJ,KAAK,CAACE,MAAM,GAAG,CAAC,IAAK,CAAC;IAC7C,IAAIG,MAAM,GAAG,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,YAAY,GAAGH,eAAe,CAAC;IACnE,IAAIG,YAAY,GAAG,IAAI,CAACA,YAAY;IACpC,IAAIX,UAAU,GAAG,IAAI,CAACA,UAAU;IAChC,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGT,KAAK,CAACE,MAAM,EAAEM,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAE;MAC5C,IAAIE,EAAE,GAAGV,KAAK,CAACQ,CAAC,CAAC;MACjB,IAAIG,KAAK,GAAG,KAAK,CAAC;MAClB,IAAID,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAI,EAAE;QAC1B;QACAC,KAAK,GAAGD,EAAE,GAAG,IAAI;MACrB,CAAC,MACI,IAAKA,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAI,IAAMA,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAK,EAAE;QAC/D;QACAC,KAAK,GAAG,CAACD,EAAE,GAAG,IAAI,IAAI,CAAC;MAC3B,CAAC,MACI,IAAIA,EAAE,KAAK,IAAI,EAAE;QAClB;QACA,IAAI,CAACP,GAAG,GAAG,IAAI;QACf;MACJ,CAAC,MACI;QACD;QACA,SAAS,CAAC;MACd;;MACA,IAAIP,UAAU,GAAG,CAAC,EAAE;QAChBA,UAAU,GAAGe,KAAK;MACtB,CAAC,MACI;QACDN,MAAM,CAACE,YAAY,EAAE,CAAC,GAAIX,UAAU,IAAI,CAAC,GAAIe,KAAK;QAClDf,UAAU,GAAG,CAAC,CAAC;MACnB;IACJ;IACA,IAAIA,UAAU,IAAI,CAAC,IAAI,IAAI,CAACO,GAAG,EAAE;MAC7B;MACAE,MAAM,CAACE,YAAY,EAAE,CAAC,GAAGX,UAAU,IAAI,CAAC;MACxCA,UAAU,GAAG,CAAC,CAAC;IACnB;IACA,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACW,YAAY,GAAGA,YAAY;EACpC,CAAC;EACD,OAAOjB,cAAc;AACzB,CAAC,CAACD,YAAY,CAAE;AAChB,eAAeC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}