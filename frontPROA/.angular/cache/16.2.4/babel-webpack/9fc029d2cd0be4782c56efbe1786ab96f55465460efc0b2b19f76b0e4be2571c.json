{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nexport let ListarEmbarcacaoComponent = class ListarEmbarcacaoComponent {\n  constructor(embarcacaoService, clienteService, router) {\n    this.embarcacaoService = embarcacaoService;\n    this.clienteService = clienteService;\n    this.router = router;\n    this.embarcacoes = [];\n    this.cpf = '';\n    this.nomeCliente = '';\n  }\n  ngOnInit() {\n    // Não listar embarcações na inicialização\n  }\n  pesquisarPorCPF() {\n    if (!this.cpf.trim()) {\n      this.limparDados();\n      return;\n    }\n    const cpfCnpjSemMascara = this.cpf.replace(/[^\\d]+/g, '');\n    this.clienteService.consultarClienteCPFCNPJ(cpfCnpjSemMascara).subscribe(cliente => {\n      if (cliente) {\n        this.nomeCliente = cliente.nome; // Preencher o nome do cliente\n        this.embarcacaoService.listarEmbarcacoesPorCliente(cliente.id).subscribe(data => {\n          console.log(data);\n          this.embarcacoes = data;\n        });\n      } else {\n        alert('Cliente não encontrado!');\n        this.limparDados();\n      }\n    }, error => {\n      console.error(error);\n      alert('Erro ao consultar cliente!');\n      this.limparDados();\n    });\n  }\n  alterarEmbarcacao(codigo) {\n    this.router.navigate(['embarcacao/alterar-embarcacao', codigo]);\n  }\n  cadastrarEmbarcacao() {\n    const cpfCnpjSemMascara = this.cpf.replace(/[^\\d]+/g, '');\n    console.log('CPF/CNPJ enviado:', cpfCnpjSemMascara);\n    this.router.navigate(['embarcacao/cadastrar-embarcacao', {\n      cpf: cpfCnpjSemMascara\n    }]);\n  }\n  consultarEmbarcacao(codigo) {\n    this.router.navigate(['embarcacao/consultar-embarcacao', codigo]);\n  }\n  excluirEmbarcacao(codigo) {\n    if (confirm(\"Deseja Excluir a Embarcacao?\")) {\n      this.embarcacaoService.excluirEmbarcacao(codigo).subscribe(data => {\n        console.log(data);\n        this.pesquisarPorCPF();\n      });\n    }\n  }\n  manterMotor(idEmbarcacao) {\n    this.router.navigate(['motor/manter-motor', idEmbarcacao]);\n    console.log('teste', idEmbarcacao);\n  }\n  notafiscal(idEmbarcacao) {\n    this.router.navigate(['notafiscal/notafiscal', idEmbarcacao]);\n    console.log('teste', idEmbarcacao);\n  }\n  limparDados(form) {\n    if (form) {\n      form.resetForm(); // Reseta o formulário inteiro\n    }\n\n    this.cpf = '';\n    this.nomeCliente = '';\n    this.embarcacoes = [];\n    setTimeout(() => {\n      this.clienteInput.nativeElement.focus(); // Coloca o foco no campo de texto \"Cliente (CPF ou CNPJ)\"\n    }, 0);\n  }\n};\n__decorate([ViewChild('clienteInput')], ListarEmbarcacaoComponent.prototype, \"clienteInput\", void 0);\nListarEmbarcacaoComponent = __decorate([Component({\n  selector: 'app-listar-embarcacao',\n  templateUrl: './listar-embarcacao.component.html',\n  styleUrls: ['./listar-embarcacao.component.css']\n})], ListarEmbarcacaoComponent);","map":{"version":3,"names":["Component","ViewChild","ListarEmbarcacaoComponent","constructor","embarcacaoService","clienteService","router","embarcacoes","cpf","nomeCliente","ngOnInit","pesquisarPorCPF","trim","limparDados","cpfCnpjSemMascara","replace","consultarClienteCPFCNPJ","subscribe","cliente","nome","listarEmbarcacoesPorCliente","id","data","console","log","alert","error","alterarEmbarcacao","codigo","navigate","cadastrarEmbarcacao","consultarEmbarcacao","excluirEmbarcacao","confirm","manterMotor","idEmbarcacao","notafiscal","form","resetForm","setTimeout","clienteInput","nativeElement","focus","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\PROA\\frontPROA\\src\\app\\embarcacao\\listarembarcacao\\listar-embarcacao.component.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Embarcacao } from 'src/app/model/embarcacao';\r\nimport { FrontEmbarcacaoService } from 'src/app/services/front-embarcacao.service';\r\nimport { FrontClienteService } from 'src/app/services/front-cliente.service';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-listar-embarcacao',\r\n  templateUrl: './listar-embarcacao.component.html',\r\n  styleUrls: ['./listar-embarcacao.component.css']\r\n})\r\nexport class ListarEmbarcacaoComponent implements OnInit {\r\n  @ViewChild('clienteInput') clienteInput!: ElementRef;\r\n  embarcacoes: Embarcacao[] = [];\r\n  cpf: string = '';\r\n  nomeCliente: string = '';\r\n\r\n  constructor(\r\n    private embarcacaoService: FrontEmbarcacaoService,\r\n    private clienteService: FrontClienteService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Não listar embarcações na inicialização\r\n  }\r\n\r\n  pesquisarPorCPF() {\r\n    if (!this.cpf.trim()) {\r\n      this.limparDados();\r\n      return;\r\n    }\r\n\r\n    const cpfCnpjSemMascara = this.cpf.replace(/[^\\d]+/g, '');\r\n    \r\n    this.clienteService.consultarClienteCPFCNPJ(cpfCnpjSemMascara).subscribe(cliente => {\r\n      if (cliente) {\r\n        this.nomeCliente = cliente.nome; // Preencher o nome do cliente\r\n        this.embarcacaoService.listarEmbarcacoesPorCliente(cliente.id).subscribe(data => {\r\n          console.log(data);\r\n          this.embarcacoes = data;\r\n        });\r\n      } else {\r\n        alert('Cliente não encontrado!');\r\n        this.limparDados();\r\n      }\r\n    }, error => {\r\n      console.error(error);\r\n      alert('Erro ao consultar cliente!');\r\n      this.limparDados();\r\n    });\r\n  }\r\n\r\n  alterarEmbarcacao(codigo: number) {\r\n    this.router.navigate(['embarcacao/alterar-embarcacao', codigo]);\r\n  }\r\n\r\n  cadastrarEmbarcacao() {\r\n    const cpfCnpjSemMascara = this.cpf.replace(/[^\\d]+/g, '');\r\n    console.log('CPF/CNPJ enviado:', cpfCnpjSemMascara);\r\n    this.router.navigate(['embarcacao/cadastrar-embarcacao', { cpf: cpfCnpjSemMascara }]);\r\n  }\r\n\r\n  consultarEmbarcacao(codigo: number) {\r\n    this.router.navigate(['embarcacao/consultar-embarcacao', codigo]);\r\n  }\r\n\r\n  excluirEmbarcacao(codigo: number) {\r\n    if (confirm(\"Deseja Excluir a Embarcacao?\")) {\r\n      this.embarcacaoService.excluirEmbarcacao(codigo).subscribe(data => {\r\n        console.log(data);\r\n        this.pesquisarPorCPF();\r\n      });\r\n    }\r\n  }\r\n\r\n  manterMotor(idEmbarcacao: number) {\r\n    this.router.navigate(['motor/manter-motor', idEmbarcacao]);\r\n    console.log('teste', idEmbarcacao);\r\n  }\r\n\r\n  notafiscal(idEmbarcacao: number) {\r\n    this.router.navigate(['notafiscal/notafiscal', idEmbarcacao]);\r\n    console.log('teste', idEmbarcacao);\r\n  }\r\n\r\n  limparDados(form?: NgForm) {\r\n    if (form) {\r\n        form.resetForm(); // Reseta o formulário inteiro\r\n    }\r\n    this.cpf = '';\r\n    this.nomeCliente = '';\r\n    this.embarcacoes = [];\r\n    setTimeout(() => {\r\n        this.clienteInput.nativeElement.focus(); // Coloca o foco no campo de texto \"Cliente (CPF ou CNPJ)\"\r\n    }, 0);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}