{"ast":null,"code":"import { NextByteAssertionError } from \"../errors\";\nimport { decodePDFRawStream } from \"../streams/decode\";\nimport CharCodes from \"../syntax/CharCodes\";\n// TODO: See how line/col tracking affects performance\nvar ByteStream = /** @class */function () {\n  function ByteStream(bytes) {\n    this.idx = 0;\n    this.line = 0;\n    this.column = 0;\n    this.bytes = bytes;\n    this.length = this.bytes.length;\n  }\n  ByteStream.prototype.moveTo = function (offset) {\n    this.idx = offset;\n  };\n  ByteStream.prototype.next = function () {\n    var byte = this.bytes[this.idx++];\n    if (byte === CharCodes.Newline) {\n      this.line += 1;\n      this.column = 0;\n    } else {\n      this.column += 1;\n    }\n    return byte;\n  };\n  ByteStream.prototype.assertNext = function (expected) {\n    if (this.peek() !== expected) {\n      throw new NextByteAssertionError(this.position(), expected, this.peek());\n    }\n    return this.next();\n  };\n  ByteStream.prototype.peek = function () {\n    return this.bytes[this.idx];\n  };\n  ByteStream.prototype.peekAhead = function (steps) {\n    return this.bytes[this.idx + steps];\n  };\n  ByteStream.prototype.peekAt = function (offset) {\n    return this.bytes[offset];\n  };\n  ByteStream.prototype.done = function () {\n    return this.idx >= this.length;\n  };\n  ByteStream.prototype.offset = function () {\n    return this.idx;\n  };\n  ByteStream.prototype.slice = function (start, end) {\n    return this.bytes.slice(start, end);\n  };\n  ByteStream.prototype.position = function () {\n    return {\n      line: this.line,\n      column: this.column,\n      offset: this.idx\n    };\n  };\n  ByteStream.of = function (bytes) {\n    return new ByteStream(bytes);\n  };\n  ByteStream.fromPDFRawStream = function (rawStream) {\n    return ByteStream.of(decodePDFRawStream(rawStream).decode());\n  };\n  return ByteStream;\n}();\nexport default ByteStream;\n//# sourceMappingURL=ByteStream.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}