{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FrontEmbarcacaoService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = \"http://localhost:8080/cembarcacao/embarcacao\";\n    this.url2 = \"http://localhost:8080/cembarcacao/cliente\";\n  }\n  //Listar Embarcacoes a partir do metodo API REST que tem na URL acima\n  listarEmbarcacoes() {\n    return this.httpClient.get(`${this.url}`);\n  }\n  listarEmbarcacoesPorCliente(IDCliente) {\n    return this.httpClient.get(`${this.url2}/${IDCliente}`);\n  }\n  //Serviço para consulta da embarcacao\n  consultarEmbarcacao(IDEmbarcacao) {\n    return this.httpClient.get(`${this.url}/${IDEmbarcacao}`);\n  }\n  //Servico para incluir uma embarcacao\n  cadastrarEmbarcacao(barco) {\n    return this.httpClient.post(`${this.url}`, barco);\n  }\n  //Servico para Alterar uma Embarcacao\n  alterarEmbarcacao(IDEmbarcacao, barco) {\n    return this.httpClient.put(`${this.url}/${IDEmbarcacao}`, barco);\n  }\n  //Servico para Excluir uma Embarcacao\n  excluirEmbarcacao(IDEmbarcacao) {\n    return this.httpClient.delete(`${this.url}/${IDEmbarcacao}`);\n  }\n  static #_ = this.ɵfac = function FrontEmbarcacaoService_Factory(t) {\n    return new (t || FrontEmbarcacaoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FrontEmbarcacaoService,\n    factory: FrontEmbarcacaoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FrontEmbarcacaoService","constructor","httpClient","url","url2","listarEmbarcacoes","get","listarEmbarcacoesPorCliente","IDCliente","consultarEmbarcacao","IDEmbarcacao","cadastrarEmbarcacao","barco","post","alterarEmbarcacao","put","excluirEmbarcacao","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\front-embarcacao.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport { Embarcacao } from '../model/embarcacao';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FrontEmbarcacaoService {\r\n\r\n  private url = \"http://localhost:8080/cembarcacao/embarcacao\";\r\n  private url2 = \"http://localhost:8080/cembarcacao/cliente\";\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  //Listar Embarcacoes a partir do metodo API REST que tem na URL acima\r\n  listarEmbarcacoes(): Observable<Embarcacao[]>{\r\n    return this.httpClient.get<Embarcacao[]>(`${this.url}`)\r\n  }\r\n\r\n  listarEmbarcacoesPorCliente(IDCliente: number): Observable<Embarcacao[]>{\r\n    return this.httpClient.get<Embarcacao[]>(`${this.url2}/${IDCliente}`)\r\n  }\r\n\r\n  //Serviço para consulta da embarcacao\r\n  consultarEmbarcacao(IDEmbarcacao: number): Observable<Embarcacao>{\r\n    return this.httpClient.get<Embarcacao>(`${this.url}/${IDEmbarcacao}`);\r\n  }\r\n\r\n  //Servico para incluir uma embarcacao\r\n  cadastrarEmbarcacao(barco: Embarcacao): Observable<object>{\r\n    return this.httpClient.post(`${this.url}`, barco);\r\n  }\r\n\r\n  //Servico para Alterar uma Embarcacao\r\n  alterarEmbarcacao(IDEmbarcacao: number, barco: Embarcacao): Observable<Object>{\r\n        return this.httpClient.put(`${this.url}/${IDEmbarcacao}`, barco);\r\n  }\r\n\r\n  //Servico para Excluir uma Embarcacao\r\n  excluirEmbarcacao(IDEmbarcacao: number): Observable<Object>{\r\n    return this.httpClient.delete<Embarcacao>(`${this.url}/${IDEmbarcacao}`);\r\n  }\r\n\r\n}\r\n"],"mappings":";;AASA,OAAM,MAAOA,sBAAsB;EAKjCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHtB,KAAAC,GAAG,GAAG,8CAA8C;IACpD,KAAAC,IAAI,GAAG,2CAA2C;EAEZ;EAE9C;EACAC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAe,GAAG,IAAI,CAACH,GAAG,EAAE,CAAC;EACzD;EAEAI,2BAA2BA,CAACC,SAAiB;IAC3C,OAAO,IAAI,CAACN,UAAU,CAACI,GAAG,CAAe,GAAG,IAAI,CAACF,IAAI,IAAII,SAAS,EAAE,CAAC;EACvE;EAEA;EACAC,mBAAmBA,CAACC,YAAoB;IACtC,OAAO,IAAI,CAACR,UAAU,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,GAAG,IAAIO,YAAY,EAAE,CAAC;EACvE;EAEA;EACAC,mBAAmBA,CAACC,KAAiB;IACnC,OAAO,IAAI,CAACV,UAAU,CAACW,IAAI,CAAC,GAAG,IAAI,CAACV,GAAG,EAAE,EAAES,KAAK,CAAC;EACnD;EAEA;EACAE,iBAAiBA,CAACJ,YAAoB,EAAEE,KAAiB;IACnD,OAAO,IAAI,CAACV,UAAU,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,GAAG,IAAIO,YAAY,EAAE,EAAEE,KAAK,CAAC;EACtE;EAEA;EACAI,iBAAiBA,CAACN,YAAoB;IACpC,OAAO,IAAI,CAACR,UAAU,CAACe,MAAM,CAAa,GAAG,IAAI,CAACd,GAAG,IAAIO,YAAY,EAAE,CAAC;EAC1E;EAAC,QAAAQ,CAAA,G;qBAlCUlB,sBAAsB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAtBvB,sBAAsB;IAAAwB,OAAA,EAAtBxB,sBAAsB,CAAAyB,IAAA;IAAAC,UAAA,EAFrB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}