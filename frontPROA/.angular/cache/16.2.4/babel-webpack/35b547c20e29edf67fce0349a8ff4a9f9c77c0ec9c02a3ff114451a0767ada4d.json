{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\n/**\n * From the PDF-A3 specification, section **3.1. Requirements - General**.\n * See:\n * * https://www.pdfa.org/wp-content/uploads/2018/10/PDF20_AN002-AF.pdf\n */\nexport var AFRelationship;\n(function (AFRelationship) {\n  AFRelationship[\"Source\"] = \"Source\";\n  AFRelationship[\"Data\"] = \"Data\";\n  AFRelationship[\"Alternative\"] = \"Alternative\";\n  AFRelationship[\"Supplement\"] = \"Supplement\";\n  AFRelationship[\"EncryptedPayload\"] = \"EncryptedPayload\";\n  AFRelationship[\"FormData\"] = \"EncryptedPayload\";\n  AFRelationship[\"Schema\"] = \"Schema\";\n  AFRelationship[\"Unspecified\"] = \"Unspecified\";\n})(AFRelationship || (AFRelationship = {}));\nvar FileEmbedder = /** @class */function () {\n  function FileEmbedder(fileData, fileName, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.fileData = fileData;\n    this.fileName = fileName;\n    this.options = options;\n  }\n  FileEmbedder.for = function (bytes, fileName, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return new FileEmbedder(bytes, fileName, options);\n  };\n  FileEmbedder.prototype.embedIntoContext = function (context, ref) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, mimeType, description, creationDate, modificationDate, afRelationship, embeddedFileStream, embeddedFileStreamRef, fileSpecDict;\n      return __generator(this, function (_b) {\n        _a = this.options, mimeType = _a.mimeType, description = _a.description, creationDate = _a.creationDate, modificationDate = _a.modificationDate, afRelationship = _a.afRelationship;\n        embeddedFileStream = context.flateStream(this.fileData, {\n          Type: 'EmbeddedFile',\n          Subtype: mimeType !== null && mimeType !== void 0 ? mimeType : undefined,\n          Params: {\n            Size: this.fileData.length,\n            CreationDate: creationDate ? PDFString.fromDate(creationDate) : undefined,\n            ModDate: modificationDate ? PDFString.fromDate(modificationDate) : undefined\n          }\n        });\n        embeddedFileStreamRef = context.register(embeddedFileStream);\n        fileSpecDict = context.obj({\n          Type: 'Filespec',\n          F: PDFString.of(this.fileName),\n          UF: PDFHexString.fromText(this.fileName),\n          EF: {\n            F: embeddedFileStreamRef\n          },\n          Desc: description ? PDFHexString.fromText(description) : undefined,\n          AFRelationship: afRelationship !== null && afRelationship !== void 0 ? afRelationship : undefined\n        });\n        if (ref) {\n          context.assign(ref, fileSpecDict);\n          return [2 /*return*/, ref];\n        } else {\n          return [2 /*return*/, context.register(fileSpecDict)];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  return FileEmbedder;\n}();\nexport default FileEmbedder;","map":{"version":3,"names":["__awaiter","__generator","PDFString","PDFHexString","AFRelationship","FileEmbedder","fileData","fileName","options","for","bytes","prototype","embedIntoContext","context","ref","_a","mimeType","description","creationDate","modificationDate","afRelationship","embeddedFileStream","embeddedFileStreamRef","fileSpecDict","_b","flateStream","Type","Subtype","undefined","Params","Size","length","CreationDate","fromDate","ModDate","register","obj","F","of","UF","fromText","EF","Desc","assign"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/embedders/FileEmbedder.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\n/**\n * From the PDF-A3 specification, section **3.1. Requirements - General**.\n * See:\n * * https://www.pdfa.org/wp-content/uploads/2018/10/PDF20_AN002-AF.pdf\n */\nexport var AFRelationship;\n(function (AFRelationship) {\n    AFRelationship[\"Source\"] = \"Source\";\n    AFRelationship[\"Data\"] = \"Data\";\n    AFRelationship[\"Alternative\"] = \"Alternative\";\n    AFRelationship[\"Supplement\"] = \"Supplement\";\n    AFRelationship[\"EncryptedPayload\"] = \"EncryptedPayload\";\n    AFRelationship[\"FormData\"] = \"EncryptedPayload\";\n    AFRelationship[\"Schema\"] = \"Schema\";\n    AFRelationship[\"Unspecified\"] = \"Unspecified\";\n})(AFRelationship || (AFRelationship = {}));\nvar FileEmbedder = /** @class */ (function () {\n    function FileEmbedder(fileData, fileName, options) {\n        if (options === void 0) { options = {}; }\n        this.fileData = fileData;\n        this.fileName = fileName;\n        this.options = options;\n    }\n    FileEmbedder.for = function (bytes, fileName, options) {\n        if (options === void 0) { options = {}; }\n        return new FileEmbedder(bytes, fileName, options);\n    };\n    FileEmbedder.prototype.embedIntoContext = function (context, ref) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, mimeType, description, creationDate, modificationDate, afRelationship, embeddedFileStream, embeddedFileStreamRef, fileSpecDict;\n            return __generator(this, function (_b) {\n                _a = this.options, mimeType = _a.mimeType, description = _a.description, creationDate = _a.creationDate, modificationDate = _a.modificationDate, afRelationship = _a.afRelationship;\n                embeddedFileStream = context.flateStream(this.fileData, {\n                    Type: 'EmbeddedFile',\n                    Subtype: mimeType !== null && mimeType !== void 0 ? mimeType : undefined,\n                    Params: {\n                        Size: this.fileData.length,\n                        CreationDate: creationDate\n                            ? PDFString.fromDate(creationDate)\n                            : undefined,\n                        ModDate: modificationDate\n                            ? PDFString.fromDate(modificationDate)\n                            : undefined,\n                    },\n                });\n                embeddedFileStreamRef = context.register(embeddedFileStream);\n                fileSpecDict = context.obj({\n                    Type: 'Filespec',\n                    F: PDFString.of(this.fileName),\n                    UF: PDFHexString.fromText(this.fileName),\n                    EF: { F: embeddedFileStreamRef },\n                    Desc: description ? PDFHexString.fromText(description) : undefined,\n                    AFRelationship: afRelationship !== null && afRelationship !== void 0 ? afRelationship : undefined,\n                });\n                if (ref) {\n                    context.assign(ref, fileSpecDict);\n                    return [2 /*return*/, ref];\n                }\n                else {\n                    return [2 /*return*/, context.register(fileSpecDict)];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    return FileEmbedder;\n}());\nexport default FileEmbedder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}