{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ListarClienteComponent = class ListarClienteComponent {\n  constructor(ClienteService, router, serviceCpfCnpj) {\n    this.ClienteService = ClienteService;\n    this.router = router;\n    this.serviceCpfCnpj = serviceCpfCnpj;\n    this.cpf = '';\n    this.mensagemErro = '';\n  }\n  ngOnInit() {}\n  consultarClientePorCPFCNPJ() {\n    if (this.serviceCpfCnpj.validarCpfCnpj(this.cpf)) {\n      const cpfcnpj = this.cpf.replace(/[^\\d]+/g, '');\n      this.ClienteService.consultarClienteCPFCNPJ(cpfcnpj).subscribe(cliente => {\n        if (cliente) {\n          this.cliente = cliente;\n          this.mensagemErro = '';\n        }\n      }, error => {\n        console.error(error);\n        this.mensagemErro = 'Cliente não localizado!';\n        this.cliente = null;\n      });\n    } else {\n      //Exibe a mensagem de erro se o CPF/CNPJ for inválido\n      this.mensagemErro = 'CPF ou CNPJ inválido!';\n      this.cliente = null;\n    }\n  }\n  alterarCliente(codigo) {\n    this.router.navigate(['cliente/alterar-cliente', codigo]);\n  }\n  cadastrarCliente() {\n    this.router.navigate(['cliente/cadastrar-cliente']);\n  }\n  consultarCliente(codigo) {\n    this.router.navigate(['cliente/consultar-cliente', codigo]);\n  }\n  excluirCliente(codigo) {\n    if (confirm(\"Deseja Excluir o Cliente?\")) {\n      this.ClienteService.excluirCliente(codigo).subscribe(data => {\n        console.log(data);\n        this.cliente = null;\n        this.cpf = '';\n      });\n    }\n  }\n  limparDados(form) {\n    if (form) {\n      form.resetForm();\n    }\n    this.cpf = '';\n    this.cliente = null;\n    this.mensagemErro = '';\n  }\n};\nListarClienteComponent = __decorate([Component({\n  selector: 'app-listar-cliente',\n  templateUrl: './listar-cliente.component.html',\n  styleUrls: ['./listar-cliente.component.css']\n})], ListarClienteComponent);","map":{"version":3,"names":["Component","ListarClienteComponent","constructor","ClienteService","router","serviceCpfCnpj","cpf","mensagemErro","ngOnInit","consultarClientePorCPFCNPJ","validarCpfCnpj","cpfcnpj","replace","consultarClienteCPFCNPJ","subscribe","cliente","error","console","alterarCliente","codigo","navigate","cadastrarCliente","consultarCliente","excluirCliente","confirm","data","log","limparDados","form","resetForm","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\PROA\\frontPROA\\src\\app\\cliente\\listarcliente\\listar-cliente.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Cliente } from 'src/app/model/cliente';\r\nimport { FrontClienteService } from 'src/app/services/front-cliente.service';\r\nimport { ValidadorcpfcnpjService } from 'src/app/services/validacao/validadorcpfcnpj.service';\r\n\r\n@Component({\r\n  selector: 'app-listar-cliente',\r\n  templateUrl: './listar-cliente.component.html',\r\n  styleUrls: ['./listar-cliente.component.css']\r\n})\r\nexport class ListarClienteComponent implements OnInit {\r\n\r\n  Clientes!: Cliente[];\r\n  cpf: string = '';\r\n  cliente!: Cliente | null;\r\n  mensagemErro: string = '';\r\n\r\n  constructor(private ClienteService: FrontClienteService, private router: Router, private serviceCpfCnpj: ValidadorcpfcnpjService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n\r\n\r\n  consultarClientePorCPFCNPJ() {\r\n    if (this.serviceCpfCnpj.validarCpfCnpj(this.cpf)) {\r\n      const cpfcnpj = this.cpf.replace(/[^\\d]+/g, '');\r\n      this.ClienteService.consultarClienteCPFCNPJ(cpfcnpj).subscribe(cliente => {\r\n        if (cliente) {\r\n          this.cliente = cliente;\r\n          this.mensagemErro = '';\r\n        }\r\n      }, error => {\r\n        console.error(error);\r\n        this.mensagemErro = 'Cliente não localizado!';\r\n        this.cliente = null;\r\n      });\r\n    }else {\r\n      //Exibe a mensagem de erro se o CPF/CNPJ for inválido\r\n      this.mensagemErro = 'CPF ou CNPJ inválido!';\r\n      this.cliente = null;\r\n    }\r\n  }\r\n\r\n  alterarCliente(codigo: number) {\r\n    this.router.navigate(['cliente/alterar-cliente', codigo]);\r\n  }\r\n\r\n  cadastrarCliente() {\r\n    this.router.navigate(['cliente/cadastrar-cliente']);\r\n  }\r\n\r\n  consultarCliente(codigo: number) {\r\n    this.router.navigate(['cliente/consultar-cliente', codigo]);\r\n  }\r\n\r\n  excluirCliente(codigo: number) {\r\n    if (confirm(\"Deseja Excluir o Cliente?\")) {\r\n      this.ClienteService.excluirCliente(codigo).subscribe(data => {\r\n        console.log(data);\r\n        this.cliente = null;\r\n        this.cpf = '';\r\n      });\r\n    }\r\n  }\r\n\r\n  limparDados(form?: NgForm) {\r\n    if (form) {\r\n      form.resetForm();\r\n    }\r\n    this.cpf = '';\r\n    this.cliente = null;\r\n    this.mensagemErro = '';\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAOjCC,YAAoBC,cAAmC,EAAUC,MAAc,EAAUC,cAAuC;IAA5G,KAAAF,cAAc,GAAdA,cAAc;IAA+B,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,cAAc,GAAdA,cAAc;IAJvG,KAAAC,GAAG,GAAW,EAAE;IAEhB,KAAAC,YAAY,GAAW,EAAE;EAE2G;EAEpIC,QAAQA,CAAA,GAAW;EAInBC,0BAA0BA,CAAA;IACxB,IAAI,IAAI,CAACJ,cAAc,CAACK,cAAc,CAAC,IAAI,CAACJ,GAAG,CAAC,EAAE;MAChD,MAAMK,OAAO,GAAG,IAAI,CAACL,GAAG,CAACM,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;MAC/C,IAAI,CAACT,cAAc,CAACU,uBAAuB,CAACF,OAAO,CAAC,CAACG,SAAS,CAACC,OAAO,IAAG;QACvE,IAAIA,OAAO,EAAE;UACX,IAAI,CAACA,OAAO,GAAGA,OAAO;UACtB,IAAI,CAACR,YAAY,GAAG,EAAE;;MAE1B,CAAC,EAAES,KAAK,IAAG;QACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,IAAI,CAACT,YAAY,GAAG,yBAAyB;QAC7C,IAAI,CAACQ,OAAO,GAAG,IAAI;MACrB,CAAC,CAAC;KACH,MAAK;MACJ;MACA,IAAI,CAACR,YAAY,GAAG,uBAAuB;MAC3C,IAAI,CAACQ,OAAO,GAAG,IAAI;;EAEvB;EAEAG,cAAcA,CAACC,MAAc;IAC3B,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,yBAAyB,EAAED,MAAM,CAAC,CAAC;EAC3D;EAEAE,gBAAgBA,CAAA;IACd,IAAI,CAACjB,MAAM,CAACgB,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC;EACrD;EAEAE,gBAAgBA,CAACH,MAAc;IAC7B,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,2BAA2B,EAAED,MAAM,CAAC,CAAC;EAC7D;EAEAI,cAAcA,CAACJ,MAAc;IAC3B,IAAIK,OAAO,CAAC,2BAA2B,CAAC,EAAE;MACxC,IAAI,CAACrB,cAAc,CAACoB,cAAc,CAACJ,MAAM,CAAC,CAACL,SAAS,CAACW,IAAI,IAAG;QAC1DR,OAAO,CAACS,GAAG,CAACD,IAAI,CAAC;QACjB,IAAI,CAACV,OAAO,GAAG,IAAI;QACnB,IAAI,CAACT,GAAG,GAAG,EAAE;MACf,CAAC,CAAC;;EAEN;EAEAqB,WAAWA,CAACC,IAAa;IACvB,IAAIA,IAAI,EAAE;MACRA,IAAI,CAACC,SAAS,EAAE;;IAElB,IAAI,CAACvB,GAAG,GAAG,EAAE;IACb,IAAI,CAACS,OAAO,GAAG,IAAI;IACnB,IAAI,CAACR,YAAY,GAAG,EAAE;EACxB;CACD;AA/DYN,sBAAsB,GAAA6B,UAAA,EALlC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWhC,sBAAsB,CA+DlC"},"metadata":{},"sourceType":"module","externalDependencies":[]}