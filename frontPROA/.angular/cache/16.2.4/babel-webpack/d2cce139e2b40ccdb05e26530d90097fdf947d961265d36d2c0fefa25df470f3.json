{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FrontPrestadorService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://3.214.105.13:8080/cprestador/prestador';\n  }\n  listarPrestador() {\n    return this.httpClient.get(`${this.url}`);\n  }\n  //Serviço para consulta da prestador\n  consultarPrestador(idPrestador) {\n    return this.httpClient.get(`${this.url}/${idPrestador}`);\n  }\n  incluirPrestador(prestador) {\n    return this.httpClient.post(`${this.url}`, prestador);\n  }\n  alterarPrestador(IDPrestador, prestador) {\n    return this.httpClient.put(`${this.url}/${IDPrestador}`, prestador);\n  }\n  excluirPrestador(IDPrestador) {\n    return this.httpClient.delete(`${this.url}/${IDPrestador}`);\n  }\n  static #_ = this.ɵfac = function FrontPrestadorService_Factory(t) {\n    return new (t || FrontPrestadorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FrontPrestadorService,\n    factory: FrontPrestadorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FrontPrestadorService","constructor","httpClient","url","listarPrestador","get","consultarPrestador","idPrestador","incluirPrestador","prestador","post","alterarPrestador","IDPrestador","put","excluirPrestador","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\PROA\\frontPROA\\src\\app\\services\\front-prestador.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Prestador } from '../model/prestador';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FrontPrestadorService {\r\n  private url = 'http://3.214.105.13:8080/cprestador/prestador'; \r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  listarPrestador(): Observable<Prestador[]>{\r\n    return this.httpClient.get<Prestador[]>(`${this.url}`)\r\n  }\r\n\r\n  //Serviço para consulta da prestador\r\n  consultarPrestador (idPrestador: number): Observable<Prestador>{\r\n    \r\n    return this.httpClient.get<Prestador>(`${this.url}/${idPrestador}`)\r\n  }\r\n\r\n\r\n  incluirPrestador(prestador: Prestador): Observable<object>{\r\n    return this.httpClient.post(`${this.url}`, prestador);\r\n  }\r\n\r\n\r\n  alterarPrestador(IDPrestador: number, prestador: Prestador): Observable<object>{\r\n    return this.httpClient.put(`${this.url}/${IDPrestador}`, prestador);\r\n  }\r\n\r\n\r\n  excluirPrestador(IDPrestador: number): Observable<Object>{\r\n    return this.httpClient.delete<Prestador>(`${this.url}/${IDPrestador}`);\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,qBAAqB;EAGhCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,GAAG,GAAG,+CAA+C;EAEf;EAE9CC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,GAAG,EAAE,CAAC;EACxD;EAEA;EACAG,kBAAkBA,CAAEC,WAAmB;IAErC,OAAO,IAAI,CAACL,UAAU,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,GAAG,IAAII,WAAW,EAAE,CAAC;EACrE;EAGAC,gBAAgBA,CAACC,SAAoB;IACnC,OAAO,IAAI,CAACP,UAAU,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,EAAE,EAAEM,SAAS,CAAC;EACvD;EAGAE,gBAAgBA,CAACC,WAAmB,EAAEH,SAAoB;IACxD,OAAO,IAAI,CAACP,UAAU,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,GAAG,IAAIS,WAAW,EAAE,EAAEH,SAAS,CAAC;EACrE;EAGAK,gBAAgBA,CAACF,WAAmB;IAClC,OAAO,IAAI,CAACV,UAAU,CAACa,MAAM,CAAY,GAAG,IAAI,CAACZ,GAAG,IAAIS,WAAW,EAAE,CAAC;EACxE;EAAC,QAAAI,CAAA,G;qBA5BUhB,qBAAqB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBrB,qBAAqB;IAAAsB,OAAA,EAArBtB,qBAAqB,CAAAuB,IAAA;IAAAC,UAAA,EAFpB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}