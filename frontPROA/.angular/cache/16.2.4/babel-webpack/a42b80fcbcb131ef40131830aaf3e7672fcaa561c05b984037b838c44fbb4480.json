{"ast":null,"code":"// Originated from pdfkit Copyright (c) 2014 Devon Govett\n// https://github.com/foliojs/pdfkit/blob/1e62e6ffe24b378eb890df507a47610f4c4a7b24/lib/path.js\n// MIT LICENSE\n// Updated for pdf-lib & TypeScript by Jeremy Messenger\nimport { appendBezierCurve, appendQuadraticCurve, closePath, lineTo, moveTo } from \"./operators\";\nvar cx = 0;\nvar cy = 0;\nvar px = 0;\nvar py = 0;\nvar sx = 0;\nvar sy = 0;\nvar parameters = new Map([['A', 7], ['a', 7], ['C', 6], ['c', 6], ['H', 1], ['h', 1], ['L', 2], ['l', 2], ['M', 2], ['m', 2], ['Q', 4], ['q', 4], ['S', 4], ['s', 4], ['T', 2], ['t', 2], ['V', 1], ['v', 1], ['Z', 0], ['z', 0]]);\nvar parse = function (path) {\n  var cmd;\n  var ret = [];\n  var args = [];\n  var curArg = '';\n  var foundDecimal = false;\n  var params = 0;\n  for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n    var c = path_1[_i];\n    if (parameters.has(c)) {\n      params = parameters.get(c);\n      if (cmd) {\n        // save existing command\n        if (curArg.length > 0) {\n          args[args.length] = +curArg;\n        }\n        ret[ret.length] = {\n          cmd: cmd,\n          args: args\n        };\n        args = [];\n        curArg = '';\n        foundDecimal = false;\n      }\n      cmd = c;\n    } else if ([' ', ','].includes(c) || c === '-' && curArg.length > 0 && curArg[curArg.length - 1] !== 'e' || c === '.' && foundDecimal) {\n      if (curArg.length === 0) {\n        continue;\n      }\n      if (args.length === params) {\n        // handle reused commands\n        ret[ret.length] = {\n          cmd: cmd,\n          args: args\n        };\n        args = [+curArg];\n        // handle assumed commands\n        if (cmd === 'M') {\n          cmd = 'L';\n        }\n        if (cmd === 'm') {\n          cmd = 'l';\n        }\n      } else {\n        args[args.length] = +curArg;\n      }\n      foundDecimal = c === '.';\n      // fix for negative numbers or repeated decimals with no delimeter between commands\n      curArg = ['-', '.'].includes(c) ? c : '';\n    } else {\n      curArg += c;\n      if (c === '.') {\n        foundDecimal = true;\n      }\n    }\n  }\n  // add the last command\n  if (curArg.length > 0) {\n    if (args.length === params) {\n      // handle reused commands\n      ret[ret.length] = {\n        cmd: cmd,\n        args: args\n      };\n      args = [+curArg];\n      // handle assumed commands\n      if (cmd === 'M') {\n        cmd = 'L';\n      }\n      if (cmd === 'm') {\n        cmd = 'l';\n      }\n    } else {\n      args[args.length] = +curArg;\n    }\n  }\n  ret[ret.length] = {\n    cmd: cmd,\n    args: args\n  };\n  return ret;\n};\nvar apply = function (commands) {\n  // current point, control point, and subpath starting point\n  cx = cy = px = py = sx = sy = 0;\n  // run the commands\n  var cmds = [];\n  for (var i = 0; i < commands.length; i++) {\n    var c = commands[i];\n    if (c.cmd && typeof runners[c.cmd] === 'function') {\n      var cmd = runners[c.cmd](c.args);\n      if (Array.isArray(cmd)) {\n        cmds = cmds.concat(cmd);\n      } else {\n        cmds.push(cmd);\n      }\n    }\n  }\n  return cmds;\n};\nvar runners = {\n  M: function (a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return moveTo(cx, cy);\n  },\n  m: function (a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return moveTo(cx, cy);\n  },\n  C: function (a) {\n    cx = a[4];\n    cy = a[5];\n    px = a[2];\n    py = a[3];\n    return appendBezierCurve(a[0], a[1], a[2], a[3], a[4], a[5]);\n  },\n  c: function (a) {\n    var cmd = appendBezierCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n    px = cx + a[2];\n    py = cy + a[3];\n    cx += a[4];\n    cy += a[5];\n    return cmd;\n  },\n  S: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    }\n    var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    cy = a[3];\n    return cmd;\n  },\n  s: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    }\n    var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    cy += a[3];\n    return cmd;\n  },\n  Q: function (a) {\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    cy = a[3];\n    return appendQuadraticCurve(a[0], a[1], cx, cy);\n  },\n  q: function (a) {\n    var cmd = appendQuadraticCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    cy += a[3];\n    return cmd;\n  },\n  T: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n    var cmd = appendQuadraticCurve(px, py, a[0], a[1]);\n    px = cx - (px - cx);\n    py = cy - (py - cy);\n    cx = a[0];\n    cy = a[1];\n    return cmd;\n  },\n  t: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n    var cmd = appendQuadraticCurve(px, py, cx + a[0], cy + a[1]);\n    cx += a[0];\n    cy += a[1];\n    return cmd;\n  },\n  A: function (a) {\n    var cmds = solveArc(cx, cy, a);\n    cx = a[5];\n    cy = a[6];\n    return cmds;\n  },\n  a: function (a) {\n    a[5] += cx;\n    a[6] += cy;\n    var cmds = solveArc(cx, cy, a);\n    cx = a[5];\n    cy = a[6];\n    return cmds;\n  },\n  L: function (a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  l: function (a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  H: function (a) {\n    cx = a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  h: function (a) {\n    cx += a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  V: function (a) {\n    cy = a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  v: function (a) {\n    cy += a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  Z: function () {\n    var cmd = closePath();\n    cx = sx;\n    cy = sy;\n    return cmd;\n  },\n  z: function () {\n    var cmd = closePath();\n    cx = sx;\n    cy = sy;\n    return cmd;\n  }\n};\nvar solveArc = function (x, y, coords) {\n  var rx = coords[0],\n    ry = coords[1],\n    rot = coords[2],\n    large = coords[3],\n    sweep = coords[4],\n    ex = coords[5],\n    ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  var cmds = [];\n  for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n    var seg = segs_1[_i];\n    var bez = segmentToBezier.apply(void 0, seg);\n    cmds.push(appendBezierCurve.apply(void 0, bez));\n  }\n  return cmds;\n};\n// from Inkscape svgtopdf, thanks!\nvar arcToSegments = function (x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  var th = rotateX * (Math.PI / 180);\n  var sinTh = Math.sin(th);\n  var cosTh = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  px = cosTh * (ox - x) * 0.5 + sinTh * (oy - y) * 0.5;\n  py = cosTh * (oy - y) * 0.5 - sinTh * (ox - x) * 0.5;\n  var pl = px * px / (rx * rx) + py * py / (ry * ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n  var a00 = cosTh / rx;\n  var a01 = sinTh / rx;\n  var a10 = -sinTh / ry;\n  var a11 = cosTh / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n  var d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n  var sfactorSq = 1 / d - 0.25;\n  if (sfactorSq < 0) {\n    sfactorSq = 0;\n  }\n  var sfactor = Math.sqrt(sfactorSq);\n  if (sweep === large) {\n    sfactor = -sfactor;\n  }\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n  var th0 = Math.atan2(y0 - yc, x0 - xc);\n  var th1 = Math.atan2(y1 - yc, x1 - xc);\n  var thArc = th1 - th0;\n  if (thArc < 0 && sweep === 1) {\n    thArc += 2 * Math.PI;\n  } else if (thArc > 0 && sweep === 0) {\n    thArc -= 2 * Math.PI;\n  }\n  var segments = Math.ceil(Math.abs(thArc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i = 0; i < segments; i++) {\n    var th2 = th0 + i * thArc / segments;\n    var th3 = th0 + (i + 1) * thArc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sinTh, cosTh];\n  }\n  return result;\n};\nvar segmentToBezier = function (cx1, cy1, th0, th1, rx, ry, sinTh, cosTh) {\n  var a00 = cosTh * rx;\n  var a01 = -sinTh * ry;\n  var a10 = sinTh * rx;\n  var a11 = cosTh * ry;\n  var thHalf = 0.5 * (th1 - th0);\n  var t = 8 / 3 * Math.sin(thHalf * 0.5) * Math.sin(thHalf * 0.5) / Math.sin(thHalf);\n  var x1 = cx1 + Math.cos(th0) - t * Math.sin(th0);\n  var y1 = cy1 + Math.sin(th0) + t * Math.cos(th0);\n  var x3 = cx1 + Math.cos(th1);\n  var y3 = cy1 + Math.sin(th1);\n  var x2 = x3 + t * Math.sin(th1);\n  var y2 = y3 - t * Math.cos(th1);\n  var result = [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];\n  return result;\n};\nexport var svgPathToOperators = function (path) {\n  return apply(parse(path));\n};","map":{"version":3,"names":["appendBezierCurve","appendQuadraticCurve","closePath","lineTo","moveTo","cx","cy","px","py","sx","sy","parameters","Map","parse","path","cmd","ret","args","curArg","foundDecimal","params","_i","path_1","length","c","has","get","includes","apply","commands","cmds","i","runners","Array","isArray","concat","push","M","a","m","C","S","s","Q","q","T","t","A","solveArc","L","l","H","h","V","v","Z","z","x","y","coords","rx","ry","rot","large","sweep","ex","ey","segs","arcToSegments","segs_1","seg","bez","segmentToBezier","rotateX","ox","oy","th","Math","PI","sinTh","sin","cosTh","cos","abs","pl","sqrt","a00","a01","a10","a11","x0","y0","x1","y1","d","sfactorSq","sfactor","xc","yc","th0","atan2","th1","thArc","segments","ceil","result","th2","th3","cx1","cy1","thHalf","x3","y3","x2","y2","svgPathToOperators"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/api/svgPath.js"],"sourcesContent":["// Originated from pdfkit Copyright (c) 2014 Devon Govett\n// https://github.com/foliojs/pdfkit/blob/1e62e6ffe24b378eb890df507a47610f4c4a7b24/lib/path.js\n// MIT LICENSE\n// Updated for pdf-lib & TypeScript by Jeremy Messenger\nimport { appendBezierCurve, appendQuadraticCurve, closePath, lineTo, moveTo, } from \"./operators\";\nvar cx = 0;\nvar cy = 0;\nvar px = 0;\nvar py = 0;\nvar sx = 0;\nvar sy = 0;\nvar parameters = new Map([\n    ['A', 7],\n    ['a', 7],\n    ['C', 6],\n    ['c', 6],\n    ['H', 1],\n    ['h', 1],\n    ['L', 2],\n    ['l', 2],\n    ['M', 2],\n    ['m', 2],\n    ['Q', 4],\n    ['q', 4],\n    ['S', 4],\n    ['s', 4],\n    ['T', 2],\n    ['t', 2],\n    ['V', 1],\n    ['v', 1],\n    ['Z', 0],\n    ['z', 0],\n]);\nvar parse = function (path) {\n    var cmd;\n    var ret = [];\n    var args = [];\n    var curArg = '';\n    var foundDecimal = false;\n    var params = 0;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var c = path_1[_i];\n        if (parameters.has(c)) {\n            params = parameters.get(c);\n            if (cmd) {\n                // save existing command\n                if (curArg.length > 0) {\n                    args[args.length] = +curArg;\n                }\n                ret[ret.length] = { cmd: cmd, args: args };\n                args = [];\n                curArg = '';\n                foundDecimal = false;\n            }\n            cmd = c;\n        }\n        else if ([' ', ','].includes(c) ||\n            (c === '-' && curArg.length > 0 && curArg[curArg.length - 1] !== 'e') ||\n            (c === '.' && foundDecimal)) {\n            if (curArg.length === 0) {\n                continue;\n            }\n            if (args.length === params) {\n                // handle reused commands\n                ret[ret.length] = { cmd: cmd, args: args };\n                args = [+curArg];\n                // handle assumed commands\n                if (cmd === 'M') {\n                    cmd = 'L';\n                }\n                if (cmd === 'm') {\n                    cmd = 'l';\n                }\n            }\n            else {\n                args[args.length] = +curArg;\n            }\n            foundDecimal = c === '.';\n            // fix for negative numbers or repeated decimals with no delimeter between commands\n            curArg = ['-', '.'].includes(c) ? c : '';\n        }\n        else {\n            curArg += c;\n            if (c === '.') {\n                foundDecimal = true;\n            }\n        }\n    }\n    // add the last command\n    if (curArg.length > 0) {\n        if (args.length === params) {\n            // handle reused commands\n            ret[ret.length] = { cmd: cmd, args: args };\n            args = [+curArg];\n            // handle assumed commands\n            if (cmd === 'M') {\n                cmd = 'L';\n            }\n            if (cmd === 'm') {\n                cmd = 'l';\n            }\n        }\n        else {\n            args[args.length] = +curArg;\n        }\n    }\n    ret[ret.length] = { cmd: cmd, args: args };\n    return ret;\n};\nvar apply = function (commands) {\n    // current point, control point, and subpath starting point\n    cx = cy = px = py = sx = sy = 0;\n    // run the commands\n    var cmds = [];\n    for (var i = 0; i < commands.length; i++) {\n        var c = commands[i];\n        if (c.cmd && typeof runners[c.cmd] === 'function') {\n            var cmd = runners[c.cmd](c.args);\n            if (Array.isArray(cmd)) {\n                cmds = cmds.concat(cmd);\n            }\n            else {\n                cmds.push(cmd);\n            }\n        }\n    }\n    return cmds;\n};\nvar runners = {\n    M: function (a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return moveTo(cx, cy);\n    },\n    m: function (a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return moveTo(cx, cy);\n    },\n    C: function (a) {\n        cx = a[4];\n        cy = a[5];\n        px = a[2];\n        py = a[3];\n        return appendBezierCurve(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    c: function (a) {\n        var cmd = appendBezierCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n        px = cx + a[2];\n        py = cy + a[3];\n        cx += a[4];\n        cy += a[5];\n        return cmd;\n    },\n    S: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        cy = a[3];\n        return cmd;\n    },\n    s: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        cy += a[3];\n        return cmd;\n    },\n    Q: function (a) {\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        cy = a[3];\n        return appendQuadraticCurve(a[0], a[1], cx, cy);\n    },\n    q: function (a) {\n        var cmd = appendQuadraticCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        cy += a[3];\n        return cmd;\n    },\n    T: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        else {\n            px = cx - (px - cx);\n            py = cy - (py - cy);\n        }\n        var cmd = appendQuadraticCurve(px, py, a[0], a[1]);\n        px = cx - (px - cx);\n        py = cy - (py - cy);\n        cx = a[0];\n        cy = a[1];\n        return cmd;\n    },\n    t: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        else {\n            px = cx - (px - cx);\n            py = cy - (py - cy);\n        }\n        var cmd = appendQuadraticCurve(px, py, cx + a[0], cy + a[1]);\n        cx += a[0];\n        cy += a[1];\n        return cmd;\n    },\n    A: function (a) {\n        var cmds = solveArc(cx, cy, a);\n        cx = a[5];\n        cy = a[6];\n        return cmds;\n    },\n    a: function (a) {\n        a[5] += cx;\n        a[6] += cy;\n        var cmds = solveArc(cx, cy, a);\n        cx = a[5];\n        cy = a[6];\n        return cmds;\n    },\n    L: function (a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    l: function (a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    H: function (a) {\n        cx = a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    h: function (a) {\n        cx += a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    V: function (a) {\n        cy = a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    v: function (a) {\n        cy += a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    Z: function () {\n        var cmd = closePath();\n        cx = sx;\n        cy = sy;\n        return cmd;\n    },\n    z: function () {\n        var cmd = closePath();\n        cx = sx;\n        cy = sy;\n        return cmd;\n    },\n};\nvar solveArc = function (x, y, coords) {\n    var rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], ex = coords[5], ey = coords[6];\n    var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n    var cmds = [];\n    for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        var bez = segmentToBezier.apply(void 0, seg);\n        cmds.push(appendBezierCurve.apply(void 0, bez));\n    }\n    return cmds;\n};\n// from Inkscape svgtopdf, thanks!\nvar arcToSegments = function (x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n    var th = rotateX * (Math.PI / 180);\n    var sinTh = Math.sin(th);\n    var cosTh = Math.cos(th);\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    px = cosTh * (ox - x) * 0.5 + sinTh * (oy - y) * 0.5;\n    py = cosTh * (oy - y) * 0.5 - sinTh * (ox - x) * 0.5;\n    var pl = (px * px) / (rx * rx) + (py * py) / (ry * ry);\n    if (pl > 1) {\n        pl = Math.sqrt(pl);\n        rx *= pl;\n        ry *= pl;\n    }\n    var a00 = cosTh / rx;\n    var a01 = sinTh / rx;\n    var a10 = -sinTh / ry;\n    var a11 = cosTh / ry;\n    var x0 = a00 * ox + a01 * oy;\n    var y0 = a10 * ox + a11 * oy;\n    var x1 = a00 * x + a01 * y;\n    var y1 = a10 * x + a11 * y;\n    var d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n    var sfactorSq = 1 / d - 0.25;\n    if (sfactorSq < 0) {\n        sfactorSq = 0;\n    }\n    var sfactor = Math.sqrt(sfactorSq);\n    if (sweep === large) {\n        sfactor = -sfactor;\n    }\n    var xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n    var yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n    var th0 = Math.atan2(y0 - yc, x0 - xc);\n    var th1 = Math.atan2(y1 - yc, x1 - xc);\n    var thArc = th1 - th0;\n    if (thArc < 0 && sweep === 1) {\n        thArc += 2 * Math.PI;\n    }\n    else if (thArc > 0 && sweep === 0) {\n        thArc -= 2 * Math.PI;\n    }\n    var segments = Math.ceil(Math.abs(thArc / (Math.PI * 0.5 + 0.001)));\n    var result = [];\n    for (var i = 0; i < segments; i++) {\n        var th2 = th0 + (i * thArc) / segments;\n        var th3 = th0 + ((i + 1) * thArc) / segments;\n        result[i] = [xc, yc, th2, th3, rx, ry, sinTh, cosTh];\n    }\n    return result;\n};\nvar segmentToBezier = function (cx1, cy1, th0, th1, rx, ry, sinTh, cosTh) {\n    var a00 = cosTh * rx;\n    var a01 = -sinTh * ry;\n    var a10 = sinTh * rx;\n    var a11 = cosTh * ry;\n    var thHalf = 0.5 * (th1 - th0);\n    var t = ((8 / 3) * Math.sin(thHalf * 0.5) * Math.sin(thHalf * 0.5)) /\n        Math.sin(thHalf);\n    var x1 = cx1 + Math.cos(th0) - t * Math.sin(th0);\n    var y1 = cy1 + Math.sin(th0) + t * Math.cos(th0);\n    var x3 = cx1 + Math.cos(th1);\n    var y3 = cy1 + Math.sin(th1);\n    var x2 = x3 + t * Math.sin(th1);\n    var y2 = y3 - t * Math.cos(th1);\n    var result = [\n        a00 * x1 + a01 * y1,\n        a10 * x1 + a11 * y1,\n        a00 * x2 + a01 * y2,\n        a10 * x2 + a11 * y2,\n        a00 * x3 + a01 * y3,\n        a10 * x3 + a11 * y3,\n    ];\n    return result;\n};\nexport var svgPathToOperators = function (path) { return apply(parse(path)); };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}