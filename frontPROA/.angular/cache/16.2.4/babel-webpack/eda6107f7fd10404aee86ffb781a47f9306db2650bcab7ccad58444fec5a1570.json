{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport CustomFontEmbedder from \"./CustomFontEmbedder\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport { Cache, mergeUint8Arrays, toHexStringOfMinLength } from \"../../utils\";\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/devongovett/pdfkit/blob/e71edab0dd4657b5a767804ba86c94c58d01fbca/lib/image/jpeg.coffee\n */\nvar CustomFontSubsetEmbedder = /** @class */function (_super) {\n  __extends(CustomFontSubsetEmbedder, _super);\n  function CustomFontSubsetEmbedder(font, fontData, customFontName, fontFeatures) {\n    var _this = _super.call(this, font, fontData, customFontName, fontFeatures) || this;\n    _this.subset = _this.font.createSubset();\n    _this.glyphs = [];\n    _this.glyphCache = Cache.populatedBy(function () {\n      return _this.glyphs;\n    });\n    _this.glyphIdMap = new Map();\n    return _this;\n  }\n  CustomFontSubsetEmbedder.for = function (fontkit, fontData, customFontName, fontFeatures) {\n    return __awaiter(this, void 0, void 0, function () {\n      var font;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, fontkit.create(fontData)];\n          case 1:\n            font = _a.sent();\n            return [2 /*return*/, new CustomFontSubsetEmbedder(font, fontData, customFontName, fontFeatures)];\n        }\n      });\n    });\n  };\n  CustomFontSubsetEmbedder.prototype.encodeText = function (text) {\n    var glyphs = this.font.layout(text, this.fontFeatures).glyphs;\n    var hexCodes = new Array(glyphs.length);\n    for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n      var glyph = glyphs[idx];\n      var subsetGlyphId = this.subset.includeGlyph(glyph);\n      this.glyphs[subsetGlyphId - 1] = glyph;\n      this.glyphIdMap.set(glyph.id, subsetGlyphId);\n      hexCodes[idx] = toHexStringOfMinLength(subsetGlyphId, 4);\n    }\n    this.glyphCache.invalidate();\n    return PDFHexString.of(hexCodes.join(''));\n  };\n  CustomFontSubsetEmbedder.prototype.isCFF = function () {\n    return this.subset.cff;\n  };\n  CustomFontSubsetEmbedder.prototype.glyphId = function (glyph) {\n    return glyph ? this.glyphIdMap.get(glyph.id) : -1;\n  };\n  CustomFontSubsetEmbedder.prototype.serializeFont = function () {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      var parts = [];\n      _this.subset.encodeStream().on('data', function (bytes) {\n        return parts.push(bytes);\n      }).on('end', function () {\n        return resolve(mergeUint8Arrays(parts));\n      }).on('error', function (err) {\n        return reject(err);\n      });\n    });\n  };\n  return CustomFontSubsetEmbedder;\n}(CustomFontEmbedder);\nexport default CustomFontSubsetEmbedder;","map":{"version":3,"names":["__awaiter","__extends","__generator","CustomFontEmbedder","PDFHexString","Cache","mergeUint8Arrays","toHexStringOfMinLength","CustomFontSubsetEmbedder","_super","font","fontData","customFontName","fontFeatures","_this","call","subset","createSubset","glyphs","glyphCache","populatedBy","glyphIdMap","Map","for","fontkit","_a","label","create","sent","prototype","encodeText","text","layout","hexCodes","Array","length","idx","len","glyph","subsetGlyphId","includeGlyph","set","id","invalidate","of","join","isCFF","cff","glyphId","get","serializeFont","Promise","resolve","reject","parts","encodeStream","on","bytes","push","err"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/embedders/CustomFontSubsetEmbedder.js"],"sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\nimport CustomFontEmbedder from \"./CustomFontEmbedder\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport { Cache, mergeUint8Arrays, toHexStringOfMinLength } from \"../../utils\";\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/devongovett/pdfkit/blob/e71edab0dd4657b5a767804ba86c94c58d01fbca/lib/image/jpeg.coffee\n */\nvar CustomFontSubsetEmbedder = /** @class */ (function (_super) {\n    __extends(CustomFontSubsetEmbedder, _super);\n    function CustomFontSubsetEmbedder(font, fontData, customFontName, fontFeatures) {\n        var _this = _super.call(this, font, fontData, customFontName, fontFeatures) || this;\n        _this.subset = _this.font.createSubset();\n        _this.glyphs = [];\n        _this.glyphCache = Cache.populatedBy(function () { return _this.glyphs; });\n        _this.glyphIdMap = new Map();\n        return _this;\n    }\n    CustomFontSubsetEmbedder.for = function (fontkit, fontData, customFontName, fontFeatures) {\n        return __awaiter(this, void 0, void 0, function () {\n            var font;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, fontkit.create(fontData)];\n                    case 1:\n                        font = _a.sent();\n                        return [2 /*return*/, new CustomFontSubsetEmbedder(font, fontData, customFontName, fontFeatures)];\n                }\n            });\n        });\n    };\n    CustomFontSubsetEmbedder.prototype.encodeText = function (text) {\n        var glyphs = this.font.layout(text, this.fontFeatures).glyphs;\n        var hexCodes = new Array(glyphs.length);\n        for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n            var glyph = glyphs[idx];\n            var subsetGlyphId = this.subset.includeGlyph(glyph);\n            this.glyphs[subsetGlyphId - 1] = glyph;\n            this.glyphIdMap.set(glyph.id, subsetGlyphId);\n            hexCodes[idx] = toHexStringOfMinLength(subsetGlyphId, 4);\n        }\n        this.glyphCache.invalidate();\n        return PDFHexString.of(hexCodes.join(''));\n    };\n    CustomFontSubsetEmbedder.prototype.isCFF = function () {\n        return this.subset.cff;\n    };\n    CustomFontSubsetEmbedder.prototype.glyphId = function (glyph) {\n        return glyph ? this.glyphIdMap.get(glyph.id) : -1;\n    };\n    CustomFontSubsetEmbedder.prototype.serializeFont = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var parts = [];\n            _this.subset\n                .encodeStream()\n                .on('data', function (bytes) { return parts.push(bytes); })\n                .on('end', function () { return resolve(mergeUint8Arrays(parts)); })\n                .on('error', function (err) { return reject(err); });\n        });\n    };\n    return CustomFontSubsetEmbedder;\n}(CustomFontEmbedder));\nexport default CustomFontSubsetEmbedder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}