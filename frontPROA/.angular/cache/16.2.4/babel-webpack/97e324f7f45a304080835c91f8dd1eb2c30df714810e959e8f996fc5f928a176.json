{"ast":null,"code":"/*\n * Copyright 2012 Mozilla Foundation\n *\n * The Stream class contained in this file is a TypeScript port of the\n * JavaScript Stream class in Mozilla's pdf.js project, made available\n * under the Apache 2.0 open source license.\n */\nvar Stream = /** @class */function () {\n  function Stream(buffer, start, length) {\n    this.bytes = buffer;\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = !!start && !!length ? start + length : this.bytes.length;\n  }\n  Object.defineProperty(Stream.prototype, \"length\", {\n    get: function () {\n      return this.end - this.start;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Stream.prototype, \"isEmpty\", {\n    get: function () {\n      return this.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Stream.prototype.getByte = function () {\n    if (this.pos >= this.end) {\n      return -1;\n    }\n    return this.bytes[this.pos++];\n  };\n  Stream.prototype.getUint16 = function () {\n    var b0 = this.getByte();\n    var b1 = this.getByte();\n    if (b0 === -1 || b1 === -1) {\n      return -1;\n    }\n    return (b0 << 8) + b1;\n  };\n  Stream.prototype.getInt32 = function () {\n    var b0 = this.getByte();\n    var b1 = this.getByte();\n    var b2 = this.getByte();\n    var b3 = this.getByte();\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  };\n  // Returns subarray of original buffer, should only be read.\n  Stream.prototype.getBytes = function (length, forceClamped) {\n    if (forceClamped === void 0) {\n      forceClamped = false;\n    }\n    var bytes = this.bytes;\n    var pos = this.pos;\n    var strEnd = this.end;\n    if (!length) {\n      var subarray = bytes.subarray(pos, strEnd);\n      // `this.bytes` is always a `Uint8Array` here.\n      return forceClamped ? new Uint8ClampedArray(subarray) : subarray;\n    } else {\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      var subarray = bytes.subarray(pos, end);\n      // `this.bytes` is always a `Uint8Array` here.\n      return forceClamped ? new Uint8ClampedArray(subarray) : subarray;\n    }\n  };\n  Stream.prototype.peekByte = function () {\n    var peekedByte = this.getByte();\n    this.pos--;\n    return peekedByte;\n  };\n  Stream.prototype.peekBytes = function (length, forceClamped) {\n    if (forceClamped === void 0) {\n      forceClamped = false;\n    }\n    var bytes = this.getBytes(length, forceClamped);\n    this.pos -= bytes.length;\n    return bytes;\n  };\n  Stream.prototype.skip = function (n) {\n    if (!n) {\n      n = 1;\n    }\n    this.pos += n;\n  };\n  Stream.prototype.reset = function () {\n    this.pos = this.start;\n  };\n  Stream.prototype.moveStart = function () {\n    this.start = this.pos;\n  };\n  Stream.prototype.makeSubStream = function (start, length) {\n    return new Stream(this.bytes, start, length);\n  };\n  Stream.prototype.decode = function () {\n    return this.bytes;\n  };\n  return Stream;\n}();\nexport default Stream;","map":{"version":3,"names":["Stream","buffer","start","length","bytes","pos","end","Object","defineProperty","prototype","get","enumerable","configurable","getByte","getUint16","b0","b1","getInt32","b2","b3","getBytes","forceClamped","strEnd","subarray","Uint8ClampedArray","peekByte","peekedByte","peekBytes","skip","n","reset","moveStart","makeSubStream","decode"],"sources":["E:/PROA/frontPROA/node_modules/pdf-lib/es/core/streams/Stream.js"],"sourcesContent":["/*\n * Copyright 2012 Mozilla Foundation\n *\n * The Stream class contained in this file is a TypeScript port of the\n * JavaScript Stream class in Mozilla's pdf.js project, made available\n * under the Apache 2.0 open source license.\n */\nvar Stream = /** @class */ (function () {\n    function Stream(buffer, start, length) {\n        this.bytes = buffer;\n        this.start = start || 0;\n        this.pos = this.start;\n        this.end = !!start && !!length ? start + length : this.bytes.length;\n    }\n    Object.defineProperty(Stream.prototype, \"length\", {\n        get: function () {\n            return this.end - this.start;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Stream.prototype, \"isEmpty\", {\n        get: function () {\n            return this.length === 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Stream.prototype.getByte = function () {\n        if (this.pos >= this.end) {\n            return -1;\n        }\n        return this.bytes[this.pos++];\n    };\n    Stream.prototype.getUint16 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        if (b0 === -1 || b1 === -1) {\n            return -1;\n        }\n        return (b0 << 8) + b1;\n    };\n    Stream.prototype.getInt32 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        var b2 = this.getByte();\n        var b3 = this.getByte();\n        return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    };\n    // Returns subarray of original buffer, should only be read.\n    Stream.prototype.getBytes = function (length, forceClamped) {\n        if (forceClamped === void 0) { forceClamped = false; }\n        var bytes = this.bytes;\n        var pos = this.pos;\n        var strEnd = this.end;\n        if (!length) {\n            var subarray = bytes.subarray(pos, strEnd);\n            // `this.bytes` is always a `Uint8Array` here.\n            return forceClamped ? new Uint8ClampedArray(subarray) : subarray;\n        }\n        else {\n            var end = pos + length;\n            if (end > strEnd) {\n                end = strEnd;\n            }\n            this.pos = end;\n            var subarray = bytes.subarray(pos, end);\n            // `this.bytes` is always a `Uint8Array` here.\n            return forceClamped ? new Uint8ClampedArray(subarray) : subarray;\n        }\n    };\n    Stream.prototype.peekByte = function () {\n        var peekedByte = this.getByte();\n        this.pos--;\n        return peekedByte;\n    };\n    Stream.prototype.peekBytes = function (length, forceClamped) {\n        if (forceClamped === void 0) { forceClamped = false; }\n        var bytes = this.getBytes(length, forceClamped);\n        this.pos -= bytes.length;\n        return bytes;\n    };\n    Stream.prototype.skip = function (n) {\n        if (!n) {\n            n = 1;\n        }\n        this.pos += n;\n    };\n    Stream.prototype.reset = function () {\n        this.pos = this.start;\n    };\n    Stream.prototype.moveStart = function () {\n        this.start = this.pos;\n    };\n    Stream.prototype.makeSubStream = function (start, length) {\n        return new Stream(this.bytes, start, length);\n    };\n    Stream.prototype.decode = function () {\n        return this.bytes;\n    };\n    return Stream;\n}());\nexport default Stream;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}