{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FrontOrgmilitarService = /*#__PURE__*/(() => {\n  class FrontOrgmilitarService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'http://192.168.15.10:8080/corgmilitar/orgmilitar'; // URL do seu backend\n    }\n    // Método para listar todas as OrgMilitar\n    listar() {\n      return this.http.get(this.baseUrl);\n    }\n    // Método para consultar uma OrgMilitar por ID\n    consultar(id) {\n      const url = `${this.baseUrl}/${id}`;\n      return this.http.get(url);\n    }\n    // Método para inserir uma nova OrgMilitar\n    inserir(orgMilitar) {\n      return this.http.post(this.baseUrl, orgMilitar, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      });\n    }\n    // Método para alterar uma OrgMilitar existente\n    alterar(id, orgMilitar) {\n      const url = `${this.baseUrl}/${id}`;\n      return this.http.put(url, orgMilitar, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      });\n    }\n    // Método para excluir uma OrgMilitar por ID\n    excluir(id) {\n      const url = `${this.baseUrl}/${id}`;\n      return this.http.delete(url);\n    }\n    static #_ = this.ɵfac = function FrontOrgmilitarService_Factory(t) {\n      return new (t || FrontOrgmilitarService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FrontOrgmilitarService,\n      factory: FrontOrgmilitarService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return FrontOrgmilitarService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}