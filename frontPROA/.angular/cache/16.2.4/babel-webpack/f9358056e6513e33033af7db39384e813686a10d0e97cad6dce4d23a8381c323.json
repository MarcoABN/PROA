{"ast":null,"code":"// tslint:disable: max-classes-per-file\nimport { __extends } from \"tslib\";\n// TODO: Include link to documentation with example\nvar EncryptedPDFError = /** @class */function (_super) {\n  __extends(EncryptedPDFError, _super);\n  function EncryptedPDFError() {\n    var _this = this;\n    var msg = 'Input document to `PDFDocument.load` is encrypted. You can use `PDFDocument.load(..., { ignoreEncryption: true })` if you wish to load the document anyways.';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return EncryptedPDFError;\n}(Error);\nexport { EncryptedPDFError };\n// TODO: Include link to documentation with example\nvar FontkitNotRegisteredError = /** @class */function (_super) {\n  __extends(FontkitNotRegisteredError, _super);\n  function FontkitNotRegisteredError() {\n    var _this = this;\n    var msg = 'Input to `PDFDocument.embedFont` was a custom font, but no `fontkit` instance was found. You must register a `fontkit` instance with `PDFDocument.registerFontkit(...)` before embedding custom fonts.';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return FontkitNotRegisteredError;\n}(Error);\nexport { FontkitNotRegisteredError };\n// TODO: Include link to documentation with example\nvar ForeignPageError = /** @class */function (_super) {\n  __extends(ForeignPageError, _super);\n  function ForeignPageError() {\n    var _this = this;\n    var msg = 'A `page` passed to `PDFDocument.addPage` or `PDFDocument.insertPage` was from a different (foreign) PDF document. If you want to copy pages from one PDFDocument to another, you must use `PDFDocument.copyPages(...)` to copy the pages before adding or inserting them.';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return ForeignPageError;\n}(Error);\nexport { ForeignPageError };\n// TODO: Include link to documentation with example\nvar RemovePageFromEmptyDocumentError = /** @class */function (_super) {\n  __extends(RemovePageFromEmptyDocumentError, _super);\n  function RemovePageFromEmptyDocumentError() {\n    var _this = this;\n    var msg = 'PDFDocument has no pages so `PDFDocument.removePage` cannot be called';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return RemovePageFromEmptyDocumentError;\n}(Error);\nexport { RemovePageFromEmptyDocumentError };\nvar NoSuchFieldError = /** @class */function (_super) {\n  __extends(NoSuchFieldError, _super);\n  function NoSuchFieldError(name) {\n    var _this = this;\n    var msg = \"PDFDocument has no form field with the name \\\"\" + name + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return NoSuchFieldError;\n}(Error);\nexport { NoSuchFieldError };\nvar UnexpectedFieldTypeError = /** @class */function (_super) {\n  __extends(UnexpectedFieldTypeError, _super);\n  function UnexpectedFieldTypeError(name, expected, actual) {\n    var _a, _b;\n    var _this = this;\n    var expectedType = expected === null || expected === void 0 ? void 0 : expected.name;\n    var actualType = (_b = (_a = actual === null || actual === void 0 ? void 0 : actual.constructor) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : actual;\n    var msg = \"Expected field \\\"\" + name + \"\\\" to be of type \" + expectedType + \", \" + (\"but it is actually of type \" + actualType);\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return UnexpectedFieldTypeError;\n}(Error);\nexport { UnexpectedFieldTypeError };\nvar MissingOnValueCheckError = /** @class */function (_super) {\n  __extends(MissingOnValueCheckError, _super);\n  function MissingOnValueCheckError(onValue) {\n    var _this = this;\n    var msg = \"Failed to select check box due to missing onValue: \\\"\" + onValue + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingOnValueCheckError;\n}(Error);\nexport { MissingOnValueCheckError };\nvar FieldAlreadyExistsError = /** @class */function (_super) {\n  __extends(FieldAlreadyExistsError, _super);\n  function FieldAlreadyExistsError(name) {\n    var _this = this;\n    var msg = \"A field already exists with the specified name: \\\"\" + name + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return FieldAlreadyExistsError;\n}(Error);\nexport { FieldAlreadyExistsError };\nvar InvalidFieldNamePartError = /** @class */function (_super) {\n  __extends(InvalidFieldNamePartError, _super);\n  function InvalidFieldNamePartError(namePart) {\n    var _this = this;\n    var msg = \"Field name contains invalid component: \\\"\" + namePart + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidFieldNamePartError;\n}(Error);\nexport { InvalidFieldNamePartError };\nvar FieldExistsAsNonTerminalError = /** @class */function (_super) {\n  __extends(FieldExistsAsNonTerminalError, _super);\n  function FieldExistsAsNonTerminalError(name) {\n    var _this = this;\n    var msg = \"A non-terminal field already exists with the specified name: \\\"\" + name + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return FieldExistsAsNonTerminalError;\n}(Error);\nexport { FieldExistsAsNonTerminalError };\nvar RichTextFieldReadError = /** @class */function (_super) {\n  __extends(RichTextFieldReadError, _super);\n  function RichTextFieldReadError(fieldName) {\n    var _this = this;\n    var msg = \"Reading rich text fields is not supported: Attempted to read rich text field: \" + fieldName;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return RichTextFieldReadError;\n}(Error);\nexport { RichTextFieldReadError };\nvar CombedTextLayoutError = /** @class */function (_super) {\n  __extends(CombedTextLayoutError, _super);\n  function CombedTextLayoutError(lineLength, cellCount) {\n    var _this = this;\n    var msg = \"Failed to layout combed text as lineLength=\" + lineLength + \" is greater than cellCount=\" + cellCount;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return CombedTextLayoutError;\n}(Error);\nexport { CombedTextLayoutError };\nvar ExceededMaxLengthError = /** @class */function (_super) {\n  __extends(ExceededMaxLengthError, _super);\n  function ExceededMaxLengthError(textLength, maxLength, name) {\n    var _this = this;\n    var msg = \"Attempted to set text with length=\" + textLength + \" for TextField with maxLength=\" + maxLength + \" and name=\" + name;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return ExceededMaxLengthError;\n}(Error);\nexport { ExceededMaxLengthError };\nvar InvalidMaxLengthError = /** @class */function (_super) {\n  __extends(InvalidMaxLengthError, _super);\n  function InvalidMaxLengthError(textLength, maxLength, name) {\n    var _this = this;\n    var msg = \"Attempted to set maxLength=\" + maxLength + \", which is less than \" + textLength + \", the length of this field's current value (name=\" + name + \")\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidMaxLengthError;\n}(Error);\nexport { InvalidMaxLengthError };\n//# sourceMappingURL=errors.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}