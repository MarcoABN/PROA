{"ast":null,"code":"import _asyncToGenerator from \"E:/PROA/frontPROA/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PDFDocument } from 'pdf-lib';\nimport * as i0 from \"@angular/core\";\nexport class Anexo3DService {\n  constructor() {}\n  anexo3D(orgMilitar, construtor, opcao, embarcacao, servico) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const pdfBytes = yield fetch('assets/pdfanexos/Anexo3D-N211.pdf').then(res => res.arrayBuffer());\n        const pdfDoc = yield PDFDocument.load(pdfBytes);\n        const form = pdfDoc.getForm();\n        form.getTextField('orgmilitar').setText(orgMilitar.toUpperCase());\n        form.getTextField('nomeconstrutor').setText(construtor.toUpperCase());\n        form.getTextField('nomeembarcacao').setText(embarcacao.nomeEmbarcacao);\n        form.getTextField('construida_alterada').setText(opcao.toUpperCase());\n        form.getTextField('construida_alterada2').setText(opcao.toUpperCase());\n        form.getTextField('comprimentototal').setText(embarcacao.compTotal.toString());\n        form.getTextField('comprimentoperpend').setText(embarcacao.compPerpendicular.toString());\n        form.getTextField('bocamoldada').setText(embarcacao.bocaMoldada.toString());\n        form.getTextField('pontalmoldado').setText(embarcacao.pontalMoldado.toString());\n        form.getTextField('areanavegacao').setText(embarcacao.areaNavegacao);\n        const hoje = new Date();\n        const dia = hoje.getDate().toString().padStart(2, '0');\n        const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\n        const ano = hoje.getFullYear().toString();\n        switch (mes) {\n          case '01':\n            _this.mesextenso = 'Janeiro';\n            break;\n          case '02':\n            _this.mesextenso = 'Fevereiro';\n            break;\n          case '03':\n            _this.mesextenso = 'Março';\n            break;\n          case '04':\n            _this.mesextenso = 'Abril';\n            break;\n          case '05':\n            _this.mesextenso = 'Maio';\n            break;\n          case '06':\n            _this.mesextenso = 'Junho';\n            break;\n          case '07':\n            _this.mesextenso = 'Julho';\n            break;\n          case '08':\n            _this.mesextenso = 'Agosto';\n            break;\n          case '09':\n            _this.mesextenso = 'Setembro';\n            break;\n          case '10':\n            _this.mesextenso = 'Outubro';\n            break;\n          case '11':\n            _this.mesextenso = 'Novembro';\n            break;\n          case '12':\n            _this.mesextenso = 'Dezembro';\n            break;\n        }\n        form.getTextField('localdata').setText(embarcacao.cidade + ', ' + dia + ' de ' + _this.mesextenso + ' de ' + ano);\n        form.flatten();\n        const modifiedPdfBytes = yield pdfDoc.save();\n        if (!servico) {\n          _this.abrirPDFemJanela(modifiedPdfBytes);\n          console.log('PDF Criado!');\n        } else {\n          return modifiedPdfBytes;\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }\n  abrirPDFemJanela(data) {\n    const blob = new Blob([data], {\n      type: 'application/pdf'\n    });\n    const url = window.URL.createObjectURL(blob);\n    window.open(url, '_blank');\n  }\n  static #_ = this.ɵfac = function Anexo3DService_Factory(t) {\n    return new (t || Anexo3DService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Anexo3DService,\n    factory: Anexo3DService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PDFDocument","Anexo3DService","constructor","anexo3D","orgMilitar","construtor","opcao","embarcacao","servico","_this","_asyncToGenerator","pdfBytes","fetch","then","res","arrayBuffer","pdfDoc","load","form","getForm","getTextField","setText","toUpperCase","nomeEmbarcacao","compTotal","toString","compPerpendicular","bocaMoldada","pontalMoldado","areaNavegacao","hoje","Date","dia","getDate","padStart","mes","getMonth","ano","getFullYear","mesextenso","cidade","flatten","modifiedPdfBytes","save","abrirPDFemJanela","console","log","err","error","data","blob","Blob","type","url","window","URL","createObjectURL","open","_","_2","factory","ɵfac","providedIn"],"sources":["E:\\PROA\\frontPROA\\src\\app\\services\\anexos\\anexo3D.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { PDFDocument } from 'pdf-lib';\r\nimport { Embarcacao } from 'src/app/model/embarcacao';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Anexo3DService {\r\n  mesextenso?: String;\r\n  constructor() { }\r\n\r\n  async anexo3D(orgMilitar: string, construtor: string, opcao: string, embarcacao: Embarcacao, servico?: string): Promise<void | Uint8Array> {\r\n\r\n    try {\r\n\r\n      const pdfBytes = await fetch('assets/pdfanexos/Anexo3D-N211.pdf').then(res => res.arrayBuffer());\r\n      const pdfDoc = await PDFDocument.load(pdfBytes);\r\n\r\n      const form = pdfDoc.getForm();\r\n\r\n      form.getTextField('orgmilitar').setText(orgMilitar.toUpperCase());\r\n      form.getTextField('nomeconstrutor').setText(construtor.toUpperCase());\r\n      form.getTextField('nomeembarcacao').setText(embarcacao.nomeEmbarcacao);\r\n      form.getTextField('construida_alterada').setText(opcao.toUpperCase());\r\n      form.getTextField('construida_alterada2').setText(opcao.toUpperCase());\r\n      form.getTextField('comprimentototal').setText(embarcacao.compTotal.toString());\r\n      form.getTextField('comprimentoperpend').setText(embarcacao.compPerpendicular.toString());\r\n      form.getTextField('bocamoldada').setText(embarcacao.bocaMoldada.toString());\r\n      form.getTextField('pontalmoldado').setText(embarcacao.pontalMoldado.toString());\r\n      form.getTextField('areanavegacao').setText(embarcacao.areaNavegacao);\r\n\r\n      const hoje = new Date();\r\n      const dia = hoje.getDate().toString().padStart(2, '0');\r\n      const mes = (hoje.getMonth() + 1).toString().padStart(2, '0'); //Os meses são baseados em zero, então é necessário adicionar 1.\r\n      const ano = hoje.getFullYear().toString();\r\n\r\n      switch (mes){\r\n        case '01':\r\n           this.mesextenso = 'Janeiro';\r\n          break;\r\n        case '02':\r\n          this.mesextenso = 'Fevereiro';\r\n          break;\r\n        case '03':\r\n          this.mesextenso = 'Março';\r\n          break;\r\n        case '04':\r\n          this.mesextenso = 'Abril';\r\n          break;\r\n        case '05':\r\n          this.mesextenso = 'Maio';\r\n          break;\r\n        case '06':\r\n          this.mesextenso = 'Junho';\r\n          break;\r\n        case '07':\r\n          this.mesextenso = 'Julho';\r\n          break;\r\n        case '08':\r\n          this.mesextenso = 'Agosto';\r\n          break;\r\n        case '09':\r\n          this.mesextenso = 'Setembro';\r\n          break;\r\n        case '10':\r\n          this.mesextenso = 'Outubro';\r\n          break;\r\n        case '11':\r\n          this.mesextenso = 'Novembro';\r\n          break;\r\n        case '12':\r\n          this.mesextenso = 'Dezembro';\r\n          break;\r\n      }\r\n      \r\n      form.getTextField('localdata').setText(embarcacao.cidade + ', ' + dia + ' de ' + this.mesextenso + ' de ' + ano);\r\n \r\n\r\n\r\n\r\n      form.flatten();\r\n      const modifiedPdfBytes = await pdfDoc.save();\r\n      if (!servico){\r\n        this.abrirPDFemJanela(modifiedPdfBytes);\r\n        console.log('PDF Criado!');\r\n      } else {\r\n        return modifiedPdfBytes;\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  private abrirPDFemJanela(data: Uint8Array): void {\r\n    const blob = new Blob([data], { type: 'application/pdf' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}